cve_id,cve_cwe_id,cve_numbers_of_exploits,cve_vulnerability_types,cve_publish_date,cve_update_date,cve_score,cve_gained_access_level,cve_access,cve_complexity,cve_authentication,cve_confidentiality,cve_integrity,cve_availability,cve_description,cve_url,cve_date_entry_created,cve_fixed,cve_solution,cve_vulnerability_in_the_future,cve_reported_to_security_team,cve_public_date,cve_update_date,fix_commit_id,fix_file,fix_commit_message,fix_commit_link,fix_commit_author_name,fix_commit_author_username,fix_commit_author_site,fix_commit_author_organization,fix_commit_date,number_days_commit,fix_time,fix_commit_modified_lines,fix_commit_added_lines,fix_commit_deleted_lines,global_or_local_change_commit,percentage,ownership_author_changes,ownership_file_changes,ownership_file_owner
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,0036d6fd62e408109bf9f90202fa11c332fbd19b,modules/http/byterange_filter.c,not ruby,https://github.com/apache/httpd/commit/0036d6fd62e408109bf9f90202fa11c332fbd19b,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-26,13,1,2,1,1,Local,0.411686586985392,620,1506,Jim Jagielski
CVE-2005-3357,399,NA,DoS,2005-12-31,2017-10-10,5.4,None,Remote,High,Not required,None,None,Complete,"mod_ssl in Apache 2.0 up to 2.0.55, when configured with an SSL vhost with access control and a custom error 400 error page, allows remote attackers to cause a denial of service (application crash) via a non-SSL request to an SSL port, which triggers a NULL pointer dereference.",https://www.cvedetails.com/cve/CVE-2005-3357/,20051027,Yes. Fixed in Apache HTTP Server 2.2.2 and 2.0.58 http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-3357 (cve.mitre.org)
     mod_ssl: Fix a possible crash during access control checks if a non-SSL request is processed for an SSL vhost (such as the “HTTP request received on SSL port"" error message when an 400  ErrorDocument is configured, or if using ""SSLEngine optional"").
PR 37791.  [RÃ¼diger PlÃ¼m, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,2005-12-5,2005-12-12,2006-5-1,00b900faa0db3b7903fb0d356714871659347dd8,CHANGES,"* modules/ssl/ssl_engine_kernel.c (ssl_hook_Access): Omit further access control checks if SSL is not in use regardless of vhost settings.
Submitted by: Rüdiger Plüm, Joe Orton
PR: 37791",https://github.com/apache/httpd/commit/00b900faa0db3b7903fb0d356714871659347dd8,Joe Orton,notroj,,Red Hat,2005-12-6,1,6,6,11,2,Local,0.031301966154749,640,20446,Roy T. Fielding
CVE-2005-3357,399,NA,DoS,2005-12-31,2017-10-10,5.4,None,Remote,High,Not required,None,None,Complete,"mod_ssl in Apache 2.0 up to 2.0.55, when configured with an SSL vhost with access control and a custom error 400 error page, allows remote attackers to cause a denial of service (application crash) via a non-SSL request to an SSL port, which triggers a NULL pointer dereference.",https://www.cvedetails.com/cve/CVE-2005-3357/,20051027,Yes. Fixed in Apache HTTP Server 2.2.2 and 2.0.58 http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-3357 (cve.mitre.org)
     mod_ssl: Fix a possible crash during access control checks if a non-SSL request is processed for an SSL vhost (such as the “HTTP request received on SSL port"" error message when an 400  ErrorDocument is configured, or if using ""SSLEngine optional"").
PR 37791.  [RÃ¼diger PlÃ¼m, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,2005-12-5,2005-12-12,2006-5-1,00b900faa0db3b7903fb0d356714871659347dd8,modules/ssl/ssl_engine_kernel.c,"* modules/ssl/ssl_engine_kernel.c (ssl_hook_Access): Omit further access control checks if SSL is not in use regardless of vhost settings.
Submitted by: Rüdiger Plüm, Joe Orton
PR: 37791",https://github.com/apache/httpd/commit/00b900faa0db3b7903fb0d356714871659347dd8,Joe Orton,notroj,,Red Hat,2005-12-6,1,5,7,11,2,Local,0.042934693206119,261,6079,Doug MacEachern
CVE-2005-2088,,NA,XSS Bypass,2005-7-5,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"The Apache HTTP server before 1.3.34, and 2.0.x before 2.0.55, when acting as an HTTP proxy, allows remote attackers to poison the web cache, bypass web application firewall protection, and conduct XSS attacks via an HTTP request with both a ""Transfer-Encoding: chunked"" header and a Content-Length header, which causes Apache to incorrectly handle and forward the body of the request in a way that causes the receiving server to process it as a separate HTTP request, aka ""HTTP Request Smuggling.""",https://www.cvedetails.com/cve/CVE-2005-2088/,20050630,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ," *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     proxy: Correctly handle the Transfer-Encoding and Content-Length headers.  Discard the request Content-Length whenever T-E: chunked is used, always passing one of either C-L or T-E: chunked whenever the request includes a request body.  Resolves an entire class of proxy HTTP Request Splitting/Spoofing attacks.  [William Rowe]

 *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     core: If a request contains both Transfer-Encoding and Content-Length headers, remove the Content-Length, mitigating some HTTP Request Splitting/Spoofing attacks.  [Paul Querna, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-6-11,2005-10-14,01fce1eded3d0e78951125b4f26ff9e337907543,CHANGES,"proxy HTTP: If a response contains both Transfer-Encoding and a Content-Length, remove the Content-Length and don't reuse the connection, stopping some HTTP Request smuggling attacks.",https://github.com/apache/httpd/commit/01fce1eded3d0e78951125b4f26ff9e337907543,Jeff Trawick,trawick,https://github.com/trawick,Apache,2005-6-23,23,6,6,22,1,Local,0.08164321192053,1578,19328,Roy T. Fielding
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,04d692d7355b3eb32fd8e3ed4747701dcc36041b,server/mpm/winnt/mpm_winnt.c,Drop a redundant destructor.,https://github.com/apache/httpd/commit/04d692d7355b3eb32fd8e3ed4747701dcc36041b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-31,13,1,3,1,2,Local,0.297645490892936,4690,15757,Bill Stoddard
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,054db1029e2ef8c49f380f6e9758046cf4e8b066,CHANGES,"As discussed previously on-list, HTTP_IN should return EOS if it thinks there is no request body.",https://github.com/apache/httpd/commit/054db1029e2ef8c49f380f6e9758046cf4e8b066,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-5-29,29,3,3,17,0,Local,0.022182351981732,272,12262,Roy T. Fielding
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,054db1029e2ef8c49f380f6e9758046cf4e8b066,modules/http/http_protocol.c,"As discussed previously on-list, HTTP_IN should return EOS if it thinks there is no request body.",https://github.com/apache/httpd/commit/054db1029e2ef8c49f380f6e9758046cf4e8b066,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-5-29,29,14,14,17,0,Local,0.06645056726094,1230,18510,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,064786d9c2a87481be43014b95f379c344833b1e,modules/http/byterange_filter.c,fix function name in log message,https://github.com/apache/httpd/commit/064786d9c2a87481be43014b95f379c344833b1e,Stefan Fritsch,,,GeNUA mbH,2011-8-26,13,2,5,2,3,Local,0.158365261813538,248,1566,Jim Jagielski
CVE-2003-0132,,NA,DoS,2003-4-11,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"A memory leak in Apache 2.0 through 2.0.44 allows remote attackers to cause a denial of service (memory consumption) via large chunks of linefeed characters, which causes Apache to allocate 80 bytes for each linefeed.",https://www.cvedetails.com/cve/CVE-2003-0132/,20030313,Yes. Fixed in Apache HTTP Server 2.0.45: http://httpd.apache.org/security/vulnerabilities_20.html,"Simplify and shorten the code path for scanning request headers.Simplify and shorten the code path for scanning request headers.
This is the scanning logic that was subject to an unlimited search for a non-blank line between requests.  These lines each consumed 80 bytes - until memory was exhausted in the DoS attack identified by David Endler
[http://archive.apache.org/dist/httpd/patches/apply_to_2.0.44/denial_of_service_fix.patch]",No,,2004-4-2,2004-4-2,084e3181b9aaac1b73e7827f8a9c77b148de947c,CHANGES,"Simplify and shorten the code path for scanning request headers
Reviewed by: Greg Ames, Bill Rowe",https://github.com/apache/httpd/commit/084e3181b9aaac1b73e7827f8a9c77b148de947c,Brian Pane,,http://www.brianp.net/,,2003-3-29,351,2,2,33,81,Local,0.012603838441707,176,13964,Roy T. Fielding
CVE-2003-0132,,NA,DoS,2003-4-11,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"A memory leak in Apache 2.0 through 2.0.44 allows remote attackers to cause a denial of service (memory consumption) via large chunks of linefeed characters, which causes Apache to allocate 80 bytes for each linefeed.",https://www.cvedetails.com/cve/CVE-2003-0132/,20030313,Yes. Fixed in Apache HTTP Server 2.0.45: http://httpd.apache.org/security/vulnerabilities_20.html,"Simplify and shorten the code path for scanning request headers.Simplify and shorten the code path for scanning request headers.
This is the scanning logic that was subject to an unlimited search for a non-blank line between requests.  These lines each consumed 80 bytes - until memory was exhausted in the DoS attack identified by David Endler
[http://archive.apache.org/dist/httpd/patches/apply_to_2.0.44/denial_of_service_fix.patch]",No,,2004-4-2,2004-4-2,084e3181b9aaac1b73e7827f8a9c77b148de947c,server/protocol.c,"Simplify and shorten the code path for scanning request headers
Reviewed by: Greg Ames, Bill Rowe",https://github.com/apache/httpd/commit/084e3181b9aaac1b73e7827f8a9c77b148de947c,Brian Pane,,http://www.brianp.net/,,2003-3-29,351,31,112,33,81,Local,0.141149804244797,685,4853,Ryan Bloom
CVE-2003-0132,,NA,DoS,2003-4-11,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"A memory leak in Apache 2.0 through 2.0.44 allows remote attackers to cause a denial of service (memory consumption) via large chunks of linefeed characters, which causes Apache to allocate 80 bytes for each linefeed.",https://www.cvedetails.com/cve/CVE-2003-0132/,20030313,Yes. Fixed in Apache HTTP Server 2.0.45: http://httpd.apache.org/security/vulnerabilities_20.html,"Simplify and shorten the code path for scanning request headers.Simplify and shorten the code path for scanning request headers.
This is the scanning logic that was subject to an unlimited search for a non-blank line between requests.  These lines each consumed 80 bytes - until memory was exhausted in the DoS attack identified by David Endler
[http://archive.apache.org/dist/httpd/patches/apply_to_2.0.44/denial_of_service_fix.patch]",No,,2004-4-2,2004-4-2,09ce3fd2683cb72fe061f9ae515dfe90a9f1efc0,server/protocol.c,ap_rgetline_core: set the number of bytes read & copied into the caller’s buffer when returning APR_ENOSPC.  This prevents seg faults in ap_get_mime_headers_core in an error path which handles headers that are too long.,https://github.com/apache/httpd/commit/09ce3fd2683cb72fe061f9ae515dfe90a9f1efc0,Greg Ames,,,,2003-3-27,351,3,3,3,0,Local,0.027631301413204,131,4741,Ryan Bloom
CVE-2015-3183,20,NA,,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,Partial,None,"The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules/http/http_filters.c.",https://www.cvedetails.com/cve/CVE-2015-3183/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3183 (cve.mitre.org)
core: Fix chunk header parsing defect. Remove apr_brigade_flatten(), buffering and duplicated code from the HTTP_IN filter, parse chunks in a single pass with zero copy.
Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.  [Graham Leggett, Yann Ylavic]",No,2015-4-4,2015-6-9,2015-7-15,0afc2a42dc6994ec32205c9cb537386f640dcff7,modules/http/http_filters.c,Follow up to r1684513: apply missing changes voted on security@.,https://github.com/apache/httpd/commit/0afc2a42dc6994ec32205c9cb537386f640dcff7,Yann Ylavic,ylavic,https://github.com/ylavic,,2015-6-14,6,2,5,2,3,Local,0.009817045961624,44,4482,Graham Leggett
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,0c7493cfa80c2504b5a75566aae5be351f7aba36,include/ap_mmn.h,"Add MMN bump for AP_REG_DOLLAR_ENDONLY, ap_regcomp_get_default_cflags ap_regcomp_set_default_cflags and ap_regcomp_default_cflag_by_name",https://github.com/apache/httpd/commit/0c7493cfa80c2504b5a75566aae5be351f7aba36,Graham Leggett,minfrin,https://github.com/minfrin,,2018-2-16,9,4,5,4,1,Local,0.076736672051696,190,2476,William A. Rowe Jr
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,0c8afb142fd056f0d3f2667266e0ebd8559d1951,CHANGES,"The old, legacy (and unused) code in which the scoreboard was totally and completely contained in a file (SCOREBOARD_FILE) has been removed. This does not affect scoreboards which are *mapped* to files using named-shared-memory at all. This implies that scoreboards must be based, at some level, on native shared memory (mmap, shm_open, shmget, whatever), but the code has assumed that for quite awhile now. Having the scoreboard be *based* on a file makes no sense today.",https://github.com/apache/httpd/commit/0c8afb142fd056f0d3f2667266e0ebd8559d1951,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2002-3-29,309,5,5,8,63,Local,0.00203925567168,24,11769,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,0c8afb142fd056f0d3f2667266e0ebd8559d1951,include/scoreboard.h,"The old, legacy (and unused) code in which the scoreboard was totally and completely contained in a file (SCOREBOARD_FILE) has been removed. This does not affect scoreboards which are *mapped* to files using named-shared-memory at all. This implies that scoreboards must be based, at some level, on native shared memory (mmap, shm_open, shmget, whatever), but the code has assumed that for quite awhile now. Having the scoreboard be *based* on a file makes no sense today.",https://github.com/apache/httpd/commit/0c8afb142fd056f0d3f2667266e0ebd8559d1951,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2002-3-29,309,0,1,8,63,Local,0.001322751322751,1,756,dgaudet
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,0c8afb142fd056f0d3f2667266e0ebd8559d1951,os/tpf/os.c,"The old, legacy (and unused) code in which the scoreboard was totally and completely contained in a file (SCOREBOARD_FILE) has been removed. This does not affect scoreboards which are *mapped* to files using named-shared-memory at all. This implies that scoreboards must be based, at some level, on native shared memory (mmap, shm_open, shmget, whatever), but the code has assumed that for quite awhile now. Having the scoreboard be *based* on a file makes no sense today.",https://github.com/apache/httpd/commit/0c8afb142fd056f0d3f2667266e0ebd8559d1951,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2002-3-29,309,0,4,8,63,Local,0.004962779156328,4,806,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,0c8afb142fd056f0d3f2667266e0ebd8559d1951,server/mpm/netware/mpm_netware.c,"The old, legacy (and unused) code in which the scoreboard was totally and completely contained in a file (SCOREBOARD_FILE) has been removed. This does not affect scoreboards which are *mapped* to files using named-shared-memory at all. This implies that scoreboards must be based, at some level, on native shared memory (mmap, shm_open, shmget, whatever), but the code has assumed that for quite awhile now. Having the scoreboard be *based* on a file makes no sense today.",https://github.com/apache/httpd/commit/0c8afb142fd056f0d3f2667266e0ebd8559d1951,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2002-3-29,309,0,1,8,63,Local,0.003449465332873,10,2899,Bradley Nicholes
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,0c8afb142fd056f0d3f2667266e0ebd8559d1951,server/mpm/prefork/prefork.c,"The old, legacy (and unused) code in which the scoreboard was totally and completely contained in a file (SCOREBOARD_FILE) has been removed. This does not affect scoreboards which are *mapped* to files using named-shared-memory at all. This implies that scoreboards must be based, at some level, on native shared memory (mmap, shm_open, shmget, whatever), but the code has assumed that for quite awhile now. Having the scoreboard be *based* on a file makes no sense today.",https://github.com/apache/httpd/commit/0c8afb142fd056f0d3f2667266e0ebd8559d1951,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2002-3-29,309,3,29,8,63,Local,0.369443290402991,3557,9628,Jim Jagielski
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,0c8afb142fd056f0d3f2667266e0ebd8559d1951,server/mpm/worker/worker.c,"The old, legacy (and unused) code in which the scoreboard was totally and completely contained in a file (SCOREBOARD_FILE) has been removed. This does not affect scoreboards which are *mapped* to files using named-shared-memory at all. This implies that scoreboards must be based, at some level, on native shared memory (mmap, shm_open, shmget, whatever), but the code has assumed that for quite awhile now. Having the scoreboard be *based* on a file makes no sense today.",https://github.com/apache/httpd/commit/0c8afb142fd056f0d3f2667266e0ebd8559d1951,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2002-3-29,309,0,3,8,63,Local,0.002523514567561,11,4359,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,0c8afb142fd056f0d3f2667266e0ebd8559d1951,server/scoreboard.c,"The old, legacy (and unused) code in which the scoreboard was totally and completely contained in a file (SCOREBOARD_FILE) has been removed. This does not affect scoreboards which are *mapped* to files using named-shared-memory at all. This implies that scoreboards must be based, at some level, on native shared memory (mmap, shm_open, shmget, whatever), but the code has assumed that for quite awhile now. Having the scoreboard be *based* on a file makes no sense today.",https://github.com/apache/httpd/commit/0c8afb142fd056f0d3f2667266e0ebd8559d1951,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2002-3-29,309,0,28,8,63,Local,0.235578583765112,682,2895,Ryan Bloom
CVE-2000-0505,Not defined,NA,,2000-5-31,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,The Apache 1.3.x HTTP server for Windows platforms allows remote attackers to list directory contents by requesting a URL containing a large number of / characters.,https://www.cvedetails.com/cve/CVE-2000-0505/,20001013,Yes. Fixed in Apache HTTP Server 1.3.14: http://httpd.apache.org/security/vulnerabilities_13.html,A security hole on Apache for Windows allows a user to view the listing of a directory instead of the default HTML page by sending a carefully constructed request.,No,,,2000-10-13,0cb233ec6c0632f1b1d4d6788045099e7bed9636,os/win32/util_win32.c,"Fix Win32 bug when pathname length exactly equals MAX_PATH.
This bug caused directory index to be displayed rather than returning an error.",https://github.com/apache/httpd/commit/0cb233ec6c0632f1b1d4d6788045099e7bed9636,Allan K. Edwards,,,,2000-6-8,1,1,2,1,1,Local,0.00187969924812,2,1064,Roy T. Fielding
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,0d1979bc036f6519b72de02f765a9b845e332598,server/mpm_common.c,getpgid() returns a pid_t,https://github.com/apache/httpd/commit/0d1979bc036f6519b72de02f765a9b845e332598,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-29,13,1,2,1,1,Global,0.085692128732067,221,2579,Jeff Trawick
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_auth_basic.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.972222222222222,140,144,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_auth_digest.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.606741573033708,216,356,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_authn_anon.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_authn_dbm.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_authn_default.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_authn_file.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_authz_dbm.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_authz_default.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_authz_groupfile.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_authz_host.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/aaa/mod_authz_user.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/arch/win32/mod_isapi.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,136,136,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/cache/mod_file_cache.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.533333333333333,160,300,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/dav/fs/mod_dav_fs.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,290,290,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/dav/main/mod_dav.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,308,308,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/experimental/mod_auth_ldap.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.698598130841122,299,428,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/experimental/util_ldap.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.708661417322835,360,508,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/filters/mod_deflate.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,180,180,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/filters/mod_ext_filter.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.03030303030303,4,132,Jeff Trawick
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/generators/mod_asis.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/generators/mod_autoindex.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/generators/mod_cgi.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,136,136,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/generators/mod_info.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.545698924731183,203,372,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/generators/mod_status.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.510416666666667,196,384,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/http/mod_mime.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/loggers/mod_log_config.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/mappers/mod_actions.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/mappers/mod_alias.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/mappers/mod_dir.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/mappers/mod_imap.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/mappers/mod_negotiation.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/mappers/mod_rewrite.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.54,216,400,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/mappers/mod_speling.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.536842105263158,204,380,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/mappers/mod_userdir.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/mappers/mod_vhost_alias.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,136,136,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/metadata/mod_cern_meta.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.536842105263158,204,380,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/metadata/mod_env.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/metadata/mod_expires.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.536842105263158,204,380,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/metadata/mod_headers.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.541666666666667,208,384,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/metadata/mod_mime_magic.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,136,136,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/metadata/mod_setenvif.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,132,132,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/metadata/mod_unique_id.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,1,136,136,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/metadata/mod_usertrack.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.541666666666667,208,384,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/proxy/mod_proxy_connect.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.448453608247423,87,194,Ian Holsman
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/proxy/mod_proxy_ftp.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.448453608247423,87,194,Ian Holsman
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/proxy/mod_proxy_http.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.442708333333333,85,192,Ian Holsman
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/proxy/mod_proxy.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.482142857142857,189,392,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,modules/ssl/mod_ssl.dsp,"Catch up with the changes to apr/build/win32ver.awk and name all loadable httpd modules as .so, internally.  Credit to Mladen Turk for identifying the issue.",https://github.com/apache/httpd/commit/0d2f3ac03e7d8c04d10fcd333256389b6bf98b5b,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,100,100,Local,0.980952380952381,412,420,William A. Rowe Jr
CVE-2007-6388,79,NA,XSS,2008-1-8,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in mod_status in the Apache HTTP Server 2.2.0 through 2.2.6, 2.0.35 through 2.0.61, and 1.3.2 through 1.3.39, when the server-status page is enabled, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.",https://www.cvedetails.com/cve/CVE-2007-6388/,20071217,"Yes. Fixed in Apache HTTP Server 2.2.8, 2.0.63 and 1.3.41: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","*) SECURITY: CVE-2007-6388 (cve.mitre.org)
mod_status: Ensure refresh parameter is numeric to prevent a possible XSS attack caused by redirecting to other URLs.
Reported by SecurityReason.  [Mark Cox, Joe Orton]",No,2007-12-15,2008-1-2,2008-1-19,0d32dc95744b81c234b76ae54d199c7d4943839f,CHANGES,"* Ensure refresh parameter is numeric to prevent a possible XSS attack caused by redirecting to other URLs. Reported by SecurityReason.
Submitted by: Mark Cox, Joe Orton
Reviewed by: security@httpd.apache.org",https://github.com/apache/httpd/commit/0d32dc95744b81c234b76ae54d199c7d4943839f,Ruediger Pluem,,,,2007-12-28,1,5,5,17,12,Global,0.024316426633271,932,38328,Jim Jagielski
CVE-2007-6388,79,NA,XSS,2008-1-8,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in mod_status in the Apache HTTP Server 2.2.0 through 2.2.6, 2.0.35 through 2.0.61, and 1.3.2 through 1.3.39, when the server-status page is enabled, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.",https://www.cvedetails.com/cve/CVE-2007-6388/,20071217,"Yes. Fixed in Apache HTTP Server 2.2.8, 2.0.63 and 1.3.41: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","*) SECURITY: CVE-2007-6388 (cve.mitre.org)
mod_status: Ensure refresh parameter is numeric to prevent a possible XSS attack caused by redirecting to other URLs.
Reported by SecurityReason.  [Mark Cox, Joe Orton]",No,2007-12-15,2008-1-2,2008-1-19,0d32dc95744b81c234b76ae54d199c7d4943839f,modules/generators/mod_status.c,"* Ensure refresh parameter is numeric to prevent a possible XSS attack caused by redirecting to other URLs. Reported by SecurityReason.
Submitted by: Mark Cox, Joe Orton
Reviewed by: security@httpd.apache.org",https://github.com/apache/httpd/commit/0d32dc95744b81c234b76ae54d199c7d4943839f,Ruediger Pluem,,,,2007-12-28,1,12,24,17,12,Global,0.004681100058514,24,5127,Jeff Trawick
CVE-2018-1283,20,NA,,2018-3-26,2018-6-2,3.5,None,Remote,Medium,Single system,None,Partial,None,"In Apache httpd 2.4.0 to 2.4.29, when mod_session is configured to forward its session data to CGI applications (SessionEnv on, not the default), a remote user may influence their content by using a ""Session"" header. This comes from the ""HTTP_SESSION"" variable name used by mod_session to forward its data to CGIs, since the prefix ""HTTP_"" is also used by the Apache HTTP Server to pass HTTP header fields, per CGI specifications.",https://www.cvedetails.com/cve/CVE-2018-1283/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2018-1283 (cve.mitre.org)
mod_session: CGI-like applications that intend to read from mod_session's  'SessionEnv ON' could be fooled into reading user-supplied data instead.
[Yann Ylavic]", No,2017-11-14,2018-3-21,2018-3-21,0f80cb5b38cb9f85ba90b97045d921e1f3ca6d2c,CHANGES,mod_session: Strip Session header when SessionEnv is on.,https://github.com/apache/httpd/commit/0f80cb5b38cb9f85ba90b97045d921e1f3ca6d2c,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-16,1,2,2,10,5,Local,0.017186910131336,865,50329,Jim Jagielski
CVE-2018-1283,20,NA,,2018-3-26,2018-6-2,3.5,None,Remote,Medium,Single system,None,Partial,None,"In Apache httpd 2.4.0 to 2.4.29, when mod_session is configured to forward its session data to CGI applications (SessionEnv on, not the default), a remote user may influence their content by using a ""Session"" header. This comes from the ""HTTP_SESSION"" variable name used by mod_session to forward its data to CGIs, since the prefix ""HTTP_"" is also used by the Apache HTTP Server to pass HTTP header fields, per CGI specifications.",https://www.cvedetails.com/cve/CVE-2018-1283/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2018-1283 (cve.mitre.org)
mod_session: CGI-like applications that intend to read from mod_session's  'SessionEnv ON' could be fooled into reading user-supplied data instead.
[Yann Ylavic]", No,2017-11-14,2018-3-21,2018-3-21,0f80cb5b38cb9f85ba90b97045d921e1f3ca6d2c,modules/session/mod_session.c,mod_session: Strip Session header when SessionEnv is on.,https://github.com/apache/httpd/commit/0f80cb5b38cb9f85ba90b97045d921e1f3ca6d2c,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-16,1,8,13,10,5,Local,0.013220815752461,47,3555,Ruediger Pluem
CVE-2007-1862,,NA,+Info,2007-6-4,2013-10-10,5,None,Remote,Low,Not required,Partial,None,None,"The recall_headers function in mod_mem_cache in Apache 2.2.4 does not properly copy all levels of header data, which can cause Apache to return HTTP headers containing previously used data, which could be used by remote attackers to obtain potentially sensitive information.",https://www.cvedetails.com/cve/CVE-2007-1862/,20070404,Yes. Fixed in Apache HTTP Server 2.2.6. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-1862 (cve.mitre.org)
     mod_mem_cache: Copy headers into longer lived storage, header names and values could previously point to cleaned up storage.  PR 41551.
[Davi Arnaut <davi haxent.com.br>]",No,2007-4-26,2007-6-1,2007-9-7,0fcdd1e21cd2f75c1887e7872e5f0ca79a51f8f4,CHANGES,"SECURITY: CVE-2007-1862 (cve.mitre.org)
mod_mem_cache: Copy headers into longer lived storage, header names and values could previously point to cleaned up storage

PR: 41551
Submitted by: Davi Arnaut <davi haxent.com.br>
Reviewed by: covener",https://github.com/apache/httpd/commit/0fcdd1e21cd2f75c1887e7872e5f0ca79a51f8f4,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2007-6-1,31,5,5,25,4,Global,0.000226592948427,5,22066,Roy T. Fielding
CVE-2007-1862,,NA,+Info,2007-6-4,2013-10-10,5,None,Remote,Low,Not required,Partial,None,None,"The recall_headers function in mod_mem_cache in Apache 2.2.4 does not properly copy all levels of header data, which can cause Apache to return HTTP headers containing previously used data, which could be used by remote attackers to obtain potentially sensitive information.",https://www.cvedetails.com/cve/CVE-2007-1862/,20070404,Yes. Fixed in Apache HTTP Server 2.2.6. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-1862 (cve.mitre.org)
     mod_mem_cache: Copy headers into longer lived storage, header names and values could previously point to cleaned up storage.  PR 41551.
[Davi Arnaut <davi haxent.com.br>]",No,2007-4-26,2007-6-1,2007-9-7,0fcdd1e21cd2f75c1887e7872e5f0ca79a51f8f4,modules/cache/mod_mem_cache.c,"SECURITY: CVE-2007-1862 (cve.mitre.org)
mod_mem_cache: Copy headers into longer lived storage, header names and values could previously point to cleaned up storage

PR: 41551
Submitted by: Davi Arnaut <davi haxent.com.br>
Reviewed by: covener",https://github.com/apache/httpd/commit/0fcdd1e21cd2f75c1887e7872e5f0ca79a51f8f4,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2007-6-1,31,20,24,25,4,Global,0.005560704355885,24,4316,Bill Stoddard
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,10c3f834c24c793597d4f9db0128d640e9202a88,CHANGES,Allow worker MPM to build on systems without pthread_kill().,https://github.com/apache/httpd/commit/10c3f834c24c793597d4f9db0128d640e9202a88,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-4-3,309,3,3,18,4,Local,0.037953236191122,448,11804,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,10c3f834c24c793597d4f9db0128d640e9202a88,server/mpm/worker/config5.m4,Allow worker MPM to build on systems without pthread_kill().,https://github.com/apache/httpd/commit/10c3f834c24c793597d4f9db0128d640e9202a88,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-4-3,309,1,1,18,4,Local,0.166666666666667,1,6,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,10c3f834c24c793597d4f9db0128d640e9202a88,server/mpm/worker/worker.c,Allow worker MPM to build on systems without pthread_kill().,https://github.com/apache/httpd/commit/10c3f834c24c793597d4f9db0128d640e9202a88,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-4-3,309,14,18,18,4,Local,0.186885994973726,818,4377,Ryan Bloom
CVE-2003-0020,,NA,,2003-3-18,2017-10-9,5,None,Remote,Low,Not required,None,Partial,None,"Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.",https://www.cvedetails.com/cve/CVE-2003-0020/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49 and 1.3.31 http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"SECURITY: CVE-2003-0020 (cve.mitre.org)
     Escape arbitrary data before writing into the errorlog. Unescaped
     errorlogs are still possible using the compile time switch
     ""-DAP_UNSAFE_ERROR_LOG_UNESCAPED"".  [Geoffrey Young, André Malo]",No,,2003-2-24,2004-4-19,1118993c5c938d7a6172c198c58038c228dd6442,CHANGES,allow unescaped errorlogs via compile time switch Submitted by: Geoffrey Young <geoff modperlcookbook.org>,https://github.com/apache/httpd/commit/1118993c5c938d7a6172c198c58038c228dd6442,Andre Malo,,,,2004-1-12,58,4,4,23,3,Global,0.037186167693037,628,16888,Roy T. Fielding
CVE-2003-0020,,NA,,2003-3-18,2017-10-9,5,None,Remote,Low,Not required,None,Partial,None,"Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.",https://www.cvedetails.com/cve/CVE-2003-0020/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49 and 1.3.31 http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"SECURITY: CVE-2003-0020 (cve.mitre.org)
     Escape arbitrary data before writing into the errorlog. Unescaped
     errorlogs are still possible using the compile time switch
     ""-DAP_UNSAFE_ERROR_LOG_UNESCAPED"".  [Geoffrey Young, André Malo]",No,,2003-2-24,2004-4-19,1118993c5c938d7a6172c198c58038c228dd6442,server/log.c,allow unescaped errorlogs via compile time switch Submitted by: Geoffrey Young <geoff modperlcookbook.org>,https://github.com/apache/httpd/commit/1118993c5c938d7a6172c198c58038c228dd6442,Andre Malo,,,,2004-1-12,58,19,22,23,3,Global,0.011538461538462,39,3380,Roy T. Fielding
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,1163e462645068371dd46aaf6e50fa6397813520,CHANGES,Allow for setting of sticky session split char… Bugz 53893,https://github.com/apache/httpd/commit/1163e462645068371dd46aaf6e50fa6397813520,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-1,26,4,5,32,5,Global,0.37324667202716,16711,44772,Jim Jagielski
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,1163e462645068371dd46aaf6e50fa6397813520,docs/manual/mod/mod_proxy.xml,Allow for setting of sticky session split char… Bugz 53893,https://github.com/apache/httpd/commit/1163e462645068371dd46aaf6e50fa6397813520,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-1,26,7,7,32,5,Global,0.104395604395604,570,5460,Andre Malo
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,1163e462645068371dd46aaf6e50fa6397813520,include/ap_mmn.h,Allow for setting of sticky session split char… Bugz 53893,https://github.com/apache/httpd/commit/1163e462645068371dd46aaf6e50fa6397813520,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-1,26,2,3,32,5,Global,0.041242362525458,81,1964,Roy T. Fielding
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,1163e462645068371dd46aaf6e50fa6397813520,modules/proxy/mod_proxy_balancer.c,Allow for setting of sticky session split char… Bugz 53893,https://github.com/apache/httpd/commit/1163e462645068371dd46aaf6e50fa6397813520,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-1,26,4,7,32,5,Global,0.595806218365871,4120,6915,Jim Jagielski
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,1163e462645068371dd46aaf6e50fa6397813520,modules/proxy/mod_proxy.c,Allow for setting of sticky session split char… Bugz 53893,https://github.com/apache/httpd/commit/1163e462645068371dd46aaf6e50fa6397813520,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-1,26,13,13,32,5,Global,0.151130415413743,1357,8979,William A. Rowe Jr
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,1163e462645068371dd46aaf6e50fa6397813520,modules/proxy/mod_proxy.h,Allow for setting of sticky session split char… Bugz 53893,https://github.com/apache/httpd/commit/1163e462645068371dd46aaf6e50fa6397813520,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-1,26,1,1,32,5,Global,0.155717761557178,960,6165,Mladen Turk
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,1163e462645068371dd46aaf6e50fa6397813520,modules/proxy/proxy_util.c,Allow for setting of sticky session split char… Bugz 53893,https://github.com/apache/httpd/commit/1163e462645068371dd46aaf6e50fa6397813520,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-1,26,1,1,32,5,Global,0.147801769586944,3224,21813,Mladen Turk
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,120904504598e4c6fb1ac14daefac6c6a25dda50,docs/manual/mod/core.xml,Renaming this directive to HttpProtocolOptions after discussion on dev@,https://github.com/apache/httpd/commit/120904504598e4c6fb1ac14daefac6c6a25dda50,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-17,60,10,20,15,15,Global,0.022160223196493,278,12545,Joshua Slive
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,120904504598e4c6fb1ac14daefac6c6a25dda50,server/core.c,Renaming this directive to HttpProtocolOptions after discussion on dev@,https://github.com/apache/httpd/commit/120904504598e4c6fb1ac14daefac6c6a25dda50,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-17,60,5,10,15,15,Global,0.150847159523949,2573,17057,Ryan Bloom
CVE-2004-0113,,NA,DoS,2004-3-29,2017-10-9,5,None,Remote,Low,Not required,None,None,Partial,Memory leak in ssl_engine_io.c for mod_ssl in Apache 2 before 2.0.49 allows remote attackers to cause a denial of service (memory consumption) via plain HTTP requests to the SSL port of an SSL-enabled server.,https://www.cvedetails.com/cve/CVE-2004-0113/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0113 (cve.mitre.org)
     mod_ssl: Fix a memory leak in plain-HTTP-on-SSL-port handling.
     PR 27106.  [Joe Orton]

https://marc.info/?l=apache-cvs&m=107869699329638",No,,2004-2-20,2004-3-19,1239563b37003eeb8cb7b9b076203ba5a003c83a,modules/ssl/ssl_engine_io.c,"* modules/ssl/ssl_engine_io.c (ssl_io_filter_disable, ssl_io_filter_error): Clear the SSL * pointer in the SSLConnRec too.",https://github.com/apache/httpd/commit/1239563b37003eeb8cb7b9b076203ba5a003c83a,Joe Orton,notroj,,Red Hat,2004-2-29,5,3,5,3,2,Global,0.007316313823163,47,6424,William A. Rowe Jr
CVE-2014-3583,119,NA,DoS Overflow,2014-12-15,2017-10-2,5,None,Remote,Low,Not required,None,None,Partial,The handle_headers function in mod_proxy_fcgi.c in the mod_proxy_fcgi module in the Apache HTTP Server 2.4.10 allows remote FastCGI servers to cause a denial of service (buffer over-read and daemon crash) via long response headers.,https://www.cvedetails.com/cve/CVE-2014-3583/,20140514,Yes. Fixed in Apache HTTP Server 2.4.12: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-3583 (cve.mitre.org)
mod_proxy_fcgi: Fix a potential crash due to buffer over-read, with response headers' size above 8K.  [Yann Ylavic, Jeff Trawick]",No,2014-9-17,2014-11-12,2015-1-30,1245aa5f388130c5712cc8542d0e67f23b3da23b,CHANGES,mod_proxy_fcgi: CVE-2014-3583: Fix a potential crash with response headers’ size above 8K.,https://github.com/apache/httpd/commit/1245aa5f388130c5712cc8542d0e67f23b3da23b,Yann Ylavic,ylavic,https://github.com/ylavic,,2014-11-12,7,4,4,27,6,Local,0.003126137507227,146,46703,Jim Jagielski
CVE-2014-3583,119,NA,DoS Overflow,2014-12-15,2017-10-2,5,None,Remote,Low,Not required,None,None,Partial,The handle_headers function in mod_proxy_fcgi.c in the mod_proxy_fcgi module in the Apache HTTP Server 2.4.10 allows remote FastCGI servers to cause a denial of service (buffer over-read and daemon crash) via long response headers.,https://www.cvedetails.com/cve/CVE-2014-3583/,20140514,Yes. Fixed in Apache HTTP Server 2.4.12: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-3583 (cve.mitre.org)
mod_proxy_fcgi: Fix a potential crash due to buffer over-read, with response headers' size above 8K.  [Yann Ylavic, Jeff Trawick]",No,2014-9-17,2014-11-12,2015-1-30,1245aa5f388130c5712cc8542d0e67f23b3da23b,modules/proxy/mod_proxy_fcgi.c,mod_proxy_fcgi: CVE-2014-3583: Fix a potential crash with response headers’ size above 8K.,https://github.com/apache/httpd/commit/1245aa5f388130c5712cc8542d0e67f23b3da23b,Yann Ylavic,ylavic,https://github.com/ylavic,,2014-11-12,7,23,29,27,6,Local,0.014746543778802,32,2170,Garrett Rooney
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,132589abbe4cee0465be87db2c929f8261c608dc,modules/http/byterange_filter.c,* Silence compiler warning,https://github.com/apache/httpd/commit/132589abbe4cee0465be87db2c929f8261c608dc,Ruediger Pluem,,,,2011-8-28,13,1,2,1,1,Local,0.1,166,1660,Jim Jagielski
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,13724ebcfadbfdb43b3a2ca99a5a5176f37328ba,libhttpd.dsp,Accomodate the new server/util_time.c module on win32,https://github.com/apache/httpd/commit/13724ebcfadbfdb43b3a2ca99a5a5176f37328ba,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-19,17,4,4,4,0,Local,0.963041182682154,912,947,William A. Rowe Jr
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,139f9615419875be2b4d2c2b49323c747a936408,CHANGES,"AcceptPathInfo was totally backwards... it would reject when set to on and by default and accept when set to off for the default handler, and would reject only if set to accept for mod_cgi(d) and mod_isapi. [PR: 8234]",https://github.com/apache/httpd/commit/139f9615419875be2b4d2c2b49323c747a936408,Cliff Woolley,,,,2002-4-22,9,3,3,25,9,Local,0.009522218509856,114,11972,Roy T. Fielding
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,139f9615419875be2b4d2c2b49323c747a936408,modules/arch/win32/mod_isapi.c,"AcceptPathInfo was totally backwards... it would reject when set to on and by default and accept when set to off for the default handler, and would reject only if set to accept for mod_cgi(d) and mod_isapi. [PR: 8234]",https://github.com/apache/httpd/commit/139f9615419875be2b4d2c2b49323c747a936408,Cliff Woolley,,,,2002-4-22,9,5,6,25,9,Local,0.008818703855619,43,4876,William A. Rowe Jr
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,139f9615419875be2b4d2c2b49323c747a936408,modules/generators/mod_cgi.c,"AcceptPathInfo was totally backwards... it would reject when set to on and by default and accept when set to off for the default handler, and would reject only if set to accept for mod_cgi(d) and mod_isapi. [PR: 8234]",https://github.com/apache/httpd/commit/139f9615419875be2b4d2c2b49323c747a936408,Cliff Woolley,,,,2002-4-22,9,4,5,25,9,Local,0.023116181326929,77,3331,Ryan Bloom
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,139f9615419875be2b4d2c2b49323c747a936408,modules/generators/mod_cgid.c,"AcceptPathInfo was totally backwards... it would reject when set to on and by default and accept when set to off for the default handler, and would reject only if set to accept for mod_cgi(d) and mod_isapi. [PR: 8234]",https://github.com/apache/httpd/commit/139f9615419875be2b4d2c2b49323c747a936408,Cliff Woolley,,,,2002-4-22,9,4,5,25,9,Local,0.016344725111441,55,3365,Ryan Bloom
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,139f9615419875be2b4d2c2b49323c747a936408,server/core.c,"AcceptPathInfo was totally backwards... it would reject when set to on and by default and accept when set to off for the default handler, and would reject only if set to accept for mod_cgi(d) and mod_isapi. [PR: 8234]",https://github.com/apache/httpd/commit/139f9615419875be2b4d2c2b49323c747a936408,Cliff Woolley,,,,2002-4-22,9,9,15,25,9,Local,0.007160209691855,56,7821,Ryan Bloom
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,13ec606e595e79706882f703f617c5620455daeb,modules/http/http_protocol.c,"Strengthen error-detection code in HTTP_IN and core_input_filter so that invalid readbytes or errors reading brigades are properly handled.
Reviewed by: Brian Pane",https://github.com/apache/httpd/commit/13ec606e595e79706882f703f617c5620455daeb,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-6-27,29,17,35,21,23,Local,0.080962221162507,1528,18873,Ryan Bloom
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,13ec606e595e79706882f703f617c5620455daeb,server/core.c,"Strengthen error-detection code in HTTP_IN and core_input_filter so that invalid readbytes or errors reading brigades are properly handled.
Reviewed by: Brian Pane",https://github.com/apache/httpd/commit/13ec606e595e79706882f703f617c5620455daeb,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-6-27,29,4,9,21,23,Local,0.069864186957054,571,8173,Ryan Bloom
CVE-2012-3499,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving hostnames and URIs in the (1) mod_imagemap, (2) mod_info, (3) mod_ldap, (4) mod_proxy_ftp, and (5) mod_status modules.",https://www.cvedetails.com/cve/CVE-2012-3499/,20120614,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-3499 (cve.mitre.org)
Various XSS flaws due to unescaped hostnames and URIs HTML output in mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.
[Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]",No,2012-7-11,2013-2-18,2013-2-25,142273c1b6036521d50ab6c0e89cb593064dfbc3,modules/mappers/mod_imagemap.c,Fixed type mismatch.,https://github.com/apache/httpd/commit/142273c1b6036521d50ab6c0e89cb593064dfbc3,Guenter Knauf,,,,2012-12-4,13,2,4,2,2,Local,0.00232423009878,4,1721,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,1514e64b88e9ce2f7a37cb149b776e534aa3d1c4,modules/http/byterange_filter.c,Reset with latest,https://github.com/apache/httpd/commit/1514e64b88e9ce2f7a37cb149b776e534aa3d1c4,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-26,13,147,252,147,105,Local,0.393980848153215,576,1462,Jim Jagielski
CVE-2015-3183,20,NA,,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,Partial,None,"The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules/http/http_filters.c.",https://www.cvedetails.com/cve/CVE-2015-3183/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3183 (cve.mitre.org)
core: Fix chunk header parsing defect. Remove apr_brigade_flatten(), buffering and duplicated code from the HTTP_IN filter, parse chunks in a single pass with zero copy.
Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.  [Graham Leggett, Yann Ylavic]",No,2015-4-4,2015-6-9,2015-7-15,16aa0e9b0c4a2843a919d548ba99ca815b53d920,CHANGES,Follow up to r1685345: CHANGES entry.,https://github.com/apache/httpd/commit/16aa0e9b0c4a2843a919d548ba99ca815b53d920,Yann Ylavic,ylavic,https://github.com/ylavic,,2015-6-14,6,4,4,4,0,Local,0.0083820703925,397,47363,Jim Jagielski
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,16f4d2989a6541e7b60db171cd735f50bc13e9f2,modules/http/byterange_filter.c,* Whitespace police. No functional change,https://github.com/apache/httpd/commit/16f4d2989a6541e7b60db171cd735f50bc13e9f2,Ruediger Pluem,,,,2011-9-1,13,2,4,2,2,Local,0.115702479338843,210,1815,Jim Jagielski
CVE-2000-0913,Not defined,NA,,2000-12-19,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,mod_rewrite in Apache 1.3.12 and earlier allows remote attackers to read arbitrary files if a RewriteRule directive is expanded to include a filename whose name contains a regular expression.,https://www.cvedetails.com/cve/CVE-2000-0913/,20010122,Yes. Fixed in Apache HTTP Server 1.3.14: http://httpd.apache.org/security/vulnerabilities_13.html ,"The Rewrite module, mod_rewrite, can allow access to any file on the web server. The vulnerability occurs only with certain specific cases of using regular expression references in RewriteRule directives: If the destination of a RewriteRule contains regular expression references then an attacker will be able to access any file on the server.",No,,2000-9-29,2000-10-13,1740c8332fde78118a84a5344dd76f830b31d2d1,modules/mappers/mod_rewrite.c,Fix a security problem that affects certain configuraions of mod_rewrite,https://github.com/apache/httpd/commit/1740c8332fde78118a84a5344dd76f830b31d2d1,Tony Finch,fanf2,https://github.com/fanf2,PiBSD,2000-9-23,1,175,486,182,316,Global,0.071660277204365,486,6782,Roy T. Fielding
CVE-2000-0913,Not defined,NA,,2000-12-19,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,mod_rewrite in Apache 1.3.12 and earlier allows remote attackers to read arbitrary files if a RewriteRule directive is expanded to include a filename whose name contains a regular expression.,https://www.cvedetails.com/cve/CVE-2000-0913/,20010122,Yes. Fixed in Apache HTTP Server 1.3.14: http://httpd.apache.org/security/vulnerabilities_13.html ,"The Rewrite module, mod_rewrite, can allow access to any file on the web server. The vulnerability occurs only with certain specific cases of using regular expression references in RewriteRule directives: If the destination of a RewriteRule contains regular expression references then an attacker will be able to access any file on the server.",No,,2000-9-29,2000-10-13,1740c8332fde78118a84a5344dd76f830b31d2d1,modules/mappers/mod_rewrite.h,Fix a security problem that affects certain configuraions of mod_rewrite,https://github.com/apache/httpd/commit/1740c8332fde78118a84a5344dd76f830b31d2d1,Tony Finch,fanf2,https://github.com/fanf2,PiBSD,2000-9-23,1,7,12,182,316,Global,0.012526096033403,12,958,Roy T. Fielding
CVE-2007-4465,79,NA, XSS,2007-9-5,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in mod_autoindex.c in the Apache HTTP Server before 2.2.6, when the charset on a server-generated page is not defined, allows remote attackers to inject arbitrary web script or HTML via the P parameter using the UTF-7 charset. NOTE: it could be argued that this issue is due to a design limitation of browsers that attempt to perform automatic content type detection.",https://www.cvedetails.com/cve/CVE-2007-4465/,20070821,"Yes. The Apache security team believe that this issue is due to web browsers that are violating RFC2616. However, Apache 2.2.6 and 2.0.61 add a workaround for such browsers by adding Type and Charset options to IndexOptions directive. This allows a site administrator to explicitly set the content-type and charset of the generated directory index page. 

This is actually a flaw in browsers that do not derive the response character set as required by RFC 2616. This does not affect the default configuration of Apache httpd in Red Hat products and will only affect customers who have removed the ""AddDefaultCharset"" directive and are using directory indexes. The Red Hat Security Response Team has rated this issue as having low security impact, a future update may address this flaw. https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=CVE-2007-4465 ","*) mod_autoindex: Add in Type and Charset options to IndexOptions directive. This allows the admin to explicitly set the content-type and charset of the generated page and is therefore a viable workaround for buggy browsers affected by CVE-2007-4465 (cve.mitre.org). [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,,,,17f0723bc6325e12de3257e789fbbf754a6dd5f0,CHANGES,IndexOptions ContentType=text/html Charset=UTF-8 magic.,https://github.com/apache/httpd/commit/17f0723bc6325e12de3257e789fbbf754a6dd5f0,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-8-28,1,5,5,36,2,Global,0.415971458461869,15507,37279,Jim Jagielski
CVE-2007-4465,79,NA, XSS,2007-9-5,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in mod_autoindex.c in the Apache HTTP Server before 2.2.6, when the charset on a server-generated page is not defined, allows remote attackers to inject arbitrary web script or HTML via the P parameter using the UTF-7 charset. NOTE: it could be argued that this issue is due to a design limitation of browsers that attempt to perform automatic content type detection.",https://www.cvedetails.com/cve/CVE-2007-4465/,20070821,"Yes. The Apache security team believe that this issue is due to web browsers that are violating RFC2616. However, Apache 2.2.6 and 2.0.61 add a workaround for such browsers by adding Type and Charset options to IndexOptions directive. This allows a site administrator to explicitly set the content-type and charset of the generated directory index page. 

This is actually a flaw in browsers that do not derive the response character set as required by RFC 2616. This does not affect the default configuration of Apache httpd in Red Hat products and will only affect customers who have removed the ""AddDefaultCharset"" directive and are using directory indexes. The Red Hat Security Response Team has rated this issue as having low security impact, a future update may address this flaw. https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=CVE-2007-4465 ","*) mod_autoindex: Add in Type and Charset options to IndexOptions directive. This allows the admin to explicitly set the content-type and charset of the generated page and is therefore a viable workaround for buggy browsers affected by CVE-2007-4465 (cve.mitre.org). [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,,,,17f0723bc6325e12de3257e789fbbf754a6dd5f0,modules/generators/mod_autoindex.c,IndexOptions ContentType=text/html Charset=UTF-8 magic.,https://github.com/apache/httpd/commit/17f0723bc6325e12de3257e789fbbf754a6dd5f0,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-8-28,1,31,33,36,2,Global,0.006317835736271,39,6173,Roy T. Fielding
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,18b0d5f158afcf906e016e362956830e35085e70,modules/proxy/mod_proxy.mak,/home/cvs/httpd-2.0/ no longer tracks makefiles. But at least incorporate all the new proxy modules into BaseAddr.ref for win32.,https://github.com/apache/httpd/commit/18b0d5f158afcf906e016e362956830e35085e70,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-28,17,0,573,6,577,Local,0.966273187183811,1146,1186,William A. Rowe Jr
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,18b0d5f158afcf906e016e362956830e35085e70,os/win32/BaseAddr.ref,/home/cvs/httpd-2.0/ no longer tracks makefiles. But at least incorporate all the new proxy modules into BaseAddr.ref for win32.,https://github.com/apache/httpd/commit/18b0d5f158afcf906e016e362956830e35085e70,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-28,17,6,10,6,577,Local,0.364864864864865,27,74,Bill Stoddard
CVE-2018-1302,476,NA,,2018-3-26,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.30 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerability hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.",https://www.cvedetails.com/cve/CVE-2018-1302/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2018-1302 (cve.mitre.org)
mod_http2: Potential crash w/ mod_http2.
[Stefan Eissing]", No,2018-1-23,2018-3-21,2018-3-21,1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,CHANGES,"On the trunk:
mod_http2: removed obsolete stream detach code, no longer generating events in beam shutdown on pool destroy. 
",https://github.com/apache/httpd/commit/1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,Stefan Eissing,,,greenbytes GmbH,2018-1-30,1,3,3,20,27,Global,0.027538623665321,1385,50293,Jim Jagielski
CVE-2018-1302,476,NA,,2018-3-26,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.30 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerability hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.",https://www.cvedetails.com/cve/CVE-2018-1302/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2018-1302 (cve.mitre.org)
mod_http2: Potential crash w/ mod_http2.
[Stefan Eissing]", No,2018-1-23,2018-3-21,2018-3-21,1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,modules/http2/h2_bucket_beam.c,"On the trunk:
mod_http2: removed obsolete stream detach code, no longer generating events in beam shutdown on pool destroy. 
",https://github.com/apache/httpd/commit/1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,Stefan Eissing,,,greenbytes GmbH,2018-1-30,1,14,19,20,27,Global,0.994713656387665,3387,3405,Stefan Eissing
CVE-2018-1302,476,NA,,2018-3-26,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.30 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerability hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.",https://www.cvedetails.com/cve/CVE-2018-1302/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2018-1302 (cve.mitre.org)
mod_http2: Potential crash w/ mod_http2.
[Stefan Eissing]", No,2018-1-23,2018-3-21,2018-3-21,1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,modules/http2/h2_stream.c,"On the trunk:
mod_http2: removed obsolete stream detach code, no longer generating events in beam shutdown on pool destroy. 
",https://github.com/apache/httpd/commit/1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,Stefan Eissing,,,greenbytes GmbH,2018-1-30,1,1,12,20,27,Global,0.919562670831706,4710,5122,Stefan Eissing
CVE-2018-1302,476,NA,,2018-3-26,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.30 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerability hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.",https://www.cvedetails.com/cve/CVE-2018-1302/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2018-1302 (cve.mitre.org)
mod_http2: Potential crash w/ mod_http2.
[Stefan Eissing]", No,2018-1-23,2018-3-21,2018-3-21,1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,modules/http2/h2_stream.h,"On the trunk:
mod_http2: removed obsolete stream detach code, no longer generating events in beam shutdown on pool destroy. 
",https://github.com/apache/httpd/commit/1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,Stefan Eissing,,,greenbytes GmbH,2018-1-30,1,0,9,20,27,Global,0.834451901565996,746,894,Stefan Eissing
CVE-2018-1302,476,NA,,2018-3-26,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.30 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerability hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.",https://www.cvedetails.com/cve/CVE-2018-1302/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2018-1302 (cve.mitre.org)
mod_http2: Potential crash w/ mod_http2.
[Stefan Eissing]", No,2018-1-23,2018-3-21,2018-3-21,1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,modules/http2/h2_version.h,"On the trunk:
mod_http2: removed obsolete stream detach code, no longer generating events in beam shutdown on pool destroy. 
",https://github.com/apache/httpd/commit/1acf5c9fd27cbf166c1f3e9b20e3bcfe8e790e48,Stefan Eissing,,,greenbytes GmbH,2018-1-30,1,2,4,20,27,Global,0.887814313346228,459,517,Stefan Eissing
CVE-2016-5387,284,NA,,2016-7-18,2018-1-18,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"The Apache HTTP Server through 2.4.23 follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an ""httpoxy"" issue. NOTE: the vendor states ""This mitigation has been assigned the identifier CVE-2016-5387"", in other words, this is not a CVE ID for a vulnerability.",https://www.cvedetails.com/cve/CVE-2016-5387/,20160610,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-5387 (cve.mitre.org)
     core: Mitigate [f]cgi ""httpoxy"" issues.
     [Dominic Scheirlinck <dominic vendhq.com>, Yann Ylavic]",No,2016-7-2,2016-7-18,2016-12-20,1c660f4f15083b06ce15018d304225c427973c26,server/util_script.c,"Optimization to httpoxy workaround, for 2.4.23+ only.
Submitted by: ylavic",https://github.com/apache/httpd/commit/1c660f4f15083b06ce15018d304225c427973c26,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-7-18,1,1,2,1,1,Local,0.069772779435391,304,4357,Roy T. Fielding
CVE-2002-1593,Not defined,NA,DoS,2002-9-25,2017-7-10,5,None,Remote,Low,Not required,None,None,Partial,"mod_dav in Apache before 2.0.42 does not properly handle versioning hooks, which may allow remote attackers to kill a child process via a null dereference and cause a denial of service (CPU consumption) in a preforked multi-processing module.",https://www.cvedetails.com/cve/CVE-2002-1593/,20050313,Yes. Fixed in Apache HTTP Server 2.0.42: http://httpd.apache.org/security/vulnerabilities_20.html ,"A flaw was found in handling of versioning hooks in mod_dav. An attacker could send a carefully crafted request in such a way to cause the child process handling the connection to crash. This issue will only result in a denial of service where a threaded process model is in use. 

http://archive.apache.org/dist/httpd/CHANGES_2.0
SECURITY: CVE-2002-1593 (cve.mitre.org) [CERT VU#406121]: mod_dav: Check for versioning hooks before using them. [Greg Stein]",No,,2002-9-19,2002-9-24,1d4a2d8ba571ed0be27d5631bbbf19f933bda476,modules/dav/main/mod_dav.c,"Simplify mod_dav's handler. The old mechanism would jam a handler name in whenever DAV was configured for a directory. i.e. there weren't really any tests other than ""is DAV handling this directory?"" The name was just a marker which was tested later.
The new mechanism simplies performs the test right in the handler. This is now possible since all handlers are called (before, you *had* to set your own name so that your handler would be called). Since the test is actually quite straightforward, we actually gain overall: no more fixups hook, and a couple integer comparisons (rather than a string compare).
And hoo... the code is simpler, too.
This code has been verified with ""litmus 0.8"", my own little regression script, and some hand testing of static pages and CGIs. DAV continues to work, and it doesn't appear that the changes interfered with other operation.",https://github.com/apache/httpd/commit/1d4a2d8ba571ed0be27d5631bbbf19f933bda476,Greg Stein,gstein,https://github.com/gstein,Apache,2002-9-6,15,32,90,32,58,Local,0.70021616947687,8098,11565,Greg Stein
CVE-2013-1862,310,NA,Exec Code,2013-6-10,2017-9-18,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"mod_rewrite.c in the mod_rewrite module in the Apache HTTP Server 2.2.x before 2.2.25 writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to execute arbitrary commands via an HTTP request containing an escape sequence for a terminal emulator.",https://www.cvedetails.com/cve/CVE-2013-1862/,20130219,Yes. Fixed in Apache HTTP Server 2.2.25. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2013-1862 (cve.mitre.org)
mod_rewrite: Ensure that client data written to the RewriteLog is escaped to prevent terminal escape sequences from entering the log file.  [Eric Covener, Jeff Trawick, Joe Orton]",No,2013-3-13,2013-4-19,2013-7-22,1e6505841fc0457eb25a77de20c036457929f011,server/util.c,Turn a int into a apr_size_t for a variabe used to compute a string length,https://github.com/apache/httpd/commit/1e6505841fc0457eb25a77de20c036457929f011,Christophe Jaillet,,,,2013-4-15,19,1,2,1,1,Local,0.003498250874563,28,8004,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,1efd7a3493a46b332c92bd5c7c5b4212c4c54ac1,CHANGES,"No. I don't like this patch. I like what it does [shared scoreboard for Windows, finally] but not how it's implemented.
  However it works, and is equally crufty to what already exists for  win32 listeners and other exposed data within scoreboard.c.
  To do this right, we need to drop all the external references to data within the scoreboard, and add an accessor for remaining bits (such as Win32's need for direct access to the apr_shm_t.)  And within Win32, we need to stack all this _within_ the pre-mpm hook.  But those are missions in and of themselves.",https://github.com/apache/httpd/commit/1efd7a3493a46b332c92bd5c7c5b4212c4c54ac1,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-1-25,309,2,2,66,21,Local,0.032419845960953,362,11166,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,1efd7a3493a46b332c92bd5c7c5b4212c4c54ac1,server/mpm/winnt/mpm_winnt.c,"No. I don't like this patch. I like what it does [shared scoreboard for Windows, finally] but not how it's implemented.
  However it works, and is equally crufty to what already exists for  win32 listeners and other exposed data within scoreboard.c.
  To do this right, we need to drop all the external references to data within the scoreboard, and add an accessor for remaining bits (such as Win32's need for direct access to the apr_shm_t.)  And within Win32, we need to stack all this _within_ the pre-mpm hook.  But those are missions in and of themselves.",https://github.com/apache/httpd/commit/1efd7a3493a46b332c92bd5c7c5b4212c4c54ac1,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-1-25,309,47,49,66,21,Local,0.121928407448346,1434,11761,Bill Stoddard
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,1efd7a3493a46b332c92bd5c7c5b4212c4c54ac1,server/scoreboard.c,"No. I don't like this patch. I like what it does [shared scoreboard for Windows, finally] but not how it's implemented.
  However it works, and is equally crufty to what already exists for  win32 listeners and other exposed data within scoreboard.c.
  To do this right, we need to drop all the external references to data within the scoreboard, and add an accessor for remaining bits (such as Win32's need for direct access to the apr_shm_t.)  And within Win32, we need to stack all this _within_ the pre-mpm hook.  But those are missions in and of themselves.",https://github.com/apache/httpd/commit/1efd7a3493a46b332c92bd5c7c5b4212c4c54ac1,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-1-25,309,17,36,66,21,Local,0.08710407239819,231,2652,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,1f36e470005b1fb8276c893a6458f7045d3af5c2,CHANGES,"* Fix a regression in the CVE-2011-3192 byterange fix:
  Range: bytes=-1
  Resulted in the first two bytes delivered, not in the last one.
PR: 51748
Submitted by: low_priority <lowprio20 gmail.com>
Reviewed by: rpluem",https://github.com/apache/httpd/commit/1f36e470005b1fb8276c893a6458f7045d3af5c2,Ruediger Pluem,,,,2011-9-1,13,9,9,10,1,Local,0.032756832380539,1358,41457,Jim Jagielski
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,1f36e470005b1fb8276c893a6458f7045d3af5c2,modules/http/byterange_filter.c,"* Fix a regression in the CVE-2011-3192 byterange fix:
  Range: bytes=-1
  Resulted in the first two bytes delivered, not in the last one.
PR: 51748
Submitted by: low_priority <lowprio20 gmail.com>
Reviewed by: rpluem",https://github.com/apache/httpd/commit/1f36e470005b1fb8276c893a6458f7045d3af5c2,Ruediger Pluem,,,,2011-9-1,13,1,2,10,1,Local,0.118421052631579,216,1824,Jim Jagielski
CVE-2012-3499,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving hostnames and URIs in the (1) mod_imagemap, (2) mod_info, (3) mod_ldap, (4) mod_proxy_ftp, and (5) mod_status modules.",https://www.cvedetails.com/cve/CVE-2012-3499/,20120614,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-3499 (cve.mitre.org)
Various XSS flaws due to unescaped hostnames and URIs HTML output in mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.
[Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]",No,2012-7-11,2013-2-18,2013-2-25,206cff8a039df9ab43f3c2b9b922389321105b06,modules/ldap/util_ldap_cache_mgr.c,add missing html escaping,https://github.com/apache/httpd/commit/206cff8a039df9ab43f3c2b9b922389321105b06,Stefan Fritsch,,,GeNUA mbH,2012-12-8,13,1,2,3,2,Global,0.045814977973568,104,2270,Bradley Nicholes
CVE-2012-3499,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving hostnames and URIs in the (1) mod_imagemap, (2) mod_info, (3) mod_ldap, (4) mod_proxy_ftp, and (5) mod_status modules.",https://www.cvedetails.com/cve/CVE-2012-3499/,20120614,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-3499 (cve.mitre.org)
Various XSS flaws due to unescaped hostnames and URIs HTML output in mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.
[Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]",No,2012-7-11,2013-2-18,2013-2-25,206cff8a039df9ab43f3c2b9b922389321105b06,modules/test/mod_policy.c,add missing html escaping,https://github.com/apache/httpd/commit/206cff8a039df9ab43f3c2b9b922389321105b06,Stefan Fritsch,,,GeNUA mbH,2012-12-8,13,2,3,3,2,Global,0.008823529411765,12,1360,Graham Leggett
CVE-2003-0789,,NA,,2003-11-3,2017-7-10,10,None,Remote,Low,Not required,Complete,Complete,Complete,"mod_cgid in Apache before 2.0.48, when using a threaded MPM, does not properly handle CGI redirect paths, which could cause Apache to send the output of a CGI program to the wrong client.",https://www.cvedetails.com/cve/CVE-2003-0789/,20030917,Yes. Fixed in Apache HTTP Server 2.0.48: http://httpd.apache.org/security/vulnerabilities_20.html ,"mod_cgid mishandling of CGI redirect paths could result in CGI output going to the wrong client when a threaded MPM is used.
    [CAN-2003-0789] 
(https://marc.info/?l=bugtraq&m=106761802305141&w=2)",No,2003-10-3,2003-10-27,2003-10-27,20784b13aa2fcce802cd87992a9fd59204c5baec,CHANGES,"Forward port from 2.0:
SECURITY [CAN-2003-0789]: mod_cgid: Resolve some mishandling of the AF_UNIX socket used to communicate with the cgid daemon and the CGI script.
Submitted by: Jeff Trawick",https://github.com/apache/httpd/commit/20784b13aa2fcce802cd87992a9fd59204c5baec,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-10-27,1,4,4,14,25,Local,0.008946914971171,135,15089,Roy T. Fielding
CVE-2003-0789,,NA,,2003-11-3,2017-7-10,10,None,Remote,Low,Not required,Complete,Complete,Complete,"mod_cgid in Apache before 2.0.48, when using a threaded MPM, does not properly handle CGI redirect paths, which could cause Apache to send the output of a CGI program to the wrong client.",https://www.cvedetails.com/cve/CVE-2003-0789/,20030917,Yes. Fixed in Apache HTTP Server 2.0.48: http://httpd.apache.org/security/vulnerabilities_20.html ,"mod_cgid mishandling of CGI redirect paths could result in CGI output going to the wrong client when a threaded MPM is used.
    [CAN-2003-0789] 
(https://marc.info/?l=bugtraq&m=106761802305141&w=2)",No,2003-10-3,2003-10-27,2003-10-27,20784b13aa2fcce802cd87992a9fd59204c5baec,modules/generators/mod_cgid.c,"Forward port from 2.0:
SECURITY [CAN-2003-0789]: mod_cgid: Resolve some mishandling of the AF_UNIX socket used to communicate with the cgid daemon and the CGI script.
Submitted by: Jeff Trawick",https://github.com/apache/httpd/commit/20784b13aa2fcce802cd87992a9fd59204c5baec,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-10-27,1,10,35,14,25,Local,0.007962126102862,37,4647,Ryan Bloom
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,207e0502385dbf7f357ea8f971c41860e97322ad,docs/manual/mod/core.xml,Placeholder for RegexDefaultOptions. Improvement and correction welcome.,https://github.com/apache/httpd/commit/207e0502385dbf7f357ea8f971c41860e97322ad,Christophe Jaillet,,,,2018-2-23,9,50,50,50,0,Local,0.008484120429462,113,13319,Joshua Slive
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,20933e47e6db0ad51c57060d4d16ee5ef139396c,docs/manual/mod/core.xml,Follow up to r1827599: don't mention EXTENDED. It does/can *not* work as expected for now.,https://github.com/apache/httpd/commit/20933e47e6db0ad51c57060d4d16ee5ef139396c,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-23,9,2,6,2,4,Local,0.001350844277674,18,13325,Joshua Slive
CVE-2007-6420,352,NA,Gain privileges CSRF,2008-1-11,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site request forgery (CSRF) vulnerability in the balancer-manager in mod_proxy_balancer for Apache HTTP Server 2.2.x allows remote attackers to gain privileges via unspecified vectors.,https://www.cvedetails.com/cve/CVE-2007-6420/,20071217,Yes. Fixed in Apache HTTP Server 2.2.9. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-6420 (cve.mitre.org)
mod_proxy_balancer: Prevent CSRF attacks against the balancer-manager interface.  [Joe Orton]",No,2007-10-12,2008-1-9,2008-6-14,20f3a459a1d80d476e133ab57112087818cda1cb,modules/proxy/mod_proxy_balancer.c,"No functional change, simplify the CVE-2007-6420 fix slightly, as suggested by rpluem:
modules/proxy/mod_proxy_balancer.c (balancer_init): Serialize the UUID to a string here 
(balancer_handler): ...rather than here.",https://github.com/apache/httpd/commit/20f3a459a1d80d476e133ab57112087818cda1cb,Joe Orton,notroj,,Red Hat,2008-6-6,7,10,19,10,9,Global,0.017786036633926,67,3767,Jim Jagielski
CVE-2011-3368,20,1,,2011-10-5,2018-1-8,5,None,Remote,Low,Not required,Partial,None,None,"The mod_proxy module in the Apache HTTP Server 1.3.x through 1.3.42, 2.0.x through 2.0.64, and 2.2.x through 2.2.21 does not properly interact with use of (1) RewriteRule and (2) ProxyPassMatch pattern matches for configuration of a reverse proxy, which allows remote attackers to send requests to intranet servers via a malformed URI containing an initial @ (at sign) character.",https://www.cvedetails.com/cve/CVE-2011-3368/,20110830,"Yes. Fixed in Apache HTTP Server 1.3, 2.2.22, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html
http://httpd.apache.org/security/vulnerabilities_13.html","*) SECURITY: CVE-2011-3368 (cve.mitre.org)
Reject requests where the request-URI does not match the HTTP specification, preventing unexpected expansion of target URLs in some reverse proxy configurations.  [Joe Orton]",No,2011-9-16,2011-10-5,2012-1-31,2125cb1b1f139434d5e3c69dd73487fcab8cf34a,server/protocol.c,"SECURITY (CVE-2011-3368): Prevent unintended pattern expansion in some reverse proxy configurations by strictly validating the request-URI:
* server/protocol.c (read_request_line): Send a 400 response if the request-URI does not match the grammar from RFC 2616.  This ensures the input string for RewriteRule et al really is an absolute path.
Reviewed by: rpluem, wrowe, covener, fielding",https://github.com/apache/httpd/commit/2125cb1b1f139434d5e3c69dd73487fcab8cf34a,Joe Orton,notroj,,Red Hat,2011-10-5,1,19,19,19,0,Local,0.057710893276267,418,7243,Ryan Bloom
CVE-2010-0434,200,NA,+Info,2010-3-5,2017-9-18,4.3,None,Remote,Medium,Not required,Partial,None,None,"The ap_read_request function in server/protocol.c in the Apache HTTP Server 2.2.x before 2.2.15, when a multithreaded MPM is used, does not properly handle headers in subrequests in certain circumstances involving a parent request that has a body, which might allow remote attackers to obtain sensitive information via a crafted request that triggers access to memory locations associated with an earlier request.",https://www.cvedetails.com/cve/CVE-2010-0434/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-0434 (cve.mitre.org)
Ensure each subrequest has a shallow copy of headers_in so that the parent request headers are not corrupted.  Elimiates a problematic optimization in the case of no request body.  PR 48359
[Jake Scott, William Rowe, Ruediger Pluem]",No,,2009-12-9,2010-3-5,21a756a889dbf14b63bc7d597b333ba02ac0c4f3,CHANGES,"Correctly align the behavior of headers_in to be consistent with the treatment of headers_out, resolving PR 48359 by keeping subrequest scope changes out of the main request headers.  This ensures that all requests-without-bodies behave as the requests-with-bodies code has.",https://github.com/apache/httpd/commit/21a756a889dbf14b63bc7d597b333ba02ac0c4f3,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2010-1-21,84,5,8,25,30,Global,0.064864055126957,2598,40053,Jim Jagielski
CVE-2010-0434,200,NA,+Info,2010-3-5,2017-9-18,4.3,None,Remote,Medium,Not required,Partial,None,None,"The ap_read_request function in server/protocol.c in the Apache HTTP Server 2.2.x before 2.2.15, when a multithreaded MPM is used, does not properly handle headers in subrequests in certain circumstances involving a parent request that has a body, which might allow remote attackers to obtain sensitive information via a crafted request that triggers access to memory locations associated with an earlier request.",https://www.cvedetails.com/cve/CVE-2010-0434/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-0434 (cve.mitre.org)
Ensure each subrequest has a shallow copy of headers_in so that the parent request headers are not corrupted.  Elimiates a problematic optimization in the case of no request body.  PR 48359
[Jake Scott, William Rowe, Ruediger Pluem]",No,,2009-12-9,2010-3-5,21a756a889dbf14b63bc7d597b333ba02ac0c4f3,modules/http/http_request.c,"Correctly align the behavior of headers_in to be consistent with the treatment of headers_out, resolving PR 48359 by keeping subrequest scope changes out of the main request headers.  This ensures that all requests-without-bodies behave as the requests-with-bodies code has.",https://github.com/apache/httpd/commit/21a756a889dbf14b63bc7d597b333ba02ac0c4f3,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2010-1-21,84,3,4,25,30,Global,0.129202501954652,661,5116,Roy T. Fielding
CVE-2010-0434,200,NA,+Info,2010-3-5,2017-9-18,4.3,None,Remote,Medium,Not required,Partial,None,None,"The ap_read_request function in server/protocol.c in the Apache HTTP Server 2.2.x before 2.2.15, when a multithreaded MPM is used, does not properly handle headers in subrequests in certain circumstances involving a parent request that has a body, which might allow remote attackers to obtain sensitive information via a crafted request that triggers access to memory locations associated with an earlier request.",https://www.cvedetails.com/cve/CVE-2010-0434/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-0434 (cve.mitre.org)
Ensure each subrequest has a shallow copy of headers_in so that the parent request headers are not corrupted.  Elimiates a problematic optimization in the case of no request body.  PR 48359
[Jake Scott, William Rowe, Ruediger Pluem]",No,,2009-12-9,2010-3-5,21a756a889dbf14b63bc7d597b333ba02ac0c4f3,modules/metadata/mod_headers.c,"Correctly align the behavior of headers_in to be consistent with the treatment of headers_out, resolving PR 48359 by keeping subrequest scope changes out of the main request headers.  This ensures that all requests-without-bodies behave as the requests-with-bodies code has.",https://github.com/apache/httpd/commit/21a756a889dbf14b63bc7d597b333ba02ac0c4f3,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2010-1-21,84,10,26,25,30,Global,0.021565869667136,46,2133,Bill Stoddard
CVE-2010-0434,200,NA,+Info,2010-3-5,2017-9-18,4.3,None,Remote,Medium,Not required,Partial,None,None,"The ap_read_request function in server/protocol.c in the Apache HTTP Server 2.2.x before 2.2.15, when a multithreaded MPM is used, does not properly handle headers in subrequests in certain circumstances involving a parent request that has a body, which might allow remote attackers to obtain sensitive information via a crafted request that triggers access to memory locations associated with an earlier request.",https://www.cvedetails.com/cve/CVE-2010-0434/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-0434 (cve.mitre.org)
Ensure each subrequest has a shallow copy of headers_in so that the parent request headers are not corrupted.  Elimiates a problematic optimization in the case of no request body.  PR 48359
[Jake Scott, William Rowe, Ruediger Pluem]",No,,2009-12-9,2010-3-5,21a756a889dbf14b63bc7d597b333ba02ac0c4f3,server/protocol.c,"Correctly align the behavior of headers_in to be consistent with the treatment of headers_out, resolving PR 48359 by keeping subrequest scope changes out of the main request headers.  This ensures that all requests-without-bodies behave as the requests-with-bodies code has.",https://github.com/apache/httpd/commit/21a756a889dbf14b63bc7d597b333ba02ac0c4f3,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2010-1-21,84,7,17,25,30,Global,0.012811488103618,91,7103,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,234bb5c481a13f860809809b24ba49a57c23dfef,modules/http/byterange_filter.c,remove merge hit r1161778,https://github.com/apache/httpd/commit/234bb5c481a13f860809809b24ba49a57c23dfef,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-26,13,0,3,0,3,Local,0.409333333333333,614,1500,Jim Jagielski
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,23be3fee64225c9a8fe1d8cfc079abe5dbf6d9e5,server/protocol.c,Also catch invalid spaces between the URI <> Protocol in StrictWhitespace mode. (matching the test for the Method <> URI),https://github.com/apache/httpd/commit/23be3fee64225c9a8fe1d8cfc079abe5dbf6d9e5,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-25,60,6,6,6,0,Local,0.195373969096597,2061,10549,Ryan Bloom
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,26a56ab81f977be40d1543f0cd5d807d0c3b729e,os/win32/util_win32.c,Resolve more handle leaks.,https://github.com/apache/httpd/commit/26a56ab81f977be40d1543f0cd5d807d0c3b729e,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-31,13,1,2,1,1,Local,0.434917355371901,842,1936,William A. Rowe Jr
CVE-2007-6421,79,NA,XSS,2008-1-8,2017-9-28,3.5,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in balancer-manager in mod_proxy_balancer in the Apache HTTP Server 2.2.0 through 2.2.6 allows remote attackers to inject arbitrary web script or HTML via the (1) ss, (2) wr, or (3) rr parameters, or (4) the URL.",https://www.cvedetails.com/cve/CVE-2007-6421/,20071217,Yes. Fixed in Apache HTTP Server 2.2.8. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-6421 (cve.mitre.org)
mod_proxy_balancer: Correctly escape the worker route and the worker redirect string in the HTML output of the balancer manager.
Reported by SecurityReason. [Ruediger Pluem]",No,2007-12-12,2008-1-2,2008-1-19,26e37ff4832c5eed3fa91d7f71399b8089b78ddf,CHANGES,"* Correctly escape the worker route and the worker redirect string in the HTML output of the balancer manager.
Reported by SecurityReason.",https://github.com/apache/httpd/commit/26e37ff4832c5eed3fa91d7f71399b8089b78ddf,Ruediger Pluem,,,,2007-12-28,2,4,4,12,4,Local,0.023705096073517,908,38304,Jim Jagielski
CVE-2007-6421,79,NA,XSS,2008-1-8,2017-9-28,3.5,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in balancer-manager in mod_proxy_balancer in the Apache HTTP Server 2.2.0 through 2.2.6 allows remote attackers to inject arbitrary web script or HTML via the (1) ss, (2) wr, or (3) rr parameters, or (4) the URL.",https://www.cvedetails.com/cve/CVE-2007-6421/,20071217,Yes. Fixed in Apache HTTP Server 2.2.8. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-6421 (cve.mitre.org)
mod_proxy_balancer: Correctly escape the worker route and the worker redirect string in the HTML output of the balancer manager.
Reported by SecurityReason. [Ruediger Pluem]",No,2007-12-12,2008-1-2,2008-1-19,26e37ff4832c5eed3fa91d7f71399b8089b78ddf,modules/proxy/mod_proxy_balancer.c,"* Correctly escape the worker route and the worker redirect string in the HTML output of the balancer manager.
Reported by SecurityReason.",https://github.com/apache/httpd/commit/26e37ff4832c5eed3fa91d7f71399b8089b78ddf,Ruediger Pluem,,,,2007-12-28,2,8,12,12,4,Local,0.04817637452368,177,3674,Jim Jagielski
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,include/util_filter.h,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,2,4,41,37,Global,0.559865092748735,664,1186,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,modules/experimental/mod_case_filter_in.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,1,2,41,37,Global,0.015037593984962,2,133,Ben Laurie
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,modules/experimental/mod_charset_lite.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,1,2,41,37,Global,0.012863070539419,31,2410,Jeff Trawick
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,modules/http/http_protocol.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,10,21,41,37,Global,0.381812057931964,5668,14845,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,modules/http/http_request.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,2,3,41,37,Global,0.354226267880364,1362,3845,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,modules/http/mod_core.h,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,2,4,41,37,Global,0.274611398963731,53,193,Greg Stein
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,modules/mappers/mod_alias.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,10,11,41,37,Global,0.074120603015075,59,796,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,modules/tls/mod_tls.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,2,4,41,37,Global,0.018018018018018,12,666,Ben Laurie
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,server/core.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,1,10,41,37,Global,0.974809607498535,3328,3414,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,server/mpm/experimental/perchild/perchild.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,3,5,41,37,Global,0.858062628036289,2932,3417,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,server/mpm/perchild/perchild.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,3,5,41,37,Global,0.858062628036289,2932,3417,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,server/protocol.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,2,3,41,37,Global,0.910411622276029,2256,2478,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,2793534d55b5df3e2cf27c315e8955365144f20f,server/util_filter.c,"Back out the recent change to ap_get_brigade, to make it use indirection again. The problem is that the amount of data read from the network, is not necessarily the amount of data returned from the filters. It is possible for input filters to add bytes to the data read from the network. 
To fix the original bug, I just removed the line from ap_get_client_block that decrementd r->remaining, we allow the http_filter to do that for us. ",https://github.com/apache/httpd/commit/2793534d55b5df3e2cf27c315e8955365144f20f#diff-4c0033dce44a115b6211a081aadf02f3,Ryan Bloom,,,,2001-5-7,16,1,2,41,37,Global,0.706836616454229,610,863,Ryan Bloom
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,2943e59dd41768f229043d5edfe24788a4488e9a,CHANGES,"regex: Allow to configure global/default options for regexes. Like caseless matching or extended format, which may be useful as default behaviour the whole configuration.",https://github.com/apache/httpd/commit/2943e59dd41768f229043d5edfe24788a4488e9a,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-15,9,3,3,118,0,Global,0.017030663142624,857,50321,Jim Jagielski
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,2943e59dd41768f229043d5edfe24788a4488e9a,include/ap_regex.h,"regex: Allow to configure global/default options for regexes. Like caseless matching or extended format, which may be useful as default behaviour the whole configuration.",https://github.com/apache/httpd/commit/2943e59dd41768f229043d5edfe24788a4488e9a,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-15,9,22,22,118,0,Global,0.06426735218509,25,389,Joe Orton
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,2943e59dd41768f229043d5edfe24788a4488e9a,server/core.c,"regex: Allow to configure global/default options for regexes. Like caseless matching or extended format, which may be useful as default behaviour the whole configuration.",https://github.com/apache/httpd/commit/2943e59dd41768f229043d5edfe24788a4488e9a,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-15,9,58,58,118,0,Global,0.018445548512364,323,17511,Ryan Bloom
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,2943e59dd41768f229043d5edfe24788a4488e9a,server/util_pcre.c,"regex: Allow to configure global/default options for regexes. Like caseless matching or extended format, which may be useful as default behaviour the whole configuration.",https://github.com/apache/httpd/commit/2943e59dd41768f229043d5edfe24788a4488e9a,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-15,9,35,35,118,0,Global,0.045507584597433,39,857,Stefan Fritsch
CVE-2017-9798,416,NA,,2017-9-18,2018-7-18,5,None,Remote,Low,Not required,Partial,None,None,"Apache httpd allows remote attackers to read secret data from process memory if the Limit directive can be set in a user's .htaccess file, or if httpd.conf has certain misconfigurations, aka Optionsbleed. This affects the Apache HTTP Server through 2.2.34 and 2.4.x through 2.4.27. The attacker sends an unauthenticated OPTIONS HTTP request when attempting to read secret data. This is a use-after-free issue and thus secret data is not always sent, and the specific data depends on many factors including configuration. Exploitation with .htaccess can be blocked with a patch to the ap_limit_section function in server/core.c.",https://www.cvedetails.com/cve/CVE-2017-9798/,20170621,Yes. Fixed in Apache HTTP Server 2.4.28: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9798 (cve.mitre.org)
Corrupted or freed memory access. <Limit[Except]> must now be used in the main configuration file (httpd.conf) to register HTTP methods before the .htaccess files.  [Yann Ylavic]", No,2017-7-12,2017-9-18,2017-10-5,29afdd2550b3d30a8defece2b95ae81edcf66ac9,CHANGES,"core: Disallow Methods' registration at run time (.htaccess), they may be used only if registered at init time (httpd.conf).
Calling ap_method_register() in children processes is not the right scope since it won't be shared for all requests.",https://github.com/apache/httpd/commit/29afdd2550b3d30a8defece2b95ae81edcf66ac9,Yann Ylavic,ylavic,https://github.com/ylavic,,2017-9-8,1,3,3,9,0,Local,0.014531679060352,725,49891,Jim Jagielski
CVE-2017-9798,416,NA,,2017-9-18,2018-7-18,5,None,Remote,Low,Not required,Partial,None,None,"Apache httpd allows remote attackers to read secret data from process memory if the Limit directive can be set in a user's .htaccess file, or if httpd.conf has certain misconfigurations, aka Optionsbleed. This affects the Apache HTTP Server through 2.2.34 and 2.4.x through 2.4.27. The attacker sends an unauthenticated OPTIONS HTTP request when attempting to read secret data. This is a use-after-free issue and thus secret data is not always sent, and the specific data depends on many factors including configuration. Exploitation with .htaccess can be blocked with a patch to the ap_limit_section function in server/core.c.",https://www.cvedetails.com/cve/CVE-2017-9798/,20170621,Yes. Fixed in Apache HTTP Server 2.4.28: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9798 (cve.mitre.org)
Corrupted or freed memory access. <Limit[Except]> must now be used in the main configuration file (httpd.conf) to register HTTP methods before the .htaccess files.  [Yann Ylavic]", No,2017-7-12,2017-9-18,2017-10-5,29afdd2550b3d30a8defece2b95ae81edcf66ac9,server/core.c,"core: Disallow Methods' registration at run time (.htaccess), they may be used only if registered at init time (httpd.conf).
Calling ap_method_register() in children processes is not the right scope since it won't be shared for all requests.",https://github.com/apache/httpd/commit/29afdd2550b3d30a8defece2b95ae81edcf66ac9,Yann Ylavic,ylavic,https://github.com/ylavic,,2017-9-8,1,6,6,9,0,Local,0.012751292360712,222,17410,Ryan Bloom
CVE-2016-8740,20,NA,DoS,2016-12-5,2018-4-24,5,None,Remote,Low,Not required,None,None,Partial,"The mod_http2 module in the Apache HTTP Server 2.4.17 through 2.4.23, when the Protocols configuration includes h2 or h2c, does not restrict request-header length, which allows remote attackers to cause a denial of service (memory consumption) via crafted CONTINUATION frames in an HTTP/2 request.",https://www.cvedetails.com/cve/CVE-2016-8740/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8740 (cve.mitre.org)
mod_http2: Mitigate DoS memory exhaustion via endless CONTINUATION frames.
[Naveen Tiwari <naveen.tiwari@asu.edu> and CDF/SEFCOM at Arizona State University, Stefan Eissing]",No,2016-11-22,2016-12-4,2016-12-20,29c63b786ae028d82405421585e91283c8fa0da3,CHANGES,"SECURITY: CVE-2016-8740
mod_http2: properly crafted, endless HTTP/2 CONTINUATION frames could be used to exhaust all server's memory.
Reported by: Naveen Tiwari <naveen.tiwari@asu.edu> and CDF/SEFCOM at Arizona State University",https://github.com/apache/httpd/commit/29c63b786ae028d82405421585e91283c8fa0da3,Stefan Eissing,,,greenbytes GmbH,2016-12-4,1,4,4,46,30,Global,0.017917133258679,880,49115,Jim Jagielski
CVE-2016-8740,20,NA,DoS,2016-12-5,2018-4-24,5,None,Remote,Low,Not required,None,None,Partial,"The mod_http2 module in the Apache HTTP Server 2.4.17 through 2.4.23, when the Protocols configuration includes h2 or h2c, does not restrict request-header length, which allows remote attackers to cause a denial of service (memory consumption) via crafted CONTINUATION frames in an HTTP/2 request.",https://www.cvedetails.com/cve/CVE-2016-8740/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8740 (cve.mitre.org)
mod_http2: Mitigate DoS memory exhaustion via endless CONTINUATION frames.
[Naveen Tiwari <naveen.tiwari@asu.edu> and CDF/SEFCOM at Arizona State University, Stefan Eissing]",No,2016-11-22,2016-12-4,2016-12-20,29c63b786ae028d82405421585e91283c8fa0da3,modules/http2/h2_session.c,"SECURITY: CVE-2016-8740
mod_http2: properly crafted, endless HTTP/2 CONTINUATION frames could be used to exhaust all server's memory.
Reported by: Naveen Tiwari <naveen.tiwari@asu.edu> and CDF/SEFCOM at Arizona State University",https://github.com/apache/httpd/commit/29c63b786ae028d82405421585e91283c8fa0da3,Stefan Eissing,,,greenbytes GmbH,2016-12-4,1,9,11,46,30,Global,0.836980890359774,7840,9367,Stefan Eissing
CVE-2016-8740,20,NA,DoS,2016-12-5,2018-4-24,5,None,Remote,Low,Not required,None,None,Partial,"The mod_http2 module in the Apache HTTP Server 2.4.17 through 2.4.23, when the Protocols configuration includes h2 or h2c, does not restrict request-header length, which allows remote attackers to cause a denial of service (memory consumption) via crafted CONTINUATION frames in an HTTP/2 request.",https://www.cvedetails.com/cve/CVE-2016-8740/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8740 (cve.mitre.org)
mod_http2: Mitigate DoS memory exhaustion via endless CONTINUATION frames.
[Naveen Tiwari <naveen.tiwari@asu.edu> and CDF/SEFCOM at Arizona State University, Stefan Eissing]",No,2016-11-22,2016-12-4,2016-12-20,29c63b786ae028d82405421585e91283c8fa0da3,modules/http2/h2_stream.c,"SECURITY: CVE-2016-8740
mod_http2: properly crafted, endless HTTP/2 CONTINUATION frames could be used to exhaust all server's memory.
Reported by: Naveen Tiwari <naveen.tiwari@asu.edu> and CDF/SEFCOM at Arizona State University",https://github.com/apache/httpd/commit/29c63b786ae028d82405421585e91283c8fa0da3,Stefan Eissing,,,greenbytes GmbH,2016-12-4,1,33,61,46,30,Global,0.886141460609546,3082,3478,Stefan Eissing
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,2aaaf9d6eb2adc8cbc6e24f5b897aa65aec9aa5a,modules/http/byterange_filter.c,"Revert r1163833:
    Send a 206 response for a ""Range: bytes=0-"" request, even if 200 would be more efficient.
As discussed on list: Clients that use the 206 response to detect range
support are considered broken and should be fixed to use the Accept-Ranges
header instead.",https://github.com/apache/httpd/commit/2aaaf9d6eb2adc8cbc6e24f5b897aa65aec9aa5a,Stefan Fritsch,,,GeNUA mbH,2011-9-4,13,2,4,2,2,Local,0.193802521008403,369,1904,Jim Jagielski
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,2abc69c9b655fbee946c892a7d5e351b019700b3,Apache.dsw,Add some mime magic to the Win32 build,https://github.com/apache/httpd/commit/2abc69c9b655fbee946c892a7d5e351b019700b3,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-4,17,24,24,162,6,Global,0.711960368011323,2012,2826,William A. Rowe Jr
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,2abc69c9b655fbee946c892a7d5e351b019700b3,Makefile.win,Add some mime magic to the Win32 build,https://github.com/apache/httpd/commit/2abc69c9b655fbee946c892a7d5e351b019700b3,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-4,17,3,3,162,6,Global,0.755555555555556,1088,1440,William A. Rowe Jr
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,2abc69c9b655fbee946c892a7d5e351b019700b3,modules/metadata/mod_mime_magic.dsp,Add some mime magic to the Win32 build,https://github.com/apache/httpd/commit/2abc69c9b655fbee946c892a7d5e351b019700b3,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-4,17,128,128,162,6,Global,1,128,128,William A. Rowe Jr
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,2abc69c9b655fbee946c892a7d5e351b019700b3,os/win32/BaseAddr.ref,Add some mime magic to the Win32 build,https://github.com/apache/httpd/commit/2abc69c9b655fbee946c892a7d5e351b019700b3,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-4,17,7,13,162,6,Global,0.471910112359551,42,89,Bill Stoddard
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,2abcc2c987e4fd3cca341745eb9b05c90cefc147,modules/http/byterange_filter.c,* More style police. No functional changes,https://github.com/apache/httpd/commit/2abcc2c987e4fd3cca341745eb9b05c90cefc147,Ruediger Pluem,,,,2011-8-28,13,5,8,5,3,Local,0.096735187424426,160,1654,Jim Jagielski
CVE-2002-0061,Not defined,NA,Exec Code,2002-3-21,2016-10-17,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache for Win32 before 1.3.24, and 2.0.x before 2.0.34-beta, allows remote attackers to execute arbitrary commands via shell metacharacters (a | pipe character) provided as arguments to batch (.bat) or .cmd scripts, which are sent unfiltered to the shell interpreter, typically cmd.exe.",https://www.cvedetails.com/cve/CVE-2002-0061/,20030402,Yes. Fixed in Apache HTTP Server 1.3.24: http://httpd.apache.org/security/vulnerabilities_13.html ,"Apache for Win32 before 1.3.24 and 2.0.34-beta allows remote attackers to execute arbitrary commands via parameters passed to batch file CGI scripts.
Upgrade your Apache web server to: 1.3.24 (which should be available later today), or 2.0.34-beta (which will be published soon). Downloads are located at: http://www.apache.org/dist/httpd/",No,,,2002-3-22,2bbaafd2675f2fe4573b3a721a78c5633dd9380c,CHANGES,Get nph- CGI scripts working again by avoiding filters that can’t possibly deal with a script that generates the protocol header.,https://github.com/apache/httpd/commit/2bbaafd2675f2fe4573b3a721a78c5633dd9380c,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-3-20,2,3,3,29,0,Local,0.036938862761864,432,11695,Roy T. Fielding
CVE-2002-0061,Not defined,NA,Exec Code,2002-3-21,2016-10-17,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache for Win32 before 1.3.24, and 2.0.x before 2.0.34-beta, allows remote attackers to execute arbitrary commands via shell metacharacters (a | pipe character) provided as arguments to batch (.bat) or .cmd scripts, which are sent unfiltered to the shell interpreter, typically cmd.exe.",https://www.cvedetails.com/cve/CVE-2002-0061/,20030402,Yes. Fixed in Apache HTTP Server 1.3.24: http://httpd.apache.org/security/vulnerabilities_13.html ,"Apache for Win32 before 1.3.24 and 2.0.34-beta allows remote attackers to execute arbitrary commands via parameters passed to batch file CGI scripts.
Upgrade your Apache web server to: 1.3.24 (which should be available later today), or 2.0.34-beta (which will be published soon). Downloads are located at: http://www.apache.org/dist/httpd/",No,,,2002-3-22,2bbaafd2675f2fe4573b3a721a78c5633dd9380c,modules/generators/mod_cgi.c,Get nph- CGI scripts working again by avoiding filters that can’t possibly deal with a script that generates the protocol header.,https://github.com/apache/httpd/commit/2bbaafd2675f2fe4573b3a721a78c5633dd9380c,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-3-20,2,13,13,29,0,Local,0.046010296010296,143,3108,Ryan Bloom
CVE-2002-0061,Not defined,NA,Exec Code,2002-3-21,2016-10-17,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache for Win32 before 1.3.24, and 2.0.x before 2.0.34-beta, allows remote attackers to execute arbitrary commands via shell metacharacters (a | pipe character) provided as arguments to batch (.bat) or .cmd scripts, which are sent unfiltered to the shell interpreter, typically cmd.exe.",https://www.cvedetails.com/cve/CVE-2002-0061/,20030402,Yes. Fixed in Apache HTTP Server 1.3.24: http://httpd.apache.org/security/vulnerabilities_13.html ,"Apache for Win32 before 1.3.24 and 2.0.34-beta allows remote attackers to execute arbitrary commands via parameters passed to batch file CGI scripts.
Upgrade your Apache web server to: 1.3.24 (which should be available later today), or 2.0.34-beta (which will be published soon). Downloads are located at: http://www.apache.org/dist/httpd/",No,,,2002-3-22,2bbaafd2675f2fe4573b3a721a78c5633dd9380c,modules/generators/mod_cgid.c,Get nph- CGI scripts working again by avoiding filters that can’t possibly deal with a script that generates the protocol header.,https://github.com/apache/httpd/commit/2bbaafd2675f2fe4573b3a721a78c5633dd9380c,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-3-20,2,13,13,29,0,Local,0.18407960199005,592,3216,Ryan Bloom
CVE-2014-0118,399,NA,DoS,2014-7-20,2017-12-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The deflate_in_filter function in mod_deflate.c in the mod_deflate module in the Apache HTTP Server before 2.4.10, when request body decompression is enabled, allows remote attackers to cause a denial of service (resource consumption) via crafted request data that decompresses to a much larger size.",https://www.cvedetails.com/cve/CVE-2014-0118/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0118 (cve.mitre.org)
mod_deflate: The DEFLATE input filter (inflates request bodies) now limits the length and compression ratio of inflated request bodies to avoid denial of sevice via highly compressed bodies. See directives DeflateInflateLimitRequestBody, DeflateInflateRatioLimit, and DeflateInflateRatioBurst. [Yann Ylavic, Eric Covener]",No,2014-2-19,2014-7-14,2014-9-3,2bcaded2f641a7444bc7519c96919bdacec86850,docs/manual/mod/mod_deflate.xml,"*) SECURITY: CVE-2014-0118 (cve.mitre.org)
mod_deflate: The DEFLATE input filter (inflates request bodies) now limits the length and compression ratio of inflated request bodies to avoid denial of sevice via highly compressed bodies. See directives DeflateInflateLimitRequestBody, DeflateInflateRatioLimit, and DeflateInflateRatioBurst.
Thanks to Giancarlo Pellegrino and Davide Balzarotti for reporting the issue.
Submitted By: ylavic, covener
Reviewed By: jorton, covener, jim",https://github.com/apache/httpd/commit/2bcaded2f641a7444bc7519c96919bdacec86850,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-14,1,53,53,198,2,Global,0.161793372319688,166,1026,Andre Malo
CVE-2014-0118,399,NA,DoS,2014-7-20,2017-12-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The deflate_in_filter function in mod_deflate.c in the mod_deflate module in the Apache HTTP Server before 2.4.10, when request body decompression is enabled, allows remote attackers to cause a denial of service (resource consumption) via crafted request data that decompresses to a much larger size.",https://www.cvedetails.com/cve/CVE-2014-0118/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0118 (cve.mitre.org)
mod_deflate: The DEFLATE input filter (inflates request bodies) now limits the length and compression ratio of inflated request bodies to avoid denial of sevice via highly compressed bodies. See directives DeflateInflateLimitRequestBody, DeflateInflateRatioLimit, and DeflateInflateRatioBurst. [Yann Ylavic, Eric Covener]",No,2014-2-19,2014-7-14,2014-9-3,2bcaded2f641a7444bc7519c96919bdacec86850,modules/filters/mod_deflate.c,"*) SECURITY: CVE-2014-0118 (cve.mitre.org)
mod_deflate: The DEFLATE input filter (inflates request bodies) now limits the length and compression ratio of inflated request bodies to avoid denial of sevice via highly compressed bodies. See directives DeflateInflateLimitRequestBody, DeflateInflateRatioLimit, and DeflateInflateRatioBurst.
Thanks to Giancarlo Pellegrino and Davide Balzarotti for reporting the issue.
Submitted By: ylavic, covener
Reviewed By: jorton, covener, jim",https://github.com/apache/httpd/commit/2bcaded2f641a7444bc7519c96919bdacec86850,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-14,1,145,147,198,2,Global,0.042707666026052,200,4683,Justin Erenkrantz
CVE-2001-0731,Not defined,NA,Bypass,2001-10-1,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,"Apache 1.3.20 with Multiviews enabled allows remote attackers to view directory contents and bypass the index page via a URL containing the ""M=D"" query string.",https://www.cvedetails.com/cve/CVE-2001-0731/,20020625,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,"A vulnerability was found when Multiviews are used to negotiate the directory index. In some configurations, requesting a URI with a QUERY_STRING of M=D could return a directory listing rather than the expected index page.

http://archive.apache.org/dist/httpd/CHANGES_1.3
SECURITY: CVE-2001-0731 (cve.mitre.org)
     Close autoindex /?M=D directory listing hole reported in bugtraq id 3009.  In some configurations where multiviews and indexes are enabled for a directory, requesting URI /?M=D could result in a directory listing being returned to the client rather than the negotiated index.html variant that was configured and expected.  The work around for this problem (for pre 1.3.21 releases) is to disable Indexes or Multiviews in the affected directories.  [Bill Stoddard, Bill Rowe]",No,,2001-7-9,,2ca51fb59ce1db6c9921aab81b2d0e4969a9162c,modules/http/mod_mime.c,"Negotiation once allowed any file, of any filename extension, to be served.  The original patch to mod_negotation eliminated all extensions that did not reflect filename extensions associated with negotiation variables, unless the user expressly specified the file name with those filename extensions. This patch [attributed to me] was vetoed at its inception, it was provided as an alternative for those who had to have the current behavior.
  There is now another alternative patch that would introduce the MultiviewsMatch directive to mod_mime, for consideration and discussion.",https://github.com/apache/httpd/commit/2ca51fb59ce1db6c9921aab81b2d0e4969a9162c,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-10,2,0,3,1,12,Local,0.340035906642729,947,2785,William A. Rowe Jr
CVE-2001-0731,Not defined,NA,Bypass,2001-10-1,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,"Apache 1.3.20 with Multiviews enabled allows remote attackers to view directory contents and bypass the index page via a URL containing the ""M=D"" query string.",https://www.cvedetails.com/cve/CVE-2001-0731/,20020625,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,"A vulnerability was found when Multiviews are used to negotiate the directory index. In some configurations, requesting a URI with a QUERY_STRING of M=D could return a directory listing rather than the expected index page.

http://archive.apache.org/dist/httpd/CHANGES_1.3
SECURITY: CVE-2001-0731 (cve.mitre.org)
     Close autoindex /?M=D directory listing hole reported in bugtraq id 3009.  In some configurations where multiviews and indexes are enabled for a directory, requesting URI /?M=D could result in a directory listing being returned to the client rather than the negotiated index.html variant that was configured and expected.  The work around for this problem (for pre 1.3.21 releases) is to disable Indexes or Multiviews in the affected directories.  [Bill Stoddard, Bill Rowe]",No,,2001-7-9,,2ca51fb59ce1db6c9921aab81b2d0e4969a9162c,STATUS,"Negotiation once allowed any file, of any filename extension, to be served.  The original patch to mod_negotation eliminated all extensions that did not reflect filename extensions associated with negotiation variables, unless the user expressly specified the file name with those filename extensions. This patch [attributed to me] was vetoed at its inception, it was provided as an alternative for those who had to have the current behavior.
  There is now another alternative patch that would introduce the MultiviewsMatch directive to mod_mime, for consideration and discussion.",https://github.com/apache/httpd/commit/2ca51fb59ce1db6c9921aab81b2d0e4969a9162c,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-10,2,1,10,1,12,Local,0.103013134174607,400,3883,Ryan Bloom
CVE-2016-4979,284,NA,Bypass,2016-7-6,2018-6-2,5,None,Remote,Low,Not required,None,Partial,None,"The Apache HTTP Server 2.4.18 through 2.4.20, when mod_http2 and mod_ssl are enabled, does not properly recognize the ""SSLVerifyClient require"" directive for HTTP/2 request authorization, which allows remote attackers to bypass intended access restrictions by leveraging the ability to send multiple requests over a single connection and aborting a renegotiation.",https://www.cvedetails.com/cve/CVE-2016-4979/,20160524,Yes. Fixed in Apache HTTP Server 2.4.23: https://httpd.apache.org/security/vulnerabilities_24.html,"*) mod_ssl: reset client-verify state of ssl when aborting renegotiations.
[Erki Aring <erki@example.ee>, Stefan Eissing]",No,2016-6-30,2016-7-5,2016-7-5,2d0e4eff04ea963128a41faaef21f987272e05a2,CHANGES,modssl: reset client-verify state when renegotiation is aborted,https://github.com/apache/httpd/commit/2d0e4eff04ea963128a41faaef21f987272e05a2,Stefan Eissing,,,greenbytes GmbH,2016-6-30,1,3,3,4,0,Local,0.013950434925324,680,48744,Jim Jagielski
CVE-2016-4979,284,NA,Bypass,2016-7-6,2018-6-2,5,None,Remote,Low,Not required,None,Partial,None,"The Apache HTTP Server 2.4.18 through 2.4.20, when mod_http2 and mod_ssl are enabled, does not properly recognize the ""SSLVerifyClient require"" directive for HTTP/2 request authorization, which allows remote attackers to bypass intended access restrictions by leveraging the ability to send multiple requests over a single connection and aborting a renegotiation.",https://www.cvedetails.com/cve/CVE-2016-4979/,20160524,Yes. Fixed in Apache HTTP Server 2.4.23: https://httpd.apache.org/security/vulnerabilities_24.html,"*) mod_ssl: reset client-verify state of ssl when aborting renegotiations.
[Erki Aring <erki@example.ee>, Stefan Eissing]",No,2016-6-30,2016-7-5,2016-7-5,2d0e4eff04ea963128a41faaef21f987272e05a2,modules/ssl/ssl_engine_kernel.c,modssl: reset client-verify state when renegotiation is aborted,https://github.com/apache/httpd/commit/2d0e4eff04ea963128a41faaef21f987272e05a2,Stefan Eissing,,,greenbytes GmbH,2016-6-30,1,1,1,4,0,Local,0.042898713977283,457,10653,Doug MacEachern
CVE-2014-8109,264,NA,Bypass,2014-12-29,2016-12-30,4.3,None,Remote,Medium,Not required,None,Partial,None,"mod_lua.c in the mod_lua module in the Apache HTTP Server 2.3.x and 2.4.x through 2.4.10 does not support an httpd configuration in which the same Lua authorization provider is used with different arguments within different contexts, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging multiple Require directives, as demonstrated by a configuration that specifies authorization for one group to access a certain directory, and authorization for a second group to access a second directory.",https://www.cvedetails.com/cve/CVE-2014-8109/,20141010,Yes. Fixed in Apache HTTP Server 2.4.12: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-8109 (cve.mitre.org)
mod_lua: Fix handling of the Require line when a LuaAuthzProvider is used in multiple Require directives with different arguments.
PR57204 [Edward Lu <Chaosed0 gmail.com>]",No,,2014-11-9,2015-1-30,2d16863c1a4f79c2ebbdcb3a352a4ed7e7044be1,CHANGES,"*) SECURITY: CVE-2014-8109 (cve.mitre.org)
mod_lua: Fix handling of the Require line when a LuaAuthzProvider is used in multiple Require directives with different arguments.
PR57204 [Edward Lu <Chaosed0 gmail.com>]
Submitted By: Edward Lu
Committed By: covener",https://github.com/apache/httpd/commit/2d16863c1a4f79c2ebbdcb3a352a4ed7e7044be1,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-11-30,3,5,5,22,10,Local,0.019127904488853,894,46738,Jim Jagielski
CVE-2014-8109,264,NA,Bypass,2014-12-29,2016-12-30,4.3,None,Remote,Medium,Not required,None,Partial,None,"mod_lua.c in the mod_lua module in the Apache HTTP Server 2.3.x and 2.4.x through 2.4.10 does not support an httpd configuration in which the same Lua authorization provider is used with different arguments within different contexts, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging multiple Require directives, as demonstrated by a configuration that specifies authorization for one group to access a certain directory, and authorization for a second group to access a second directory.",https://www.cvedetails.com/cve/CVE-2014-8109/,20141010,Yes. Fixed in Apache HTTP Server 2.4.12: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-8109 (cve.mitre.org)
mod_lua: Fix handling of the Require line when a LuaAuthzProvider is used in multiple Require directives with different arguments.
PR57204 [Edward Lu <Chaosed0 gmail.com>]",No,,2014-11-9,2015-1-30,2d16863c1a4f79c2ebbdcb3a352a4ed7e7044be1,modules/lua/mod_lua.c,"*) SECURITY: CVE-2014-8109 (cve.mitre.org)
mod_lua: Fix handling of the Require line when a LuaAuthzProvider is used in multiple Require directives with different arguments.
PR57204 [Edward Lu <Chaosed0 gmail.com>]
Submitted By: Edward Lu
Committed By: covener",https://github.com/apache/httpd/commit/2d16863c1a4f79c2ebbdcb3a352a4ed7e7044be1,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-11-30,3,17,27,22,10,Local,0.094587001311107,505,5339,Paul Querna
CVE-2017-3169,476,NA,,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, mod_ssl may dereference a NULL pointer when third-party modules call ap_hook_process_connection() during an HTTP request to an HTTPS port.",https://www.cvedetails.com/cve/CVE-2017-3169/,20161205,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-3169 (cve.mitre.org)
mod_ssl may dereference a NULL pointer when third-party modules call ap_hook_process_connection() during an HTTP request to an HTTPS port.", No,2016-12-5,2017-6-19,2017-7-11,2d98b248b435a4b383faae50037c87ed2b3d2ae5,CHANGES,"mod_ssl: fix ctx passed to ssl_io_filter_error()
Consistently pass the expected bio_filter_in_ctx_t to ssl_io_filter_error(). 
Submitted By: Yann Ylavic",https://github.com/apache/httpd/commit/2d98b248b435a4b383faae50037c87ed2b3d2ae5,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-5-26,1,3,3,11,7,Local,0.026582354954991,1320,49657,Jim Jagielski
CVE-2017-3169,476,NA,,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, mod_ssl may dereference a NULL pointer when third-party modules call ap_hook_process_connection() during an HTTP request to an HTTPS port.",https://www.cvedetails.com/cve/CVE-2017-3169/,20161205,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-3169 (cve.mitre.org)
mod_ssl may dereference a NULL pointer when third-party modules call ap_hook_process_connection() during an HTTP request to an HTTPS port.", No,2016-12-5,2017-6-19,2017-7-11,2d98b248b435a4b383faae50037c87ed2b3d2ae5,modules/ssl/ssl_engine_io.c,"mod_ssl: fix ctx passed to ssl_io_filter_error()
Consistently pass the expected bio_filter_in_ctx_t to ssl_io_filter_error(). 
Submitted By: Yann Ylavic",https://github.com/apache/httpd/commit/2d98b248b435a4b383faae50037c87ed2b3d2ae5,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-5-26,1,8,15,11,7,Local,0.001654898499559,15,9064,William A. Rowe Jr
CVE-2006-3747,189,NA,DoS Exec Code,2006-7-28,2017-7-19,7.6,Admin,Remote,High,Not required,Complete,Complete,Complete,"Off-by-one error in the ldap scheme handling in the Rewrite module (mod_rewrite) in Apache 1.3 from 1.3.28, 2.0.46 and other versions before 2.0.59, and 2.2, when RewriteEngine is enabled, allows remote attackers to cause a denial of service (application crash) and possibly execute arbitrary code via crafted URLs that are not properly handled using certain rewrite rules.",https://www.cvedetails.com/cve/CVE-2006-3747/,20060720,"Yes. Fixed in Apache HTTP Server 2.2.3, 2.0.59, and 1.3.37: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","*) SECURITY: CVE-2006-3747 (cve.mitre.org)
     mod_rewrite: Fix an off-by-one security problem in the ldap scheme handling.  For some RewriteRules this could lead to a pointer being written out of bounds.  Reported by Mark Dowd of McAfee. [Mark Cox]",No,2006-7-21,2006-7-27,2006-7-27,2dd09306752ca58807d9fe050a098ef94826fc32,CHANGES,* CVE-2006-3747 was the main reason to release 2.2.3. So place the changelog entry where it belongs.,https://github.com/apache/httpd/commit/2dd09306752ca58807d9fe050a098ef94826fc32,Ruediger Pluem,,,,2006-11-18,115,9,18,9,9,Local,0.030203515263645,653,21620,Roy T. Fielding
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,2e0034a6b3da385ede2d2381ac73c70afbc6c540,modules/filters/NWGNUextfiltr,Adding the NetWare make file for mod_ext_filter,https://github.com/apache/httpd/commit/2e0034a6b3da385ede2d2381ac73c70afbc6c540,Bradley Nicholes,,,Novell,2002-7-22,13,250,250,250,0,Global,1,250,250,Bradley Nicholes
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,2f01f6ff65192894a6b45df5bf279d93590faca5,modules/http/byterange_filter.c,"merge totally reversed ranges like 4-5,1-2 into 1-5 I interpret the former test
if (!(end <= ostart || start-1 >= oend)) {
as
if (not(end is bad || start is good)) { merge }
ORing the bad condition with the good doesn't produce the desired result. it is not necessary to test ""end"" due to the conditions tested in the assert.",https://github.com/apache/httpd/commit/2f01f6ff65192894a6b45df5bf279d93590faca5,Greg Ames,,,,2011-8-27,13,3,4,3,1,Local,0.003778337531486,6,1588,Jim Jagielski
CVE-2008-0005,79,NA,XSS,2008-1-11,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"mod_proxy_ftp in Apache 2.2.x before 2.2.7-dev, 2.0.x before 2.0.62-dev, and 1.3.x before 1.3.40-dev does not define a charset, which allows remote attackers to conduct cross-site scripting (XSS) attacks using UTF-7 encoding.",https://www.cvedetails.com/cve/CVE-2008-0005/,20071203,Yes. Fixed in Apache HTTP Server 2.2.8 and 2.0.63: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html,"*) SECURITY: CVE-2008-0005 (cve.mitre.org)
Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8). [Ruediger Pluem]",No,2007-12-15,2008-1-8,2008-1-19,2f913fa171014491c690245582b073eee8a167fe,CHANGES,"Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8).
Submitted by: Ruediger Pluem",https://github.com/apache/httpd/commit/2f913fa171014491c690245582b073eee8a167fe,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2007-12-31,1,4,4,44,2,Global,0.0675428988682,2590,38346,Jim Jagielski
CVE-2008-0005,79,NA,XSS,2008-1-11,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"mod_proxy_ftp in Apache 2.2.x before 2.2.7-dev, 2.0.x before 2.0.62-dev, and 1.3.x before 1.3.40-dev does not define a charset, which allows remote attackers to conduct cross-site scripting (XSS) attacks using UTF-7 encoding.",https://www.cvedetails.com/cve/CVE-2008-0005/,20071203,Yes. Fixed in Apache HTTP Server 2.2.8 and 2.0.63: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html,"*) SECURITY: CVE-2008-0005 (cve.mitre.org)
Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8). [Ruediger Pluem]",No,2007-12-15,2008-1-8,2008-1-19,2f913fa171014491c690245582b073eee8a167fe,docs/manual/mod/mod_proxy.xml,"Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8).
Submitted by: Ruediger Pluem",https://github.com/apache/httpd/commit/2f913fa171014491c690245582b073eee8a167fe,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2007-12-31,1,16,16,44,2,Global,0.004030226700252,16,3970,Andre Malo
CVE-2008-0005,79,NA,XSS,2008-1-11,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"mod_proxy_ftp in Apache 2.2.x before 2.2.7-dev, 2.0.x before 2.0.62-dev, and 1.3.x before 1.3.40-dev does not define a charset, which allows remote attackers to conduct cross-site scripting (XSS) attacks using UTF-7 encoding.",https://www.cvedetails.com/cve/CVE-2008-0005/,20071203,Yes. Fixed in Apache HTTP Server 2.2.8 and 2.0.63: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html,"*) SECURITY: CVE-2008-0005 (cve.mitre.org)
Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8). [Ruediger Pluem]",No,2007-12-15,2008-1-8,2008-1-19,2f913fa171014491c690245582b073eee8a167fe,include/ap_mmn.h,"Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8).
Submitted by: Ruediger Pluem",https://github.com/apache/httpd/commit/2f913fa171014491c690245582b073eee8a167fe,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2007-12-31,1,2,3,44,2,Global,0.2149302707137,262,1219,Roy T. Fielding
CVE-2008-0005,79,NA,XSS,2008-1-11,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"mod_proxy_ftp in Apache 2.2.x before 2.2.7-dev, 2.0.x before 2.0.62-dev, and 1.3.x before 1.3.40-dev does not define a charset, which allows remote attackers to conduct cross-site scripting (XSS) attacks using UTF-7 encoding.",https://www.cvedetails.com/cve/CVE-2008-0005/,20071203,Yes. Fixed in Apache HTTP Server 2.2.8 and 2.0.63: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html,"*) SECURITY: CVE-2008-0005 (cve.mitre.org)
Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8). [Ruediger Pluem]",No,2007-12-15,2008-1-8,2008-1-19,2f913fa171014491c690245582b073eee8a167fe,modules/proxy/mod_proxy_ftp.c,"Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8).
Submitted by: Ruediger Pluem",https://github.com/apache/httpd/commit/2f913fa171014491c690245582b073eee8a167fe,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2007-12-31,1,7,8,44,2,Global,0.034581646423752,410,11856,Martin Kraemer
CVE-2008-0005,79,NA,XSS,2008-1-11,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"mod_proxy_ftp in Apache 2.2.x before 2.2.7-dev, 2.0.x before 2.0.62-dev, and 1.3.x before 1.3.40-dev does not define a charset, which allows remote attackers to conduct cross-site scripting (XSS) attacks using UTF-7 encoding.",https://www.cvedetails.com/cve/CVE-2008-0005/,20071203,Yes. Fixed in Apache HTTP Server 2.2.8 and 2.0.63: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html,"*) SECURITY: CVE-2008-0005 (cve.mitre.org)
Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8). [Ruediger Pluem]",No,2007-12-15,2008-1-8,2008-1-19,2f913fa171014491c690245582b073eee8a167fe,modules/proxy/mod_proxy.c,"Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8).
Submitted by: Ruediger Pluem",https://github.com/apache/httpd/commit/2f913fa171014491c690245582b073eee8a167fe,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2007-12-31,1,14,14,44,2,Global,0.211951319567893,1550,7313,William A. Rowe Jr
CVE-2008-0005,79,NA,XSS,2008-1-11,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"mod_proxy_ftp in Apache 2.2.x before 2.2.7-dev, 2.0.x before 2.0.62-dev, and 1.3.x before 1.3.40-dev does not define a charset, which allows remote attackers to conduct cross-site scripting (XSS) attacks using UTF-7 encoding.",https://www.cvedetails.com/cve/CVE-2008-0005/,20071203,Yes. Fixed in Apache HTTP Server 2.2.8 and 2.0.63: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html,"*) SECURITY: CVE-2008-0005 (cve.mitre.org)
Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8). [Ruediger Pluem]",No,2007-12-15,2008-1-8,2008-1-19,2f913fa171014491c690245582b073eee8a167fe,modules/proxy/mod_proxy.h,"Introduce the ProxyFtpDirCharset directive, allowing the administrator to identify a default, or specific servers or paths which list their contents in other-than ISO-8859-1 charset (e.g. utf-8).
Submitted by: Ruediger Pluem",https://github.com/apache/httpd/commit/2f913fa171014491c690245582b073eee8a167fe,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2007-12-31,1,1,1,44,2,Global,0.064201121961355,309,4813,Mladen Turk
CVE-2010-0408,,NA,DoS,2010-3-5,2017-9-18,5,None,Remote,Low,Not required,None,None,None,"The ap_proxy_ajp_request function in mod_proxy_ajp.c in mod_proxy_ajp in the Apache HTTP Server 2.2.x before 2.2.15 does not properly handle certain situations in which a client sends no request body, which allows remote attackers to cause a denial of service (backend server outage) via a crafted request, related to use of a 500 error code instead of the appropriate 400 error code.",https://www.cvedetails.com/cve/CVE-2010-0408/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-0408 (cve.mitre.org)
     mod_proxy_ajp: Respond with HTTP_BAD_REQUEST when the body is not sent when request headers indicate a request body is incoming, not a case of HTTP_INTERNAL_SERVER_ERROR. [Niku Toivola <niku.toivola sulake.com>]",No,2010-2-10,2010-3-2,2010-3-5,2fe8ec85fa8ef1340a61e688f3bc43c799add78e,modules/proxy/mod_proxy_ajp.c,"SECURITY: CVE-2010-0408 (cve.mitre.org)
mod_proxy_ajp: Respond with HTTP_BAD_REQUEST when the body is not sent after
request headers indicate a request body is incoming, this is not a case of
HTTP_INTERNAL_SERVER_ERROR.
Submitted by: Niku Toivola <niku.toivola sulake.com>
rpluem, jim, wrowe",https://github.com/apache/httpd/commit/2fe8ec85fa8ef1340a61e688f3bc43c799add78e,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2010-3-2,1,1,2,1,1,Local,0.569478908188586,1836,3224,William A. Rowe Jr
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,30cbc29fc5f04e19168d471e0c110c9ce157c88d,modules/http/byterange_filter.c,no longer used,https://github.com/apache/httpd/commit/30cbc29fc5f04e19168d471e0c110c9ce157c88d,Greg Ames,,,,2011-8-25,13,0,2,0,2,Local,0.001949317738791,2,1026,Justin Erenkrantz
CVE-2013-4352,,NA,DoS,2014-7-20,2014-8-4,4.3,None,Remote,Medium,Not required,None,None,Partial,"The cache_invalidate function in modules/cache/cache_storage.c in the mod_cache module in the Apache HTTP Server 2.4.6, when a caching forward proxy is enabled, allows remote HTTP servers to cause a denial of service (NULL pointer dereference and daemon crash) via vectors that trigger a missing hostname value.",https://www.cvedetails.com/cve/CVE-2013-4352/,20130612,Yes. Fixed in Apache HTTP Server 2.4.7: https://httpd.apache.org/security/vulnerabilities_24.html,*) mod_cache: Avoid a crash with strcmp() when the hostname is not provided. [Graham Leggett],No,2013-9-14,2014-7-14,2013-11-26,30f630180bab5043263d4372db0b7a5951ffc5c0,CHANGES,mod_cache: Avoid a crash with strcmp() when the hostname is not provided.,https://github.com/apache/httpd/commit/30f630180bab5043263d4372db0b7a5951ffc5c0,Graham Leggett,minfrin,https://github.com/minfrin,,2013-9-14,1,3,3,9,3,Local,0.025971177257672,1184,45589,Jim Jagielski
CVE-2013-4352,,NA,DoS,2014-7-20,2014-8-4,4.3,None,Remote,Medium,Not required,None,None,Partial,"The cache_invalidate function in modules/cache/cache_storage.c in the mod_cache module in the Apache HTTP Server 2.4.6, when a caching forward proxy is enabled, allows remote HTTP servers to cause a denial of service (NULL pointer dereference and daemon crash) via vectors that trigger a missing hostname value.",https://www.cvedetails.com/cve/CVE-2013-4352/,20130612,Yes. Fixed in Apache HTTP Server 2.4.7: https://httpd.apache.org/security/vulnerabilities_24.html,*) mod_cache: Avoid a crash with strcmp() when the hostname is not provided. [Graham Leggett],No,2013-9-14,2014-7-14,2013-11-26,30f630180bab5043263d4372db0b7a5951ffc5c0,modules/cache/cache_storage.c,mod_cache: Avoid a crash with strcmp() when the hostname is not provided.,https://github.com/apache/httpd/commit/30f630180bab5043263d4372db0b7a5951ffc5c0,Graham Leggett,minfrin,https://github.com/minfrin,,2013-9-14,1,6,9,9,3,Local,0.359079704190633,874,2434,Graham Leggett
CVE-2011-4317,20,NA,,2011-11-29,2018-1-8,4.3,None,Remote,Medium,Not required,None,Partial,None,"The mod_proxy module in the Apache HTTP Server 1.3.x through 1.3.42, 2.0.x through 2.0.64, and 2.2.x through 2.2.21, when the Revision 1179239 patch is in place, does not properly interact with use of (1) RewriteRule and (2) ProxyPassMatch pattern matches for configuration of a reverse proxy, which allows remote attackers to send requests to intranet servers via a malformed URI containing an @ (at sign) character and a : (colon) character in invalid positions. NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-3368.",https://www.cvedetails.com/cve/CVE-2011-4317/,20111104,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2011-4317 (cve.mitre.org)
Resolve additional cases of URL rewriting with ProxyPassMatch or RewriteRule, where particular request-URIs could result in undesired backend network exposure in some configurations.
[Joe Orton]",No,2011-10-20,2012-1-22,2012-1-31,318b86756de2049f652561e1a66420b4a92d4a7e,modules/mappers/mod_rewrite.c,"Fix for additional cases of URL rewriting with ProxyPassMatch or RewriteRule, where particular request-URIs could result in undesired backend network exposure in some configurations. (CVE-2011-4317)
Thanks to Prutha Parikh from Qualys for reporting this issue.
* modules/proxy/mod_proxy.c (proxy_trans): Decline to handle the ""*"" request-URI.  Fail for cases where r->uri does not begin with a ""/"".
* modules/mappers/mod_rewrite.c (hook_uri2file): Likewise.",https://github.com/apache/httpd/commit/318b86756de2049f652561e1a66420b4a92d4a7e,Joe Orton,notroj,,Red Hat,2011-12-2,NA,12,12,24,0,Global,0.002644628099174,64,24200,Andre Malo
CVE-2011-4317,20,NA,,2011-11-29,2018-1-8,4.3,None,Remote,Medium,Not required,None,Partial,None,"The mod_proxy module in the Apache HTTP Server 1.3.x through 1.3.42, 2.0.x through 2.0.64, and 2.2.x through 2.2.21, when the Revision 1179239 patch is in place, does not properly interact with use of (1) RewriteRule and (2) ProxyPassMatch pattern matches for configuration of a reverse proxy, which allows remote attackers to send requests to intranet servers via a malformed URI containing an @ (at sign) character and a : (colon) character in invalid positions. NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-3368.",https://www.cvedetails.com/cve/CVE-2011-4317/,20111104,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2011-4317 (cve.mitre.org)
Resolve additional cases of URL rewriting with ProxyPassMatch or RewriteRule, where particular request-URIs could result in undesired backend network exposure in some configurations.
[Joe Orton]",No,2011-10-20,2012-1-22,2012-1-31,318b86756de2049f652561e1a66420b4a92d4a7e,modules/proxy/mod_proxy.c,"Fix for additional cases of URL rewriting with ProxyPassMatch or RewriteRule, where particular request-URIs could result in undesired backend network exposure in some configurations. (CVE-2011-4317)
Thanks to Prutha Parikh from Qualys for reporting this issue.
* modules/proxy/mod_proxy.c (proxy_trans): Decline to handle the ""*"" request-URI.  Fail for cases where r->uri does not begin with a ""/"".
* modules/mappers/mod_rewrite.c (hook_uri2file): Likewise.",https://github.com/apache/httpd/commit/318b86756de2049f652561e1a66420b4a92d4a7e,Joe Orton,notroj,,Red Hat,2011-12-2,NA,12,12,24,0,Global,0.003538005021685,31,8762,William A. Rowe Jr
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,CHANGES,"permit a read timeout to be used in mod_cgid to give up on a slow CGI script.
In trunk, it defaults to the servers Timeout.  PR43494 
Submitted By: Eric Covener, Toshikuni Fukaya
Reviewed By: Eric Covener",https://github.com/apache/httpd/commit/31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2013-10-23,278,7,7,85,5,Global,0.014050652273671,643,45763,Jim Jagielski
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,docs/log-message-tags/next-number,"permit a read timeout to be used in mod_cgid to give up on a slow CGI script.
In trunk, it defaults to the servers Timeout.  PR43494 
Submitted By: Eric Covener, Toshikuni Fukaya
Reviewed By: Eric Covener",https://github.com/apache/httpd/commit/31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2013-10-23,278,1,2,85,5,Global,0.039735099337748,6,151,Stefan Fritsch
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,docs/manual/mod/core.xml,"permit a read timeout to be used in mod_cgid to give up on a slow CGI script.
In trunk, it defaults to the servers Timeout.  PR43494 
Submitted By: Eric Covener, Toshikuni Fukaya
Reviewed By: Eric Covener",https://github.com/apache/httpd/commit/31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2013-10-23,278,2,4,85,5,Global,0.041333101287852,475,11492,Joshua Slive
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,docs/manual/mod/mod_cgid.xml,"permit a read timeout to be used in mod_cgid to give up on a slow CGI script.
In trunk, it defaults to the servers Timeout.  PR43494 
Submitted By: Eric Covener, Toshikuni Fukaya
Reviewed By: Eric Covener",https://github.com/apache/httpd/commit/31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2013-10-23,278,27,27,85,5,Global,0.134328358208955,27,201,Joshua Slive
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,docs/manual/upgrading.xml,"permit a read timeout to be used in mod_cgid to give up on a slow CGI script.
In trunk, it defaults to the servers Timeout.  PR43494 
Submitted By: Eric Covener, Toshikuni Fukaya
Reviewed By: Eric Covener",https://github.com/apache/httpd/commit/31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2013-10-23,278,6,6,85,5,Global,0.037986704653371,40,1053,Daniel Earl Poirier
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,modules/generators/mod_cgid.c,"permit a read timeout to be used in mod_cgid to give up on a slow CGI script.
In trunk, it defaults to the servers Timeout.  PR43494 
Submitted By: Eric Covener, Toshikuni Fukaya
Reviewed By: Eric Covener",https://github.com/apache/httpd/commit/31b1bd581a142ba9750c9bc224a8aa4b08f5f1d4,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2013-10-23,278,42,44,85,5,Global,0.029157667386609,189,6482,Ryan Bloom
CVE-2001-0731,Not defined,NA,Bypass,2001-10-1,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,"Apache 1.3.20 with Multiviews enabled allows remote attackers to view directory contents and bypass the index page via a URL containing the ""M=D"" query string.",https://www.cvedetails.com/cve/CVE-2001-0731/,20020625,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,"A vulnerability was found when Multiviews are used to negotiate the directory index. In some configurations, requesting a URI with a QUERY_STRING of M=D could return a directory listing rather than the expected index page.

http://archive.apache.org/dist/httpd/CHANGES_1.3
SECURITY: CVE-2001-0731 (cve.mitre.org)
     Close autoindex /?M=D directory listing hole reported in bugtraq id 3009.  In some configurations where multiviews and indexes are enabled for a directory, requesting URI /?M=D could result in a directory listing being returned to the client rather than the negotiated index.html variant that was configured and expected.  The work around for this problem (for pre 1.3.21 releases) is to disable Indexes or Multiviews in the affected directories.  [Bill Stoddard, Bill Rowe]",No,,2001-7-9,,3370a1a20e7632aa25d121e6869557207db89f78,modules/http/mod_mime.c,"allow file extentions specified by AddHandler, AddInputFilter, and AddOutputFilter to be ignored when matching the URI. [Submitted by Bill Rowe]",https://github.com/apache/httpd/commit/3370a1a20e7632aa25d121e6869557207db89f78,Greg Ames,,,,2001-10-9,2,3,3,3,0,Local,0.001078360891445,3,2782,William A. Rowe Jr
CVE-2014-0098,20,NA,DoS,2014-3-18,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,The log_cookie function in mod_log_config.c in the mod_log_config module in the Apache HTTP Server before 2.4.8 allows remote attackers to cause a denial of service (segmentation fault and daemon crash) via a crafted cookie that is not properly handled during truncation.,https://www.cvedetails.com/cve/CVE-2014-0098/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.27, 2.4.9: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0098 (cve.mitre.org)
Clean up cookie logging with fewer redundant string parsing passes. Log only cookies with a value assignment. Prevents segfaults when logging truncated cookies.
[William Rowe, Ruediger Pluem, Jim Jagielski]",No,2014-2-25,2014-3-17,2014-3-26,34c6cb5f9a53bee91d7b7c0632f673cd5ab30863,CHANGES,These are in 2.4.x,https://github.com/apache/httpd/commit/34c6cb5f9a53bee91d7b7c0632f673cd5ab30863,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2014-3-11,6,0,10,0,10,Local,0.365387953480299,16840,46088,Jim Jagielski
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,include/scoreboard.h,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,6,6,52,62,Global,0.014725568942436,11,747,dgaudet
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/beos/beos.c,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,3,52,62,Global,0.006931074316519,18,2597,David Reid
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/beos/mpm_default.h,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,5,52,62,Global,0.017605633802817,5,284,David Reid
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/experimental/perchild/mpm_default.h,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,5,52,62,Global,0.021276595744681,5,235,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/experimental/perchild/perchild.c,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,1,52,62,Global,0.113689589099425,534,4697,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/netware/mpm_default.h,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,5,52,62,Global,0.021645021645022,5,231,Bradley Nicholes
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/netware/mpm_netware.c,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,1,52,62,Global,0.001751927119832,5,2854,Bradley Nicholes
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/perchild/mpm_default.h,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,5,52,62,Global,0.021276595744681,5,235,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/perchild/perchild.c,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,1,52,62,Global,0.113689589099425,534,4697,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/prefork/mpm_default.h,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,5,52,62,Global,0.017064846416382,5,293,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/prefork/prefork.c,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,1,52,62,Global,0.001799513072933,17,9447,Jim Jagielski
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/worker/mpm_default.h,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,5,52,62,Global,0.025125628140704,5,199,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/mpm/worker/worker.c,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,0,1,52,62,Global,0.050547159979156,194,3838,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,356184055f4a12ef82280ba481830f3b9574adfb,server/scoreboard.c,"Implement new ScoreBoardFile directive logic. This affects how we create the scoreboard's shared memory segment. We now have the best of both worlds: if config specifies ScoreBoardFile create name-based shared memory, errors are fatal else /* we get to choose */ create anonymous shared memory if ENOTIMPL create name-based shared memory from DEFAULT_SCOREBOARD else errors are fatal
This gives us the flexibility to have anonymous shared memory (on platforms that support it) as well as name-based shared memory when third-party programs want access to our scoreboard.
The ap_scoreboard_fname static variable is now owned by the scoreboard.c file, and no longer by the MPMs. The MPMs MUST NOT set ap_scoreboard_fname to a default, since that will override the default creation logic and only allow name-based segments.
Submitted by:	Aaron Bannert
Reviewed by:	Justin Erenkrantz",https://github.com/apache/httpd/commit/356184055f4a12ef82280ba481830f3b9574adfb,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-15,309,46,70,52,62,Global,0.085867620751342,240,2795,Ryan Bloom
CVE-2004-0811,,NA,,2004-12-31,2017-7-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Unknown vulnerability in Apache 2.0.51 prevents ""the merging of the Satisfy directive,"" which could allow attackers to obtain access to restricted resources contrary to the specified authentication configuration.",https://www.cvedetails.com/cve/CVE-2004-0811/,20040825,Yes. Fixed in Apache HTTP Server 2.0.52: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0811 (cve.mitre.org)
Fix merging of the Satisfy directive, which was applied to the surrounding context and could allow access despite configured
 authentication.  PR 31315.  [Rici Lake <rici ricilake.net>]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2004-9-18,2004-9-28,35fb6d5c5ff71d15d404f55db904493a72732825,CHANGES,"* server/core.c (merge_core_dir_configs): Fix Satisfy merging since per-method Satisfy feature was added.

PR: 31315
Submitted by: Rici Lake <rici ricilake.net>",https://github.com/apache/httpd/commit/35fb6d5c5ff71d15d404f55db904493a72732825,Joe Orton,notroj,,Red Hat,2004-9-20,2,5,5,9,0,Local,0.015808122104116,290,18345,Roy T. Fielding
CVE-2004-0811,,NA,,2004-12-31,2017-7-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Unknown vulnerability in Apache 2.0.51 prevents ""the merging of the Satisfy directive,"" which could allow attackers to obtain access to restricted resources contrary to the specified authentication configuration.",https://www.cvedetails.com/cve/CVE-2004-0811/,20040825,Yes. Fixed in Apache HTTP Server 2.0.52: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0811 (cve.mitre.org)
Fix merging of the Satisfy directive, which was applied to the surrounding context and could allow access despite configured
 authentication.  PR 31315.  [Rici Lake <rici ricilake.net>]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2004-9-18,2004-9-28,35fb6d5c5ff71d15d404f55db904493a72732825,server/core.c,"* server/core.c (merge_core_dir_configs): Fix Satisfy merging since per-method Satisfy feature was added.

PR: 31315
Submitted by: Rici Lake <rici ricilake.net>",https://github.com/apache/httpd/commit/35fb6d5c5ff71d15d404f55db904493a72732825,Joe Orton,notroj,,Red Hat,2004-9-20,2,4,4,9,0,Local,0.004188374706303,41,9789,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,36b26c2b30836006acd4170fbe9808bf7592f45c,server/scoreboard.c,fix a horrible bug which caused scoreboard initialation to always exit,https://github.com/apache/httpd/commit/36b26c2b30836006acd4170fbe9808bf7592f45c,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-12-24,309,3,4,3,1,Local,0.086975524475525,199,2288,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,36ec42fbdfe9a3b0a8d7d36ca7a74de1a3e2eb92,server/scoreboard.c,"A quick hack around Aaron's patch. Win32 'supports' anon shm, but Apache's implementation requires fork().",https://github.com/apache/httpd/commit/36ec42fbdfe9a3b0a8d7d36ca7a74de1a3e2eb92,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-1-24,309,4,4,4,0,Local,0.07454128440367,195,2616,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,36f40b25bd2228eb707413762dc4eefcb1776cf8,server/mpm/worker/worker.c,"get the start thread to exit when we have reached termination but it is still trying to create worker threads
previously, after a non-graceful restart followed by a terminate you could see a bunch of log messages showing the parent repeatedly sending SIGTERM and finally SIGKILL to one or more children… with this change, the sequence of messages should stop very soon add a comment to start_threads() describing a current problem",https://github.com/apache/httpd/commit/36f40b25bd2228eb707413762dc4eefcb1776cf8,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-3-20,309,12,12,12,0,Local,0.115201602804909,460,3993,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,378bcdf524c7d62258c2722d9d0c3d3ab9d49c1c,modules/http/byterange_filter.c,"Remove some merging fun between Rüdiger and my patches ,)",https://github.com/apache/httpd/commit/378bcdf524c7d62258c2722d9d0c3d3ab9d49c1c,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-25,13,3,14,3,11,Local,0.270011947431302,226,837,Justin Erenkrantz
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,38069e47f7ade0d83bf34422e58ecc877cc8e63c,server/mpm/winnt/child.c,"Lots o bugs and emits here. accept_socket is a handle, although vc and the psdk aren't good about remembering that.  never use GetLastError() to ap_log_error. remember that we could have a socket closed by our neighbor while we were blocking.
",https://github.com/apache/httpd/commit/38069e47f7ade0d83bf34422e58ecc877cc8e63c,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-8-4,13,8,11,8,3,Local,1,1047,1047,William A. Rowe Jr
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,380fbe274ade6869b0af13118a719a1f6a0b6ba2,modules/http/byterange_filter.c,* Once the comparsion is true we never return here since we break from the loop.,https://github.com/apache/httpd/commit/380fbe274ade6869b0af13118a719a1f6a0b6ba2,Ruediger Pluem,,,,2011-8-25,13,1,2,1,1,Local,0.136853448275862,127,928,Justin Erenkrantz
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,389a0fb1b7ec9a05aede087f27d5a3360048d793,modules/http/byterange_filter.c,"Remove the merging code from ap_set_byterange() again, will move it to ap_byterange_filter",https://github.com/apache/httpd/commit/389a0fb1b7ec9a05aede087f27d5a3360048d793,Stefan Fritsch,,,GeNUA mbH,2011-8-26,13,10,90,10,80,Local,0.091555555555556,103,1125,Justin Erenkrantz
CVE-2015-0253,,NA,DoS,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,None,Partial,"The read_request_line function in server/protocol.c in the Apache HTTP Server 2.4.12 does not initialize the protocol structure member, which allows remote attackers to cause a denial of service (NULL pointer dereference and process crash) by sending a request that lacks a method to an installation that enables the INCLUDES filter and has an ErrorDocument 400 directive specifying a local URI.",https://www.cvedetails.com/cve/CVE-2015-0253/,20141118,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-0253 (cve.mitre.org)
core: Fix a crash with ErrorDocument 400 pointing to a local URL-path  with the INCLUDES filter active, introduced in 2.4.11. PR 57531.  [Yann Ylavic]",No,2015-2-3,2015-3-5,2015-7-15,38cccbba019e602bb752a7563d58e93801b2c1e8,server/protocol.c,"core: Follow up to r1664205.
Don't let invalid r->proto_num/protocol out of read_request_line() reach the output filters (when responding with 400 Bad Request).
Suggested by: rpluem",https://github.com/apache/httpd/commit/38cccbba019e602bb752a7563d58e93801b2c1e8,Yann Ylavic,ylavic,https://github.com/ylavic,,2015-3-6,2,3,3,3,0,Local,0.000377500943752,3,7947,Ryan Bloom
CVE-2005-2088,,NA,XSS Bypass,2005-7-5,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"The Apache HTTP server before 1.3.34, and 2.0.x before 2.0.55, when acting as an HTTP proxy, allows remote attackers to poison the web cache, bypass web application firewall protection, and conduct XSS attacks via an HTTP request with both a ""Transfer-Encoding: chunked"" header and a Content-Length header, which causes Apache to incorrectly handle and forward the body of the request in a way that causes the receiving server to process it as a separate HTTP request, aka ""HTTP Request Smuggling.""",https://www.cvedetails.com/cve/CVE-2005-2088/,20050630,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ," *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     proxy: Correctly handle the Transfer-Encoding and Content-Length headers.  Discard the request Content-Length whenever T-E: chunked is used, always passing one of either C-L or T-E: chunked whenever the request includes a request body.  Resolves an entire class of proxy HTTP Request Splitting/Spoofing attacks.  [William Rowe]

 *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     core: If a request contains both Transfer-Encoding and Content-Length headers, remove the Content-Length, mitigating some HTTP Request Splitting/Spoofing attacks.  [Paul Querna, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-6-11,2005-10-14,394cc4aa3384c36bf6f349d8b3f7f720d9b021ac,server/protocol.c,"if Transfer-Encoding is not ""identity"" ignore Content-Length. otherwise ajp-proxy hangs when Transfer-Encoding is ""chunked"".",https://github.com/apache/httpd/commit/394cc4aa3384c36bf6f349d8b3f7f720d9b021ac,Jean-Frederic Clere,,,,2005-6-17,23,1,2,1,1,Local,0.00036023054755,2,5552,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,3a4171ff22ac3a85c3864e33e315176dcaa9cc35,modules/http/byterange_filter.c,one off,https://github.com/apache/httpd/commit/3a4171ff22ac3a85c3864e33e315176dcaa9cc35,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-26,13,1,2,1,1,Local,0.410119840213049,616,1502,Jim Jagielski
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,3b3daa6fa5c2b85a263767ab75584a553fc2c5cc,CHANGES,mod_cgid: Add retry logic for when the daemon can't fork fast enough to keep up with new requests.  Start using HTTP_SERVER_UNAVAILABLE instead of HTTP_INTERNAL_SERVER_ERROR when we can't talk to the daemon.,https://github.com/apache/httpd/commit/3b3daa6fa5c2b85a263767ab75584a553fc2c5cc,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-2-1,309,5,5,78,34,Global,0.033722782793415,381,11298,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,3b3daa6fa5c2b85a263767ab75584a553fc2c5cc,modules/generators/mod_cgid.c,mod_cgid: Add retry logic for when the daemon can't fork fast enough to keep up with new requests.  Start using HTTP_SERVER_UNAVAILABLE instead of HTTP_INTERNAL_SERVER_ERROR when we can't talk to the daemon.,https://github.com/apache/httpd/commit/3b3daa6fa5c2b85a263767ab75584a553fc2c5cc,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-2-1,309,73,107,78,34,Global,0.164902149502727,514,3117,Ryan Bloom
CVE-2004-0942,,NA,DoS,2005-2-9,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,Apache webserver 2.0.52 and earlier allows remote attackers to cause a denial of service (CPU consumption) via an HTTP GET request with a MIME header containing multiple lines with a large number of space characters.,https://www.cvedetails.com/cve/CVE-2004-0942/,20041012,Yes. Fixed in Apache HTTP Server 2.0.53: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CAN-2004-0942 (cve.mitre.org)
     Fix for memory consumption DoS in handling of MIME folded request headers.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,2004-10-28,2004-11-1,2005-2-8,3c60cc60fd956b3046cc47e6542c11335e308e19,CHANGES,CHANGES entry for CAN-2004-0942 fix,https://github.com/apache/httpd/commit/3c60cc60fd956b3046cc47e6542c11335e308e19,Bill Stoddard,,,IBM,2004-11-5,2,3,3,3,0,Local,0.023894282632147,443,18540,Roy T. Fielding
CVE-2017-3167,287,NA,Bypass,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.",https://www.cvedetails.com/cve/CVE-2017-3167/,20161205,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-3167 (cve.mitre.org)
Use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.", No,2017-2-6,2017-6-19,2017-7-11,3d23a999daa4b65708b032e088558f0c855723a0,include/http_protocol.h,"CVE-2017-3167: add documentation to ap_get_basic_auth_pw()
Now that we've released, add clarifying comments to the now-deprecated API.",https://github.com/apache/httpd/commit/3d23a999daa4b65708b032e088558f0c855723a0,Jacob Champion,jchampio,https://github.com/jchampio,Pivotal Software,2017-6-21,27,9,11,9,2,Local,0.004602510460251,11,2390,Ryan Bloom
CVE-2004-0493,,NA,DoS Overflow,2004-8-6,2017-10-10,6.4,None,Remote,Low,Not required,None,Partial,Partial,"The ap_get_mime_headers_core function in Apache httpd 2.0.49 allows remote attackers to cause a denial of service (memory exhaustion), and possibly an integer signedness error leading to a heap-based buffer overflow on 64 bit systems, via long header lines with large numbers of space or tab characters.",https://www.cvedetails.com/cve/CVE-2004-0493/,20040527,Yes. Fixed in Apache HTTP Server 2.0.50: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0493 (cve.mitre.org)
Close a denial of service vulnerability identified by Georgi
Guninski which could lead to memory exhaustion with certain input data.  [Jeff Trawick]",No,2004-6-13,2004-7-1,2004-7-1,3d5263c6dcdf517a9eb5a0ab916e1ad49d354355,CHANGES,"CAN-2004-0493 - memory exhaustion denial of service
Reviewed by:	jerenkrantz",https://github.com/apache/httpd/commit/3d5263c6dcdf517a9eb5a0ab916e1ad49d354355,Jeff Trawick,trawick,https://github.com/trawick,Apache,2004-6-29,1,5,5,22,0,Local,0.079860916381583,1424,17831,Roy T. Fielding
CVE-2004-0493,,NA,DoS Overflow,2004-8-6,2017-10-10,6.4,None,Remote,Low,Not required,None,Partial,Partial,"The ap_get_mime_headers_core function in Apache httpd 2.0.49 allows remote attackers to cause a denial of service (memory exhaustion), and possibly an integer signedness error leading to a heap-based buffer overflow on 64 bit systems, via long header lines with large numbers of space or tab characters.",https://www.cvedetails.com/cve/CVE-2004-0493/,20040527,Yes. Fixed in Apache HTTP Server 2.0.50: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0493 (cve.mitre.org)
Close a denial of service vulnerability identified by Georgi
Guninski which could lead to memory exhaustion with certain input data.  [Jeff Trawick]",No,2004-6-13,2004-7-1,2004-7-1,3d5263c6dcdf517a9eb5a0ab916e1ad49d354355,server/protocol.c,"CAN-2004-0493 - memory exhaustion denial of service
Reviewed by:	jerenkrantz",https://github.com/apache/httpd/commit/3d5263c6dcdf517a9eb5a0ab916e1ad49d354355,Jeff Trawick,trawick,https://github.com/trawick,Apache,2004-6-29,1,17,17,22,0,Local,0.023399475851741,125,5342,Ryan Bloom
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,libhttpd.dsp,"Refactor out the child behavior from mpm_winnt. This is the first step in making a legible multiprocess windows mpm, or at least structuring the code to always begin a new child as an old one is going to die soon, rather than waiting for it's final dying breath.

  The only code that had to be affected [due to the split and general structure of the code] was merging the set_listeners_noninherited() code directly into the get_listeners_from_parent code, and also into the apr socket.c code for winnt. For the most part the code splits
  rather nicely.",https://github.com/apache/httpd/commit/3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-29,13,4,4,1196,3,Global,0.981501057082452,1857,1892,William A. Rowe Jr
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,os/win32/ap_regkey.c,"Refactor out the child behavior from mpm_winnt. This is the first step in making a legible multiprocess windows mpm, or at least structuring the code to always begin a new child as an old one is going to die soon, rather than waiting for it's final dying breath.

  The only code that had to be affected [due to the split and general structure of the code] was merging the set_listeners_noninherited() code directly into the get_listeners_from_parent code, and also into the apr socket.c code for winnt. For the most part the code splits
  rather nicely.",https://github.com/apache/httpd/commit/3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-29,13,2,3,1196,3,Global,1,834,834,William A. Rowe Jr
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,os/win32/os.h,"Refactor out the child behavior from mpm_winnt. This is the first step in making a legible multiprocess windows mpm, or at least structuring the code to always begin a new child as an old one is going to die soon, rather than waiting for it's final dying breath.

  The only code that had to be affected [due to the split and general structure of the code] was merging the set_listeners_noninherited() code directly into the get_listeners_from_parent code, and also into the apr socket.c code for winnt. For the most part the code splits
  rather nicely.",https://github.com/apache/httpd/commit/3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-29,13,55,55,1196,3,Global,0.379781420765027,278,732,William A. Rowe Jr
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,os/win32/util_win32.c,"Refactor out the child behavior from mpm_winnt. This is the first step in making a legible multiprocess windows mpm, or at least structuring the code to always begin a new child as an old one is going to die soon, rather than waiting for it's final dying breath.

  The only code that had to be affected [due to the split and general structure of the code] was merging the set_listeners_noninherited() code directly into the get_listeners_from_parent code, and also into the apr socket.c code for winnt. For the most part the code splits
  rather nicely.",https://github.com/apache/httpd/commit/3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-29,13,113,115,1196,3,Global,0.434332988624612,840,1934,William A. Rowe Jr
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,server/mpm/winnt/child.c,"Refactor out the child behavior from mpm_winnt. This is the first step in making a legible multiprocess windows mpm, or at least structuring the code to always begin a new child as an old one is going to die soon, rather than waiting for it's final dying breath.

  The only code that had to be affected [due to the split and general structure of the code] was merging the set_listeners_noninherited() code directly into the get_listeners_from_parent code, and also into the apr socket.c code for winnt. For the most part the code splits
  rather nicely.",https://github.com/apache/httpd/commit/3dad20ecb7731f2b1b6ad65a89ea7f17175ce977,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-29,13,1022,1022,1196,3,Global,1,1022,1022,William A. Rowe Jr
CVE-2002-1593,Not defined,NA,DoS,2002-9-25,2017-7-10,5,None,Remote,Low,Not required,None,None,Partial,"mod_dav in Apache before 2.0.42 does not properly handle versioning hooks, which may allow remote attackers to kill a child process via a null dereference and cause a denial of service (CPU consumption) in a preforked multi-processing module.",https://www.cvedetails.com/cve/CVE-2002-1593/,20050313,Yes. Fixed in Apache HTTP Server 2.0.42: http://httpd.apache.org/security/vulnerabilities_20.html ,"A flaw was found in handling of versioning hooks in mod_dav. An attacker could send a carefully crafted request in such a way to cause the child process handling the connection to crash. This issue will only result in a denial of service where a threaded process model is in use. 

http://archive.apache.org/dist/httpd/CHANGES_2.0
SECURITY: CVE-2002-1593 (cve.mitre.org) [CERT VU#406121]: mod_dav: Check for versioning hooks before using them. [Greg Stein]",No,,2002-9-19,2002-9-24,3dfabff5d48cbdd952b3d742dcf98702feaea232,server/request.c,"Morph DONE result from a sub-request handler to OK as DONE is only relevant when we are the main request.
This fixes a problem with mod_include printing out an error message on DAV sub-requests because mod_dav will return DONE instead of OK.  This would result in the correct output merged in with an error string.",https://github.com/apache/httpd/commit/3dfabff5d48cbdd952b3d742dcf98702feaea232,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-9-5,15,3,3,3,0,Local,0.031879194630873,228,7152,William A. Rowe Jr
CVE-2005-2970,,NA,DoS,2005-10-25,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Memory leak in the worker MPM (worker.c) for Apache 2, in certain circumstances, allows remote attackers to cause a denial of service (memory consumption) via aborted connections, which prevents the memory for the transaction pool from being reused for other connections.",https://www.cvedetails.com/cve/CVE-2005-2970/,20050919,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-2970 (cve.mitre.org)
worker MPM: Fix a memory leak which can occur after an aborted connection in some limited circumstances.  [Greg Ames]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,,2005-10-14,3e41c06c333663a92bcc8ebf04ed6c92ce41395d,CHANGES,use Greg's cleaner fix for CAN-2005-2970,https://github.com/apache/httpd/commit/3e41c06c333663a92bcc8ebf04ed6c92ce41395d,Jeff Trawick,trawick,https://github.com/trawick,Apache,2005-10-8,11,1,1,10,14,Local,0.079574152017826,1607,20195,Roy T. Fielding
CVE-2005-2970,,NA,DoS,2005-10-25,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Memory leak in the worker MPM (worker.c) for Apache 2, in certain circumstances, allows remote attackers to cause a denial of service (memory consumption) via aborted connections, which prevents the memory for the transaction pool from being reused for other connections.",https://www.cvedetails.com/cve/CVE-2005-2970/,20050919,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-2970 (cve.mitre.org)
worker MPM: Fix a memory leak which can occur after an aborted connection in some limited circumstances.  [Greg Ames]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,,2005-10-14,3e41c06c333663a92bcc8ebf04ed6c92ce41395d,server/mpm/worker/worker.c,use Greg's cleaner fix for CAN-2005-2970,https://github.com/apache/httpd/commit/3e41c06c333663a92bcc8ebf04ed6c92ce41395d,Jeff Trawick,trawick,https://github.com/trawick,Apache,2005-10-8,11,9,22,10,14,Local,0.232894736842105,1239,5320,Ryan Bloom
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,40105db61ec10c47352d16e1b21bdfa364b40a70,modules/dav/main/mod_dav.c,Call ap_discard_request_body from ap_finalize_request. Remove the call from all other modules that do not use it to determine the response for the request.,https://github.com/apache/httpd/commit/40105db61ec10c47352d16e1b21bdfa364b40a70,Ryan Bloom,,,,2002-6-8,29,0,9,2,21,Local,0.003113325031133,35,11242,Greg Stein
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,40105db61ec10c47352d16e1b21bdfa364b40a70,modules/http/http_request.c,Call ap_discard_request_body from ap_finalize_request. Remove the call from all other modules that do not use it to determine the response for the request.,https://github.com/apache/httpd/commit/40105db61ec10c47352d16e1b21bdfa364b40a70,Ryan Bloom,,,,2002-6-8,29,0,11,2,21,Local,0.319463087248322,1428,4470,Roy T. Fielding
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,40105db61ec10c47352d16e1b21bdfa364b40a70,server/protocol.c,Call ap_discard_request_body from ap_finalize_request. Remove the call from all other modules that do not use it to determine the response for the request.,https://github.com/apache/httpd/commit/40105db61ec10c47352d16e1b21bdfa364b40a70,Ryan Bloom,,,,2002-6-8,29,2,3,2,21,Local,0.56980056980057,2400,4212,Ryan Bloom
CVE-2009-3095,264,NA,Bypass,2009-9-8,2017-9-18,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"The mod_proxy_ftp module in the Apache HTTP Server allows remote attackers to bypass intended access restrictions and send arbitrary commands to an FTP server via vectors related to the embedding of these commands in the Authorization HTTP header, as demonstrated by a certain module in VulnDisco Pack Professional 8.11.",https://www.cvedetails.com/cve/CVE-2009-3095/,20090908,Yes. Fixed in Apache HTTP Server 2.2.14. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2009-3095 (cve.mitre.org)
mod_proxy_ftp: sanity check authn credentials.
[Stefan Fritsch <sf fritsch.de>, Joe Orton]",No,,3009-9-3,2009-10-5,404947824a978c89589d0fa59ada0ee1531bb147,modules/proxy/mod_proxy_ftp.c,"Security fix - this is presumed to fix CVE-2009-3095 (the disclosed information was limited so this has not been confirmed):
* modules/proxy/mod_proxy_ftp.c (proxy_ftp_handler): Fail if the decoded Basic credentials contain ""special"" characters.
Thanks to Stefan Fritsch for analysis of this issue.",https://github.com/apache/httpd/commit/404947824a978c89589d0fa59ada0ee1531bb147,Joe Orton,notroj,,Red Hat,2009-7-11,1,5,5,5,0,Local,0.003240817683231,39,12034,Martin Kraemer
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,4086302b287620825eb0013b67adf6f5459db046,modules/arch/win32/mod_win32.c,"In order for Win32 to accept the shebang line of #!perl so we 1) search the PATH and 2) resolve perl.exe for perl, we must add the progtype so we can override APR_PROGRAM with APR_PROGRAM_PATH.  This is the API change only for the cgi build command line option function.",https://github.com/apache/httpd/commit/4086302b287620825eb0013b67adf6f5459db046,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-4-13,9,5,8,29,20,Local,0.804709141274238,581,722,William A. Rowe Jr
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,4086302b287620825eb0013b67adf6f5459db046,modules/generators/mod_cgi.c,"In order for Win32 to accept the shebang line of #!perl so we 1) search the PATH and 2) resolve perl.exe for perl, we must add the progtype so we can override APR_PROGRAM with APR_PROGRAM_PATH.  This is the API change only for the cgi build command line option function.",https://github.com/apache/httpd/commit/4086302b287620825eb0013b67adf6f5459db046,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-4-13,9,18,34,29,20,Local,0.114268440145103,378,3308,Ryan Bloom
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,4086302b287620825eb0013b67adf6f5459db046,modules/generators/mod_cgi.h,"In order for Win32 to accept the shebang line of #!perl so we 1) search the PATH and 2) resolve perl.exe for perl, we must add the progtype so we can override APR_PROGRAM with APR_PROGRAM_PATH.  This is the API change only for the cgi build command line option function.",https://github.com/apache/httpd/commit/4086302b287620825eb0013b67adf6f5459db046,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-4-13,9,6,7,29,20,Local,0.924731182795699,86,93,William A. Rowe Jr
CVE-2018-1301,119,NA,Overflow,2018-3-26,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"A specially crafted request could have crashed the Apache HTTP Server prior to version 2.4.30, due to an out of bound access after a size limit is reached by reading the HTTP header. This vulnerability is considered very hard if not impossible to trigger in non-debug mode (both log and build level), so it is classified as low risk for common server usage.",https://www.cvedetails.com/cve/CVE-2018-1301/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2018-1301 (cve.mitre.org)
core: Possible crash with excessively long HTTP request headers. 
Impractical to exploit with a production build and production LogLevel. [Yann Ylavic]", No,2018-1-23,2018-3-21,2018-3-21,40c3bbe13786a7a1a57a4d67d55ad3a66820f0ad,CHANGES,"PR62186: preserve %<m for ErrorDocument internal redirects
  *) core: Preserve the original HTTP request method in the '%<m' LogFormat when an path-based ErrorDocument is used.  PR 62186.  [Micha Lenk <micha lenk.info>]
Submitted By: Micha Lenk
Committed By: covener",https://github.com/apache/httpd/commit/40c3bbe13786a7a1a57a4d67d55ad3a66820f0ad,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2018-4-11,1,4,4,11,1,Local,0.028216637336128,1427,50573,Jim Jagielski
CVE-2018-1301,119,NA,Overflow,2018-3-26,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"A specially crafted request could have crashed the Apache HTTP Server prior to version 2.4.30, due to an out of bound access after a size limit is reached by reading the HTTP header. This vulnerability is considered very hard if not impossible to trigger in non-debug mode (both log and build level), so it is classified as low risk for common server usage.",https://www.cvedetails.com/cve/CVE-2018-1301/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2018-1301 (cve.mitre.org)
core: Possible crash with excessively long HTTP request headers. 
Impractical to exploit with a production build and production LogLevel. [Yann Ylavic]", No,2018-1-23,2018-3-21,2018-3-21,40c3bbe13786a7a1a57a4d67d55ad3a66820f0ad,modules/http/http_request.c,"PR62186: preserve %<m for ErrorDocument internal redirects
  *) core: Preserve the original HTTP request method in the '%<m' LogFormat when an path-based ErrorDocument is used.  PR 62186.  [Micha Lenk <micha lenk.info>]
Submitted By: Micha Lenk
Committed By: covener",https://github.com/apache/httpd/commit/40c3bbe13786a7a1a57a4d67d55ad3a66820f0ad,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2018-4-11,1,7,8,11,1,Local,0.007620941020543,46,6036,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,40e773367cbd979feb264b824f204617c478eea3,modules/mappers/mod_rewrite.c,propagate gregames' change to the other callers of that function,https://github.com/apache/httpd/commit/40e773367cbd979feb264b824f204617c478eea3,Cliff Woolley,,,,2002-5-20,309,1,2,2,2,Local,0.007792524047242,64,8213,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,40e773367cbd979feb264b824f204617c478eea3,modules/ssl/ssl_engine_mutex.c,propagate gregames' change to the other callers of that function,https://github.com/apache/httpd/commit/40e773367cbd979feb264b824f204617c478eea3,Cliff Woolley,,,,2002-5-20,309,1,2,2,2,Local,0.002227171492205,2,898,Ralf S. Engelschall
CVE-2013-2249,,NA,,2013-7-23,2017-1-6,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"mod_session_dbd.c in the mod_session_dbd module in the Apache HTTP Server before 2.4.5 proceeds with save operations for a session without considering the dirty flag and the requirement for a new session ID, which has unspecified impact and remote attack vectors.",https://www.cvedetails.com/cve/CVE-2013-2249/,20130219,Yes. Fixed in Apache HTTP Server 2.4.6: https://httpd.apache.org/security/vulnerabilities_24.html ,"*) SECURITY: CVE-2013-2249 (cve.mitre.org)
mod_session_dbd: Make sure that dirty flag is respected when saving sessions, and ensure the session ID is changed each time the session changes. This changes the format of the updatesession SQL statement. Existing configurations must be changed.
     [Takashi Sato <takashi tks.st>, Graham Leggett]",No,2013-5-29,2013-7-22,2013-7-22,41f25c7f31c6aefca00b1221baa8667774eeaa91,CHANGES,"mod_session_dbd: Make sure that dirty flag is respected when saving sessions, and ensure the session ID is changed each time the session changes.",https://github.com/apache/httpd/commit/41f25c7f31c6aefca00b1221baa8667774eeaa91,Graham Leggett,minfrin,https://github.com/minfrin,,2013-5-31,1,4,4,52,38,Global,0.025870074735772,1170,45226,Jim Jagielski
CVE-2013-2249,,NA,,2013-7-23,2017-1-6,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"mod_session_dbd.c in the mod_session_dbd module in the Apache HTTP Server before 2.4.5 proceeds with save operations for a session without considering the dirty flag and the requirement for a new session ID, which has unspecified impact and remote attack vectors.",https://www.cvedetails.com/cve/CVE-2013-2249/,20130219,Yes. Fixed in Apache HTTP Server 2.4.6: https://httpd.apache.org/security/vulnerabilities_24.html ,"*) SECURITY: CVE-2013-2249 (cve.mitre.org)
mod_session_dbd: Make sure that dirty flag is respected when saving sessions, and ensure the session ID is changed each time the session changes. This changes the format of the updatesession SQL statement. Existing configurations must be changed.
     [Takashi Sato <takashi tks.st>, Graham Leggett]",No,2013-5-29,2013-7-22,2013-7-22,41f25c7f31c6aefca00b1221baa8667774eeaa91,modules/session/mod_session_cookie.c,"mod_session_dbd: Make sure that dirty flag is respected when saving sessions, and ensure the session ID is changed each time the session changes.",https://github.com/apache/httpd/commit/41f25c7f31c6aefca00b1221baa8667774eeaa91,Graham Leggett,minfrin,https://github.com/minfrin,,2013-5-31,1,0,1,52,38,Global,0.88268156424581,316,358,Graham Leggett
CVE-2013-2249,,NA,,2013-7-23,2017-1-6,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"mod_session_dbd.c in the mod_session_dbd module in the Apache HTTP Server before 2.4.5 proceeds with save operations for a session without considering the dirty flag and the requirement for a new session ID, which has unspecified impact and remote attack vectors.",https://www.cvedetails.com/cve/CVE-2013-2249/,20130219,Yes. Fixed in Apache HTTP Server 2.4.6: https://httpd.apache.org/security/vulnerabilities_24.html ,"*) SECURITY: CVE-2013-2249 (cve.mitre.org)
mod_session_dbd: Make sure that dirty flag is respected when saving sessions, and ensure the session ID is changed each time the session changes. This changes the format of the updatesession SQL statement. Existing configurations must be changed.
     [Takashi Sato <takashi tks.st>, Graham Leggett]",No,2013-5-29,2013-7-22,2013-7-22,41f25c7f31c6aefca00b1221baa8667774eeaa91,modules/session/mod_session_dbd.c,"mod_session_dbd: Make sure that dirty flag is respected when saving sessions, and ensure the session ID is changed each time the session changes.",https://github.com/apache/httpd/commit/41f25c7f31c6aefca00b1221baa8667774eeaa91,Graham Leggett,minfrin,https://github.com/minfrin,,2013-5-31,1,47,82,52,38,Global,0.84118291347207,768,913,Graham Leggett
CVE-2013-2249,,NA,,2013-7-23,2017-1-6,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"mod_session_dbd.c in the mod_session_dbd module in the Apache HTTP Server before 2.4.5 proceeds with save operations for a session without considering the dirty flag and the requirement for a new session ID, which has unspecified impact and remote attack vectors.",https://www.cvedetails.com/cve/CVE-2013-2249/,20130219,Yes. Fixed in Apache HTTP Server 2.4.6: https://httpd.apache.org/security/vulnerabilities_24.html ,"*) SECURITY: CVE-2013-2249 (cve.mitre.org)
mod_session_dbd: Make sure that dirty flag is respected when saving sessions, and ensure the session ID is changed each time the session changes. This changes the format of the updatesession SQL statement. Existing configurations must be changed.
     [Takashi Sato <takashi tks.st>, Graham Leggett]",No,2013-5-29,2013-7-22,2013-7-22,41f25c7f31c6aefca00b1221baa8667774eeaa91,modules/session/mod_session.c,"mod_session_dbd: Make sure that dirty flag is respected when saving sessions, and ensure the session ID is changed each time the session changes.",https://github.com/apache/httpd/commit/41f25c7f31c6aefca00b1221baa8667774eeaa91,Graham Leggett,minfrin,https://github.com/minfrin,,2013-5-31,1,1,3,52,38,Global,0.213414634146341,735,3444,Ruediger Pluem
CVE-2018-1312,287,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.0 to 2.4.29, when generating an HTTP Digest authentication challenge, the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed. In a cluster of servers using a common Digest authentication configuration, HTTP requests could be replayed across servers by an attacker without detection.",https://www.cvedetails.com/cve/CVE-2018-1312/,20170621,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2018-1312 (cve.mitre.org)
mod_auth_digest: Fix generation of nonce values to prevent replay attacks across servers using a common Digest domain. This change may cause problems if used with round robin load balancers. PR 54637. [Stefan Fritsch]", No,2013-3-5,2018-3-21,2018-3-21,4260611634e79682421db53470004ee3d2d8cbc5,CHANGES,"Actually use the secret when generating nonces. This change may cause problems if used with round robin load balancers. Before it is backported, we should add a directive to use a user specified secret.
PR: 54637",https://github.com/apache/httpd/commit/4260611634e79682421db53470004ee3d2d8cbc5,Stefan Fritsch,,,GeNUA mbH,2013-6-12,4,4,4,51,12,Local,0.018741574027007,848,45247,Jim Jagielski
CVE-2018-1312,287,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.0 to 2.4.29, when generating an HTTP Digest authentication challenge, the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed. In a cluster of servers using a common Digest authentication configuration, HTTP requests could be replayed across servers by an attacker without detection.",https://www.cvedetails.com/cve/CVE-2018-1312/,20170621,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2018-1312 (cve.mitre.org)
mod_auth_digest: Fix generation of nonce values to prevent replay attacks across servers using a common Digest domain. This change may cause problems if used with round robin load balancers. PR 54637. [Stefan Fritsch]", No,2013-3-5,2018-3-21,2018-3-21,4260611634e79682421db53470004ee3d2d8cbc5,modules/aaa/mod_auth_digest.c,"Actually use the secret when generating nonces. This change may cause problems if used with round robin load balancers. Before it is backported, we should add a directive to use a user specified secret.
PR: 54637",https://github.com/apache/httpd/commit/4260611634e79682421db53470004ee3d2d8cbc5,Stefan Fritsch,,,GeNUA mbH,2013-6-12,4,47,59,51,12,Local,0.069994646680942,523,7472,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,430d9ca06bee6dffb69fa0947f28779f931c839a,modules/http/byterange_filter.c,* As reads might have morphed the bucket and its length read until we reached the correct bucket for splitting.,https://github.com/apache/httpd/commit/430d9ca06bee6dffb69fa0947f28779f931c839a,Ruediger Pluem,,,,2011-8-25,13,66,74,66,8,Local,0.120746432491767,110,911,Justin Erenkrantz
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,44b1ea2f5b907e0788e22a940142ba6f4dbe4c6e,server/mpm/winnt/child.c,pconf global factors out nicely. The one other pconf appears to be eqivilant to pchild.,https://github.com/apache/httpd/commit/44b1ea2f5b907e0788e22a940142ba6f4dbe4c6e,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-29,13,3,7,106,1171,Global,1,1029,1029,William A. Rowe Jr
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,44b1ea2f5b907e0788e22a940142ba6f4dbe4c6e,server/mpm/winnt/mpm_winnt.c,pconf global factors out nicely. The one other pconf appears to be eqivilant to pchild.,https://github.com/apache/httpd/commit/44b1ea2f5b907e0788e22a940142ba6f4dbe4c6e,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-29,13,103,1227,106,1171,Global,0.293746011486918,4603,15670,Bill Stoddard
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,44b1ea2f5b907e0788e22a940142ba6f4dbe4c6e,server/mpm/winnt/mpm_winnt.h,pconf global factors out nicely. The one other pconf appears to be eqivilant to pchild.,https://github.com/apache/httpd/commit/44b1ea2f5b907e0788e22a940142ba6f4dbe4c6e,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-29,13,0,43,106,1171,Global,0.370883882149047,214,577,William A. Rowe Jr
CVE-2009-1890,189,NA,DoS,2009-7-5,2017-9-28,7.1,None,Remote,Medium,Not required,None,None,Complete,"The stream_reqbody_cl function in mod_proxy_http.c in the mod_proxy module in the Apache HTTP Server before 2.3.3, when a reverse proxy is configured, does not properly handle an amount of streamed data that exceeds the Content-Length value, which allows remote attackers to cause a denial of service (CPU consumption) via crafted requests.",https://www.cvedetails.com/cve/CVE-2009-1890/,20090602,Yes. Fixed in Apache HTTP Server 2.2.12. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2009-1890 (cve.mitre.org)
Fix a potential Denial-of-Service attack against mod_proxy in a
reverse proxy configuration, where a remote attacker can force a proxy process to consume CPU time indefinitely.  [Nick Kew, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.3]",Yes,2009-6-30,2009-7-2,2009-7-27,4685944e0654edbe22351f6425323cf8634de01c,CHANGES,"Security fix for CVE-2009-1890:
* modules/proxy/mod_proxy_http.c (stream_reqbody_cl): Specify the base passed to apr_strtoff, and validate the Content-Length in the same way the HTTP_IN filter does.  If the number of bytes streamed exceeds the expected body length, bail out of the loop.
Submitted by: niq, jorton",https://github.com/apache/httpd/commit/4685944e0654edbe22351f6425323cf8634de01c,Joe Orton,notroj,,Red Hat,2009-7-2,1,5,5,21,5,Local,0.017702685663851,702,39655,Jim Jagielski
CVE-2009-1890,189,NA,DoS,2009-7-5,2017-9-28,7.1,None,Remote,Medium,Not required,None,None,Complete,"The stream_reqbody_cl function in mod_proxy_http.c in the mod_proxy module in the Apache HTTP Server before 2.3.3, when a reverse proxy is configured, does not properly handle an amount of streamed data that exceeds the Content-Length value, which allows remote attackers to cause a denial of service (CPU consumption) via crafted requests.",https://www.cvedetails.com/cve/CVE-2009-1890/,20090602,Yes. Fixed in Apache HTTP Server 2.2.12. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2009-1890 (cve.mitre.org)
Fix a potential Denial-of-Service attack against mod_proxy in a
reverse proxy configuration, where a remote attacker can force a proxy process to consume CPU time indefinitely.  [Nick Kew, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.3]",Yes,2009-6-30,2009-7-2,2009-7-27,4685944e0654edbe22351f6425323cf8634de01c,modules/proxy/mod_proxy_http.c,"Security fix for CVE-2009-1890:
* modules/proxy/mod_proxy_http.c (stream_reqbody_cl): Specify the base passed to apr_strtoff, and validate the Content-Length in the same way the HTTP_IN filter does.  If the number of bytes streamed exceeds the expected body length, bail out of the loop.
Submitted by: niq, jorton",https://github.com/apache/httpd/commit/4685944e0654edbe22351f6425323cf8634de01c,Joe Orton,notroj,,Red Hat,2009-7-2,1,16,21,21,5,Local,0.017684416218857,181,10235,William A. Rowe Jr
CVE-2012-4557,399,NA,DoS,2012-11-30,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,"The mod_proxy_ajp module in the Apache HTTP Server 2.2.12 through 2.2.21 places a worker node into an error state upon detection of a long request-processing time, which allows remote attackers to cause a denial of service (worker consumption) via an expensive request.",https://www.cvedetails.com/cve/CVE-2012-4557/,20120821,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,*) mod_proxy_ajp: Try to prevent a single long request from marking a worker in error. [Jean-Frederic Clere],No,2012-10-11,2012-1-4,2012-1-31,46a5b797e62fb2a4bb924f79b5620266503bef85,modules/proxy/mod_proxy_ajp.c,Fixed missing struct member error introduced with r1092076.,https://github.com/apache/httpd/commit/46a5b797e62fb2a4bb924f79b5620266503bef85,Guenter Knauf,,,,2011-4-14,NA,1,2,1,1,Global,0.000582241630277,2,3435,William A. Rowe Jr
CVE-2003-0254,,NA,DoS,2003-8-18,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Apache 2 before 2.0.47, when running on an IPv6 host, allows attackers to cause a denial of service (CPU consumption by infinite loop) when the FTP proxy server fails to create an IPv6 socket.",https://www.cvedetails.com/cve/CVE-2003-0254/,20030506,Yes. Fixed in Apache HTTP Server 2.0.47: http://httpd.apache.org/security/vulnerabilities_20.html ,*) SECURITY [CAN-2003-0254]: Fixed a bug in ftp proxy causing denial of service when target host is IPv6 but proxy server can't create IPv6 socket.  Fixed by the reporter.  [Yoshioka Tsuneo <tsuneo.yoshioka@f-secure.com>],No,2003-6-25,2003-7-9,2003-7-9,46e359cd54f16e830ea9c8830eaa4773f420f5dc,CHANGES,"Forward port security patch for CAN-2003-0254 from 2.0.
SECURITY [CAN-2003-0254]: Fixed a bug in ftp proxy causing denial of service when target host is IPv6 but proxy server can't create IPv6 socket.  Fixed by the reporter.  [Yoshioka Tsuneo <tsuneo.yoshioka@f-secure.com>]",https://github.com/apache/httpd/commit/46e359cd54f16e830ea9c8830eaa4773f420f5dc,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-7-9,1,5,5,7,0,Local,0.005355303810505,78,14565,Roy T. Fielding
CVE-2003-0254,,NA,DoS,2003-8-18,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Apache 2 before 2.0.47, when running on an IPv6 host, allows attackers to cause a denial of service (CPU consumption by infinite loop) when the FTP proxy server fails to create an IPv6 socket.",https://www.cvedetails.com/cve/CVE-2003-0254/,20030506,Yes. Fixed in Apache HTTP Server 2.0.47: http://httpd.apache.org/security/vulnerabilities_20.html ,*) SECURITY [CAN-2003-0254]: Fixed a bug in ftp proxy causing denial of service when target host is IPv6 but proxy server can't create IPv6 socket.  Fixed by the reporter.  [Yoshioka Tsuneo <tsuneo.yoshioka@f-secure.com>],No,2003-6-25,2003-7-9,2003-7-9,46e359cd54f16e830ea9c8830eaa4773f420f5dc,modules/proxy/proxy_ftp.c,"Forward port security patch for CAN-2003-0254 from 2.0.
SECURITY [CAN-2003-0254]: Fixed a bug in ftp proxy causing denial of service when target host is IPv6 but proxy server can't create IPv6 socket.  Fixed by the reporter.  [Yoshioka Tsuneo <tsuneo.yoshioka@f-secure.com>]",https://github.com/apache/httpd/commit/46e359cd54f16e830ea9c8830eaa4773f420f5dc,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-7-9,1,2,2,7,0,Local,0.000178986933954,2,11174,Martin Kraemer
CVE-2008-2364,299,NA,DoS,2008-6-13,2017-9-28,5,None,Remote,Low,Not required,None,None,Partial,"The ap_proxy_http_process_response function in mod_proxy_http.c in the mod_proxy module in the Apache HTTP Server 2.0.63 and 2.2.8 does not limit the number of forwarded interim responses, which allows remote HTTP servers to cause a denial of service (memory consumption) via a large number of interim responses.",https://www.cvedetails.com/cve/CVE-2008-2364/,20080521,Yes. Fixed in Apache HTTP Server 2.2.9. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2008-2364 (cve.mitre.org)
mod_proxy_http: Better handling of excessive interim responses from origin server to prevent potential denial of service and high
memory usage. Reported by Ryujiro Shibuya. [Ruediger Pluem, Joe Orton, Jim Jagielski]",No,2008-5-29,2008-6-10,2008-6-14,4711f90002dea305600274287e470b696f6ae79b,CHANGES,Patch for CVE-2008-2364...,https://github.com/apache/httpd/commit/4711f90002dea305600274287e470b696f6ae79b,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2008-6-10,1,6,6,34,5,Local,0.419499151540083,16316,38894,Jim Jagielski
CVE-2008-2364,299,NA,DoS,2008-6-13,2017-9-28,5,None,Remote,Low,Not required,None,None,Partial,"The ap_proxy_http_process_response function in mod_proxy_http.c in the mod_proxy module in the Apache HTTP Server 2.0.63 and 2.2.8 does not limit the number of forwarded interim responses, which allows remote HTTP servers to cause a denial of service (memory consumption) via a large number of interim responses.",https://www.cvedetails.com/cve/CVE-2008-2364/,20080521,Yes. Fixed in Apache HTTP Server 2.2.9. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2008-2364 (cve.mitre.org)
mod_proxy_http: Better handling of excessive interim responses from origin server to prevent potential denial of service and high
memory usage. Reported by Ryujiro Shibuya. [Ruediger Pluem, Joe Orton, Jim Jagielski]",no,2008-5-29,2008-6-10,2008-6-14,4711f90002dea305600274287e470b696f6ae79b,modules/proxy/mod_proxy_http.c,Patch for CVE-2008-2364...,https://github.com/apache/httpd/commit/4711f90002dea305600274287e470b696f6ae79b,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2008-6-10,1,28,33,34,5,Local,0.031435349940688,318,10116,William A. Rowe Jr
CVE-2002-1156,,NA,,2002-10-11,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,Apache 2.0.42 allows remote attackers to view the source code of a CGI script via a POST request to a directory with both WebDAV and CGI enabled.,https://www.cvedetails.com/cve/CVE-2002-1156/,20040901,Yes. Fixed in Apache HTTP Server 2.0.43: http://httpd.apache.org/security/vulnerabilities_20.html,"moderate: CGI scripts source revealed using WebDAV (CVE-2002-1156)
In Apache 2.0.42 only, for a location where both WebDAV and CGI were enabled, a POST request to a CGI script would reveal the CGI source to a remote user.",No,,,2002-10-3,47617c4fc099860dd79475fc77e78966a01854ec,server/core.c,Fix bug in the default handler. POST is not allowed on regular files. The resource must be handled by something *other* than the default handler.,https://github.com/apache/httpd/commit/47617c4fc099860dd79475fc77e78966a01854ec,Greg Stein,gstein,https://github.com/gstein,Apache,2002-10-1,2,8,8,8,0,Local,0.007495538370018,63,8405,Ryan Bloom
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,CHANGES,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,5,5,132,23,Global,0.018254291796893,403,22077,Roy T. Fielding
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,include/mpm_common.h,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,8,8,132,23,Global,0.021558872305141,13,603,Ryan Bloom
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/main.c,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,1,1,132,23,Global,0.000829293187038,13,15676,Roy T. Fielding
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm_common.c,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,39,39,132,23,Global,0.088771787596271,219,2467,Jeff Trawick
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/beos/mpm.h,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,4,5,132,23,Global,0.022222222222222,5,225,David Reid
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/experimental/event/event.c,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,4,5,132,23,Global,0.0214399152991,81,3778,Paul Querna
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/experimental/event/mpm.h,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,4,5,132,23,Global,0.060240963855422,5,83,Paul Querna
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/experimental/leader/mpm.h,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,4,5,132,23,Global,0.025125628140704,5,199,Brian Pane
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/experimental/perchild/mpm.h,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,4,5,132,23,Global,0.02262443438914,5,221,Ryan Bloom
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/experimental/threadpool/mpm.h,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,4,5,132,23,Global,0.025510204081633,5,196,Brian Pane
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/mpmt_os2/mpmt_os2.c,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,10,11,132,23,Global,0.089519650655022,82,916,Brian Havard
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/netware/mpm.h,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,4,5,132,23,Global,0.023041474654378,5,217,Bradley Nicholes
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/prefork/mpm.h,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,4,5,132,23,Global,0.023255813953488,5,215,Ryan Bloom
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/prefork/prefork.c,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,23,34,132,23,Global,0.321961434429805,3690,11461,Jim Jagielski
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/worker/mpm.h,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,4,5,132,23,Global,0.023923444976077,5,209,Ryan Bloom
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/mpm/worker/worker.c,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,6,7,132,23,Global,0.050251256281407,310,6169,Ryan Bloom
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,47b08d484c1b906f2e03e8bc9ae8d70badcfa782,server/scoreboard.c,PID table impl: parent process keeps a local table store of Apache child process PIDs and uses that to check validity of what's in the scoreboard.,https://github.com/apache/httpd/commit/47b08d484c1b906f2e03e8bc9ae8d70badcfa782,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2007-6-16,13,3,4,132,23,Global,0.231187960294589,722,3123,Ryan Bloom
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,47b5a1ceec9db436ac6aba7a4fd48ebb99acb4e6,CHANGES,mod_rewrite: Fix the line ending on some non-Unix system for messages written to the rewrite log.,https://github.com/apache/httpd/commit/47b5a1ceec9db436ac6aba7a4fd48ebb99acb4e6,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-8-7,4,4,4,5,1,Local,0.016416276987364,165,10051,Roy T. Fielding
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.19: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,47b5a1ceec9db436ac6aba7a4fd48ebb99acb4e6,modules/mappers/mod_rewrite.c,mod_rewrite: Fix the line ending on some non-Unix system for messages written to the rewrite log.,https://github.com/apache/httpd/commit/47b5a1ceec9db436ac6aba7a4fd48ebb99acb4e6,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-8-7,4,1,2,5,1,Local,0.036320254506893,274,7544,Roy T. Fielding
CVE-2000-1204,Not defined,NA,,2000-10-13,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"Vulnerability in the mod_vhost_alias virtual hosting module for Apache 1.3.9, 1.3.11 and 1.3.12 allows remote attackers to obtain the source code for CGI programs if the cgi-bin directory is under the document root",https://www.cvedetails.com/cve/CVE-2000-1204/,20020501,Yes. Fixed in Apache HTTP Server 1.3.14: http://httpd.apache.org/security/vulnerabilities_13.html,"A security problem for users of the mass virtual hosting module, mod_vhost_alias, causes the source to a CGI to be sent if the cgi-bin directory is under the document root. However, it is not normal to have your cgi-bin directory under a document root. 
[http://archive.apache.org/gnats/6684]",No,,,2000-10-13,47d4ff88e2d49c223a6fb40b75e232140aa1200a,modules/mappers/mod_rewrite.c,Fix a compile error in mod_rewrite.c,https://github.com/apache/httpd/commit/47d4ff88e2d49c223a6fb40b75e232140aa1200a,Jeff Trawick,trawick,https://github.com/trawick?tab=overview&from=2003-12-01&to=2003-12-31,Apache,2000-10-18,1,1,2,1,1,Local,0.028663351857268,196,6838,Roy T. Fielding
CVE-2010-2068,200,NA,+Info,2010-6-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"mod_proxy_http.c in mod_proxy_http in the Apache HTTP Server 2.2.9 through 2.2.15, 2.3.4-alpha, and 2.3.5-alpha on Windows, NetWare, and OS/2, in certain configurations involving proxy worker pools, does not properly detect timeouts, which allows remote attackers to obtain a potentially sensitive response intended for a different client in opportunistic circumstances via a normal HTTP request.",https://www.cvedetails.com/cve/CVE-2010-2068/,20100525,Yes. Fixed in Apache HTTP Server 2.2.16: http://httpd.apache.org/security/vulnerabilities_22.html," *) SECURITY: CVE-2010-2068 (cve.mitre.org) 
mod_proxy_ajp, mod_proxy_http, mod_reqtimeout: Fix timeout detection for platforms Windows, Netware and OS2.  PR: 49417. [Rainer Jung]",Yes,,2010-6-9,2010-7-25,4952992084c321c21f6b11c9b9420c7272b7b589,modules/proxy/mod_proxy_http.c,"* Use APR_STATUS_IS_TIMEUP instead of direct compare to APR_TIMEUP to be more safe on different platforms.
Pointed out by: rjung",https://github.com/apache/httpd/commit/4952992084c321c21f6b11c9b9420c7272b7b589,Ruediger Pluem,,,,2010-6-10,1,4,6,4,2,Local,0.00057764513334,6,10387,Graham Leggett
CVE-2003-0542,119,NA,DOS Exec Code Overflow,2003-11-3,2018-5-2,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,Multiple stack-based buffer overflows in (1) mod_alias and (2) mod_rewrite for Apache before 1.3.29 allow attackers to create configuration files to cause a denial of service (crash) or execute arbitrary code via a regular expression with more than 9 captures.,https://www.cvedetails.com/cve/CVE-2003-0542/,20030714,Yes. Fixed in Apache HTTP Server 2.0.48 and 1.3.29: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,A buffer overflow could occur in mod_alias and mod_rewrite when a regular expression with more than 9 captures is configured.[CAN-2003-0542],No,2003-8-4,2003-10-27,2003-10-27,49a9edffea9187def3dcfb19f11e02f782af0dc8,CHANGES,"Fold in the CAN-2003-0542 regex patch.
",https://github.com/apache/httpd/commit/49a9edffea9187def3dcfb19f11e02f782af0dc8,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-10-24,1,5,5,31,25,Global,0.008684123301293,131,15085,Roy T. Fielding
CVE-2003-0542,119,NA,DOS Exec Code Overflow,2003-11-3,2018-5-2,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,Multiple stack-based buffer overflows in (1) mod_alias and (2) mod_rewrite for Apache before 1.3.29 allow attackers to create configuration files to cause a denial of service (crash) or execute arbitrary code via a regular expression with more than 9 captures.,https://www.cvedetails.com/cve/CVE-2003-0542/,20030714,Yes. Fixed in Apache HTTP Server 2.0.48 and 1.3.29: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,A buffer overflow could occur in mod_alias and mod_rewrite when a regular expression with more than 9 captures is configured.[CAN-2003-0542],No,2003-8-4,2003-10-27,2003-10-27,49a9edffea9187def3dcfb19f11e02f782af0dc8,include/httpd.h,"Fold in the CAN-2003-0542 regex patch.
",https://github.com/apache/httpd/commit/49a9edffea9187def3dcfb19f11e02f782af0dc8,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-10-24,1,3,3,31,25,Global,0.003460207612457,17,4913,Ryan Bloom
CVE-2003-0542,119,NA,DOS Exec Code Overflow,2003-11-3,2018-5-2,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,Multiple stack-based buffer overflows in (1) mod_alias and (2) mod_rewrite for Apache before 1.3.29 allow attackers to create configuration files to cause a denial of service (crash) or execute arbitrary code via a regular expression with more than 9 captures.,https://www.cvedetails.com/cve/CVE-2003-0542/,20030714,Yes. Fixed in Apache HTTP Server 2.0.48 and 1.3.29: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,A buffer overflow could occur in mod_alias and mod_rewrite when a regular expression with more than 9 captures is configured.[CAN-2003-0542],No,2003-8-4,2003-10-27,2003-10-27,49a9edffea9187def3dcfb19f11e02f782af0dc8,modules/filters/mod_include.c,"Fold in the CAN-2003-0542 regex patch.
",https://github.com/apache/httpd/commit/49a9edffea9187def3dcfb19f11e02f782af0dc8,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-10-24,1,3,8,31,25,Global,0.000359955005624,8,22225,Andre Malo
CVE-2003-0542,119,NA,DOS Exec Code Overflow,2003-11-3,2018-5-2,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,Multiple stack-based buffer overflows in (1) mod_alias and (2) mod_rewrite for Apache before 1.3.29 allow attackers to create configuration files to cause a denial of service (crash) or execute arbitrary code via a regular expression with more than 9 captures.,https://www.cvedetails.com/cve/CVE-2003-0542/,20030714,Yes. Fixed in Apache HTTP Server 2.0.48 and 1.3.29: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,A buffer overflow could occur in mod_alias and mod_rewrite when a regular expression with more than 9 captures is configured.[CAN-2003-0542],No,2003-8-4,2003-10-27,2003-10-27,49a9edffea9187def3dcfb19f11e02f782af0dc8,modules/mappers/mod_alias.c,"Fold in the CAN-2003-0542 regex patch.
",https://github.com/apache/httpd/commit/49a9edffea9187def3dcfb19f11e02f782af0dc8,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-10-24,1,3,7,31,25,Global,0.005872483221477,7,1192,Roy T. Fielding
CVE-2003-0542,119,NA,DOS Exec Code Overflow,2003-11-3,2018-5-2,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,Multiple stack-based buffer overflows in (1) mod_alias and (2) mod_rewrite for Apache before 1.3.29 allow attackers to create configuration files to cause a denial of service (crash) or execute arbitrary code via a regular expression with more than 9 captures.,https://www.cvedetails.com/cve/CVE-2003-0542/,20030714,Yes. Fixed in Apache HTTP Server 2.0.48 and 1.3.29: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,A buffer overflow could occur in mod_alias and mod_rewrite when a regular expression with more than 9 captures is configured.[CAN-2003-0542],No,2003-8-4,2003-10-27,2003-10-27,49a9edffea9187def3dcfb19f11e02f782af0dc8,modules/mappers/mod_rewrite.c,"Fold in the CAN-2003-0542 regex patch.
",https://github.com/apache/httpd/commit/49a9edffea9187def3dcfb19f11e02f782af0dc8,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-10-24,1,6,15,31,25,Global,0.001143589039843,25,21861,Andre Malo
CVE-2003-0542,119,NA,DOS Exec Code Overflow,2003-11-3,2018-5-2,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,Multiple stack-based buffer overflows in (1) mod_alias and (2) mod_rewrite for Apache before 1.3.29 allow attackers to create configuration files to cause a denial of service (crash) or execute arbitrary code via a regular expression with more than 9 captures.,https://www.cvedetails.com/cve/CVE-2003-0542/,20030714,Yes. Fixed in Apache HTTP Server 2.0.48 and 1.3.29: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,A buffer overflow could occur in mod_alias and mod_rewrite when a regular expression with more than 9 captures is configured.[CAN-2003-0542],No,2003-8-4,2003-10-27,2003-10-27,49a9edffea9187def3dcfb19f11e02f782af0dc8,modules/metadata/mod_setenvif.c,"Fold in the CAN-2003-0542 regex patch.
",https://github.com/apache/httpd/commit/49a9edffea9187def3dcfb19f11e02f782af0dc8,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-10-24,1,4,8,31,25,Global,0.006661115736886,8,1201,Roy T. Fielding
CVE-2003-0542,119,NA,DOS Exec Code Overflow,2003-11-3,2018-5-2,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,Multiple stack-based buffer overflows in (1) mod_alias and (2) mod_rewrite for Apache before 1.3.29 allow attackers to create configuration files to cause a denial of service (crash) or execute arbitrary code via a regular expression with more than 9 captures.,https://www.cvedetails.com/cve/CVE-2003-0542/,20030714,Yes. Fixed in Apache HTTP Server 2.0.48 and 1.3.29: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,A buffer overflow could occur in mod_alias and mod_rewrite when a regular expression with more than 9 captures is configured.[CAN-2003-0542],No,2003-8-4,2003-10-27,2003-10-27,49a9edffea9187def3dcfb19f11e02f782af0dc8,modules/proxy/proxy_ftp.c,"Fold in the CAN-2003-0542 regex patch.
",https://github.com/apache/httpd/commit/49a9edffea9187def3dcfb19f11e02f782af0dc8,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-10-24,1,7,10,31,25,Global,0.00107104605498,12,11204,Martin Kraemer
CVE-2012-0021,20,NA,DoS,2012-1-27,2018-1-17,2.6,None,Remote,High,Not required,None,None,Partial,"The log_cookie function in mod_log_config.c in the mod_log_config module in the Apache HTTP Server 2.2.17 through 2.2.21, when a threaded MPM is used, does not properly handle a %{}C format string, which allows remote attackers to cause a denial of service (daemon crash) via a cookie that lacks both a name and a value.",https://www.cvedetails.com/cve/CVE-2012-0021/,20111207,Yes. Fixed in Apache HTTP Server 2.2.22: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2012-0021 (cve.mitre.org)
mod_log_config: Fix segfault (crash) when the '%{cookiename}C' log format string is in use and a client sends a nameless, valueless cookie, causing a denial of service. The issue existed since version 2.2.17. PR 52256.
[Rainer Canavan <rainer-apache 7val com>]",No,2011-12-30,2011-11-28,2012-1-31,4a1f888e0a2c478db5c97ffd3670058d28a42b0b,modules/loggers/mod_log_config.c,"Fix segfault when trying to log a nameless valueless cookie
PR: 52256
Submitted by: Rainer Canavan <rainer-apache 7val com>",https://github.com/apache/httpd/commit/4a1f888e0a2c478db5c97ffd3670058d28a42b0b,Stefan Fritsch,,,GeNUA mbH,2011-12-29,1,14,26,14,12,Local,0.051800690675876,210,4054,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,4af62d95739932db602d7c4a44bebb4d85a586af,modules/http/byterange_filter.c,"* Buckets of known length should be always splitable. So we don't need to care about the APR_ENOTIMPL case.
Submitted by: jorton
Reviewed by: rpluem",https://github.com/apache/httpd/commit/4af62d95739932db602d7c4a44bebb4d85a586af,Ruediger Pluem,,,,2011-9-3,13,6,76,6,70,Local,0.153684210526316,292,1900,Jim Jagielski
CVE-2010-2791,200,NA,+Info,2010-8-5,2017-8-16,5,None,Remote,Low,Not required,Partial,None,None,"mod_proxy in httpd in Apache HTTP Server 2.2.9, when running on Unix, does not close the backend connection if a timeout occurs when reading a response from a persistent connection, which allows remote attackers to obtain a potentially sensitive response intended for a different client in opportunistic circumstances via a normal HTTP request. NOTE: this is the same issue as CVE-2010-2068, but for a different OS and set of affected versions.",https://www.cvedetails.com/cve/CVE-2010-2791/,20100722,Yes. Fixed in Apache HTTP Server 2.2.10: http://httpd.apache.org/security/vulnerabilities_22.html," *) mod_proxy_http: Don't trigger a retry by the client if a failure to
     read the response line was the result of a timeout.
     [Adam Woodworth <mirkperl gmail.com>]",No,,2010-7-23,2008-10-31,4baa3df3324ad041e4850f6297252c86918f6f6b,modules/proxy/mod_proxy_http.c,"For timeouts, behave as before and not drop.
From Adam Woodworth <mirkperl gmail.com>",https://github.com/apache/httpd/commit/4baa3df3324ad041e4850f6297252c86918f6f6b,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2008-9-20,1,9,11,9,2,Local,0.032820816085157,333,10146,William A. Rowe Jr
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,4bb7c368a7e9583f1cee827c2ab45c3fbfb52064,server/mpm/mpmt_os2/mpmt_os2_child.c,"When an exception in a worker thread initiates a child shutdown, get things moving sooner by sending a SIGHUP to the accept thread, breaking it out of its accept/poll.",https://github.com/apache/httpd/commit/4bb7c368a7e9583f1cee827c2ab45c3fbfb52064,Brian Havard,,http://silk.apana.org.au/,,2002-4-17,309,1,1,1,0,Local,0.905096660808436,515,569,Brian Havard
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,4bd792500094584329719e403a5d4d16c66e5c89,docs/manual/mod/core.xml,"Rename the previously undocumented HTTPProtocol directive to EnforceHTTPProtocol, and invert the default behavior to strictly observe RFC 7230 unless otherwise configured. And Document This.
The relaxation option is renamed 'Unsafe'. 'Strict' is no longer case sensitive. 'min=0.9|1.0' is now the verbose 'Allow0.9' or 'Require1.0' case-insenstive grammer. The exclusivity tests have been modified to detect conflicts.
The 'strict,log' option failed to enforce strict conformance, and has been removed. Unsafe, informational logging is possible in any loadable module, after the request data is unsafely accepted.
This triggers a group of failures in t/apache/headers.t as expected since those patterns violated RFC 7230 section 3.2.4.",https://github.com/apache/httpd/commit/4bd792500094584329719e403a5d4d16c66e5c89,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-16,60,54,54,110,65,Global,0.02059880239521,258,12525,Joshua Slive
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,4bd792500094584329719e403a5d4d16c66e5c89,modules/http/http_filters.c,"Rename the previously undocumented HTTPProtocol directive to EnforceHTTPProtocol, and invert the default behavior to strictly observe RFC 7230 unless otherwise configured. And Document This.
The relaxation option is renamed 'Unsafe'. 'Strict' is no longer case sensitive. 'min=0.9|1.0' is now the verbose 'Allow0.9' or 'Require1.0' case-insenstive grammer. The exclusivity tests have been modified to detect conflicts.
The 'strict,log' option failed to enforce strict conformance, and has been removed. Unsafe, informational logging is possible in any loadable module, after the request data is unsafely accepted.
This triggers a group of failures in t/apache/headers.t as expected since those patterns violated RFC 7230 section 3.2.4.",https://github.com/apache/httpd/commit/4bd792500094584329719e403a5d4d16c66e5c89,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-16,60,2,4,110,65,Global,0.052300347222222,241,4608,Graham Leggett
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,4bd792500094584329719e403a5d4d16c66e5c89,server/core.c,"Rename the previously undocumented HTTPProtocol directive to EnforceHTTPProtocol, and invert the default behavior to strictly observe RFC 7230 unless otherwise configured. And Document This.
The relaxation option is renamed 'Unsafe'. 'Strict' is no longer case sensitive. 'min=0.9|1.0' is now the verbose 'Allow0.9' or 'Require1.0' case-insenstive grammer. The exclusivity tests have been modified to detect conflicts.
The 'strict,log' option failed to enforce strict conformance, and has been removed. Unsafe, informational logging is possible in any loadable module, after the request data is unsafely accepted.
This triggers a group of failures in t/apache/headers.t as expected since those patterns violated RFC 7230 section 3.2.4.",https://github.com/apache/httpd/commit/4bd792500094584329719e403a5d4d16c66e5c89,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-16,60,28,54,110,65,Global,0.150349035020825,2563,17047,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,4bd792500094584329719e403a5d4d16c66e5c89,server/protocol.c,"Rename the previously undocumented HTTPProtocol directive to EnforceHTTPProtocol, and invert the default behavior to strictly observe RFC 7230 unless otherwise configured. And Document This.
The relaxation option is renamed 'Unsafe'. 'Strict' is no longer case sensitive. 'min=0.9|1.0' is now the verbose 'Allow0.9' or 'Require1.0' case-insenstive grammer. The exclusivity tests have been modified to detect conflicts.
The 'strict,log' option failed to enforce strict conformance, and has been removed. Unsafe, informational logging is possible in any loadable module, after the request data is unsafely accepted.
This triggers a group of failures in t/apache/headers.t as expected since those patterns violated RFC 7230 section 3.2.4.",https://github.com/apache/httpd/commit/4bd792500094584329719e403a5d4d16c66e5c89,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-16,60,19,42,110,65,Global,0.150865952547803,1507,9989,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,4bd792500094584329719e403a5d4d16c66e5c89,server/vhost.c,"Rename the previously undocumented HTTPProtocol directive to EnforceHTTPProtocol, and invert the default behavior to strictly observe RFC 7230 unless otherwise configured. And Document This.
The relaxation option is renamed 'Unsafe'. 'Strict' is no longer case sensitive. 'min=0.9|1.0' is now the verbose 'Allow0.9' or 'Require1.0' case-insenstive grammer. The exclusivity tests have been modified to detect conflicts.
The 'strict,log' option failed to enforce strict conformance, and has been removed. Unsafe, informational logging is possible in any loadable module, after the request data is unsafely accepted.
This triggers a group of failures in t/apache/headers.t as expected since those patterns violated RFC 7230 section 3.2.4.",https://github.com/apache/httpd/commit/4bd792500094584329719e403a5d4d16c66e5c89,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-16,60,7,21,110,65,Global,0.009152719665272,35,3824,Roy T. Fielding
CVE-2005-1344,,NA,Exec Code Overflow,2005-5-2,2008-9-10,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"Buffer overflow in htdigest in Apache 2.0.52 may allow attackers to execute arbitrary code via a long realm argument. NOTE: since htdigest is normally only locally accessible and not setuid or setgid, there are few attack vectors which would lead to an escalation of privileges, unless htdigest is executed from a CGI program. Therefore this may not be a vulnerability.",https://www.cvedetails.com/cve/CVE-2005-1344/,20050427,No. Red Hat does not consider this to be a vulnerability. htdigest is not supplied setuid or setgid and should not be run from a CGI program.,,No,,,,4bedda4b449040ca5aaac90a5e3b65788faa3746,support/htdigest.c,"htdigest: Fix possible overflow in command line processing. htdigest is not supposed to be suid save, therefore not treated as a security issue.

CVE-2005-1344
Submitted by: Adam Conrad
Reviewed by: Stefan Fritsch",https://github.com/apache/httpd/commit/4bedda4b449040ca5aaac90a5e3b65788faa3746,Stefan Fritsch,,,GeNUA mbH,2009-10-18,1,4,6,4,2,Local,0.005097706032285,6,1177,Roy T. Fielding
CVE-2004-0751,,NA,DoS,2004-10-20,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"The char_buffer_read function in the mod_ssl module for Apache 2.x, when using reverse proxying to an SSL server, allows remote attackers to cause a denial of service (segmentation fault).",https://www.cvedetails.com/cve/CVE-2004-0751/,20040726,Yes. Fixed in Apache HTTP Server 2.0.51: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0751 (cve.mitre.org)
     mod_ssl: Fix a segfault in the SSL input filter which could be triggered if using ""speculative"" mode, for instance by a proxy request to an SSL server.  PR 30134.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2004-7-7,2004-9-15,4c7ada7ade305b9a3e34e5f252c0b2d1efba5005,CHANGES,"* modules/ssl/ssl_engine_io.c (ssl_io_input_read): Fix rollback handling for AP_MODE_SPECULATIVE.
PR: 30134",https://github.com/apache/httpd/commit/4c7ada7ade305b9a3e34e5f252c0b2d1efba5005,Joe Orton,notroj,,Red Hat,2004-8-17,1,5,5,11,2,Local,0.010861734552508,196,18045,Roy T. Fielding
CVE-2004-0751,,NA,DoS,2004-10-20,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"The char_buffer_read function in the mod_ssl module for Apache 2.x, when using reverse proxying to an SSL server, allows remote attackers to cause a denial of service (segmentation fault).",https://www.cvedetails.com/cve/CVE-2004-0751/,20040726,Yes. Fixed in Apache HTTP Server 2.0.51: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0751 (cve.mitre.org)
     mod_ssl: Fix a segfault in the SSL input filter which could be triggered if using ""speculative"" mode, for instance by a proxy request to an SSL server.  PR 30134.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2004-7-7,2004-9-15,4c7ada7ade305b9a3e34e5f252c0b2d1efba5005,modules/ssl/ssl_engine_io.c,"* modules/ssl/ssl_engine_io.c (ssl_io_input_read): Fix rollback handling for AP_MODE_SPECULATIVE.
PR: 30134",https://github.com/apache/httpd/commit/4c7ada7ade305b9a3e34e5f252c0b2d1efba5005,Joe Orton,notroj,,Red Hat,2004-8-17,1,6,8,11,2,Local,0.013068880688807,85,6504,William A. Rowe Jr
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,4d3526bbcb3ee2d2dcacb83d4ec8bf65be1a7e1f,server/request.c,"Fix a segfault (was getting triggered by mod_include at least) caused by calling ap_allow_options() before setting rnew->per_dir_config. 
This is the “easy looking” fix but might have side effects of which I?m unaware",https://github.com/apache/httpd/commit/4d3526bbcb3ee2d2dcacb83d4ec8bf65be1a7e1f,Cliff Woolley,,,,2001-8-7,4,2,4,2,2,Local,0.001651527663088,4,2422,William A. Rowe Jr
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,4dadce4257f8f2be38c978c5e3545887c360fc68,modules/arch/netware/mod_netware.c,Fixed the ap_cgi_build_command() function for NetWare so that it correctly builds both the CGI and SSI command strings.,https://github.com/apache/httpd/commit/4dadce4257f8f2be38c978c5e3545887c360fc68,Bradley Nicholes,,,Novell,2002-7-25,13,11,14,11,3,Local,1,682,682,Bradley Nicholes
CVE-2003-0460,,NA,DoS,2003-8-27,2008-9-5,5,None,Remote,Low,Not required,None,None,Partial,"The rotatelogs program on Apache before 1.3.28, for Windows and OS/2 systems, does not properly ignore certain control characters that are received over the pipe, which could allow remote attackers to cause a denial of service.",https://www.cvedetails.com/cve/CVE-2003-0460/,20030626,Yes. Fixed in Apache HTTP Server 1.3.28: http://httpd.apache.org/security/vulnerabilities_13.html ," *) SECURITY: CVE-2003-0460 (cve.mitre.org)
     Fix the rotatelogs support program on Win32 and OS/2 to ignore special control characters received over the pipe. Previously
     such characters could cause rotatelogs to quit logging and exit. [André Malo]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]",No,2003-7-4,2003-7-18,2003-7-18,4eb8921f9fc143d3f82f7a655adb387cfc294cd6,modules/mappers/mod_rewrite.c,step two: get a rid of the old do_expand function.,https://github.com/apache/httpd/commit/4eb8921f9fc143d3f82f7a655adb387cfc294cd6,Andre Malo,,,,2003-7-17,2,0,138,0,138,Global,0.150680905261095,1538,10207,Roy T. Fielding
CVE-2017-7668,20,NA,,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"The HTTP strict parsing changes added in Apache httpd 2.2.32 and 2.4.24 introduced a bug in token list parsing, which allows ap_find_token() to search past the end of its input string. By maliciously crafting a sequence of request headers, an attacker may be able to cause a segmentation fault, or to force ap_find_token() to return an incorrect value.",https://www.cvedetails.com/cve/CVE-2017-7668/,20170411,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-7668 (cve.mitre.org)
The HTTP strict parsing changes added in 2.2.32 and 2.4.24 introduced a bug in token list parsing, which allows ap_find_token() to search past the end of its input string. By maliciously crafting a sequence of request headers, an attacker may be able to cause a segmentation fault, or to force ap_find_token() to return an incorrect value.", No,2017-5-6,2017-6-19,2017-7-11,502e2af7988e2508fe7e0f0d09248b02467a7fd3,test/unit/util.c,"ap_find_token: add unit tests
Add previously embargoed test case for CVE-2017-7668.",https://github.com/apache/httpd/commit/502e2af7988e2508fe7e0f0d09248b02467a7fd3,Jacob Champion,jchampio,https://github.com/jchampio,Pivotal Software,2017-6-21,27,88,88,88,0,Local,1,88,88,Jacob Champion
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,51703b5319bb3a7e6c2e4b4b79413c4f0af27a58,modules/http/byterange_filter.c,simple name change for clarity,https://github.com/apache/httpd/commit/51703b5319bb3a7e6c2e4b4b79413c4f0af27a58,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-25,13,3,6,3,3,Local,0.257594167679222,212,823,Justin Erenkrantz
CVE-2010-0010,189,1,DOS Exec Code Overflow,2010-2-2,2017-9-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,Integer overflow in the ap_proxy_send_fb function in proxy/proxy_util.c in mod_proxy in the Apache HTTP Server before 1.3.42 on 64-bit platforms allows remote origin servers to cause a denial of service (daemon crash) or possibly execute arbitrary code via a large chunk size that triggers a heap-based buffer overflow.,https://www.cvedetails.com/cve/CVE-2010-0010/,20091214,Yes. Fixed in Apache HTTP Server 1.3.42: http://httpd.apache.org/security/vulnerabilities_13.html,"*) SECURITY: CVE-2010-0010 (cve.mitre.org)
mod_proxy: Prevent chunk-size integer overflow on platforms where sizeof(int) < sizeof(long). Reported by Adam Zabrocki. 
[Colm MacCárthaigh]",No,2009-12-30,2010-1-27,2010-2-3,53ba8d4c4c82525e056427e557154944b5c6e665,modules/proxy/proxy_util.c,Limit sscanf format to the number of chars actually needed and buffer size provided to prevent buffer overflow.,https://github.com/apache/httpd/commit/53ba8d4c4c82525e056427e557154944b5c6e665,Rainer Jung,,,kippdata,2010-2-14,1,4,7,4,3,Local,0.008312055196393,153,18407,Mladen Turk
CVE-2001-0731,Not defined,NA,Bypass,2001-10-1,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,"Apache 1.3.20 with Multiviews enabled allows remote attackers to view directory contents and bypass the index page via a URL containing the ""M=D"" query string.",https://www.cvedetails.com/cve/CVE-2001-0731/,20020625,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,"A vulnerability was found when Multiviews are used to negotiate the directory index. In some configurations, requesting a URI with a QUERY_STRING of M=D could return a directory listing rather than the expected index page.

http://archive.apache.org/dist/httpd/CHANGES_1.3
SECURITY: CVE-2001-0731 (cve.mitre.org)
     Close autoindex /?M=D directory listing hole reported in bugtraq id 3009.  In some configurations where multiviews and indexes are enabled for a directory, requesting URI /?M=D could result in a directory listing being returned to the client rather than the negotiated index.html variant that was configured and expected.  The work around for this problem (for pre 1.3.21 releases) is to disable Indexes or Multiviews in the affected directories.  [Bill Stoddard, Bill Rowe]",No,,2001-7-9,,5417be4573a7c2803c27ab2c154c1e29f7c2d126,CHANGES,"Close the mod_mime file extension matching issue by (as Ken Coar suggests) allowing users to continue to rely on the old 1.3 behavior of matching Any extensions, the strict behavior of matching NegotiatedOnly arguments, or including Handlers and Filters with the MultiviewsMatch directive for mod_negotiation control.  Unfortunately, the component matching occurs in mod_mime, so that's where this option must reside.",https://github.com/apache/httpd/commit/5417be4573a7c2803c27ab2c154c1e29f7c2d126,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-10,2,9,10,68,4,Local,0.029559450497395,312,10555,Roy T. Fielding
CVE-2001-0731,Not defined,NA,Bypass,2001-10-1,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,"Apache 1.3.20 with Multiviews enabled allows remote attackers to view directory contents and bypass the index page via a URL containing the ""M=D"" query string.",https://www.cvedetails.com/cve/CVE-2001-0731/,20020625,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,"A vulnerability was found when Multiviews are used to negotiate the directory index. In some configurations, requesting a URI with a QUERY_STRING of M=D could return a directory listing rather than the expected index page.

http://archive.apache.org/dist/httpd/CHANGES_1.3
SECURITY: CVE-2001-0731 (cve.mitre.org)
     Close autoindex /?M=D directory listing hole reported in bugtraq id 3009.  In some configurations where multiviews and indexes are enabled for a directory, requesting URI /?M=D could result in a directory listing being returned to the client rather than the negotiated index.html variant that was configured and expected.  The work around for this problem (for pre 1.3.21 releases) is to disable Indexes or Multiviews in the affected directories.  [Bill Stoddard, Bill Rowe]",No,,2001-7-9,,5417be4573a7c2803c27ab2c154c1e29f7c2d126,modules/http/mod_mime.c,"Close the mod_mime file extension matching issue by (as Ken Coar suggests) allowing users to continue to rely on the old 1.3 behavior of matching Any extensions, the strict behavior of matching NegotiatedOnly arguments, or including Handlers and Filters with the MultiviewsMatch directive for mod_negotiation control.  Unfortunately, the component matching occurs in mod_mime, so that's where this option must reside.",https://github.com/apache/httpd/commit/5417be4573a7c2803c27ab2c154c1e29f7c2d126,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-10,2,59,62,68,4,Local,0.354408148928697,1009,2847,William A. Rowe Jr
CVE-2005-2088,,NA,XSS Bypass,2005-7-5,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"The Apache HTTP server before 1.3.34, and 2.0.x before 2.0.55, when acting as an HTTP proxy, allows remote attackers to poison the web cache, bypass web application firewall protection, and conduct XSS attacks via an HTTP request with both a ""Transfer-Encoding: chunked"" header and a Content-Length header, which causes Apache to incorrectly handle and forward the body of the request in a way that causes the receiving server to process it as a separate HTTP request, aka ""HTTP Request Smuggling.""",https://www.cvedetails.com/cve/CVE-2005-2088/,20050630,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ," *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     proxy: Correctly handle the Transfer-Encoding and Content-Length headers.  Discard the request Content-Length whenever T-E: chunked is used, always passing one of either C-L or T-E: chunked whenever the request includes a request body.  Resolves an entire class of proxy HTTP Request Splitting/Spoofing attacks.  [William Rowe]

 *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     core: If a request contains both Transfer-Encoding and Content-Length headers, remove the Content-Length, mitigating some HTTP Request Splitting/Spoofing attacks.  [Paul Querna, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-6-11,2005-10-14,552edee8fc808b300a7100c553f7b72aa85cba69,CHANGES,"If a request contains both a T-E and C-L, remove the C-L, stopping some HTTP Request Smuggling attacks exploited when using HTTPD as a forward or reverse proxy.",https://github.com/apache/httpd/commit/552edee8fc808b300a7100c553f7b72aa85cba69,Paul Querna,pquerna,https://github.com/pquerna,Rackspace,2005-6-16,23,5,5,17,0,Local,0.006730868799834,130,19314,Roy T. Fielding
CVE-2005-2088,,NA,XSS Bypass,2005-7-5,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"The Apache HTTP server before 1.3.34, and 2.0.x before 2.0.55, when acting as an HTTP proxy, allows remote attackers to poison the web cache, bypass web application firewall protection, and conduct XSS attacks via an HTTP request with both a ""Transfer-Encoding: chunked"" header and a Content-Length header, which causes Apache to incorrectly handle and forward the body of the request in a way that causes the receiving server to process it as a separate HTTP request, aka ""HTTP Request Smuggling.""",https://www.cvedetails.com/cve/CVE-2005-2088/,20050630,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ," *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     proxy: Correctly handle the Transfer-Encoding and Content-Length headers.  Discard the request Content-Length whenever T-E: chunked is used, always passing one of either C-L or T-E: chunked whenever the request includes a request body.  Resolves an entire class of proxy HTTP Request Splitting/Spoofing attacks.  [William Rowe]

 *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     core: If a request contains both Transfer-Encoding and Content-Length headers, remove the Content-Length, mitigating some HTTP Request Splitting/Spoofing attacks.  [Paul Querna, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-6-11,2005-10-14,552edee8fc808b300a7100c553f7b72aa85cba69,server/protocol.c,"If a request contains both a T-E and C-L, remove the C-L, stopping some HTTP Request Smuggling attacks exploited when using HTTPD as a forward or reverse proxy.",https://github.com/apache/httpd/commit/552edee8fc808b300a7100c553f7b72aa85cba69,Paul Querna,pquerna,https://github.com/pquerna,Rackspace,2005-6-16,23,12,12,17,0,Local,0.003783783783784,21,5550,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,553050ed8159cf9925cd57747531a1760e839e9f,include/http_log.h,add ap_log_pid() for reading an Apache pid file,https://github.com/apache/httpd/commit/553050ed8159cf9925cd57747531a1760e839e9f,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-5-23,309,8,8,57,0,Global,0.043327556325823,25,577,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,553050ed8159cf9925cd57747531a1760e839e9f,server/log.c,add ap_log_pid() for reading an Apache pid file,https://github.com/apache/httpd/commit/553050ed8159cf9925cd57747531a1760e839e9f,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-5-23,309,49,49,57,0,Global,0.043174603174603,136,3150,Roy T. Fielding
CVE-2012-0883,264,NA,Gain privileges,2012-4-18,2017-12-28,6.9,None,Local,Medium,Not required,Complete,Complete,Complete,"envvars (aka envvars-std) in the Apache HTTP Server before 2.4.2 places a zero-length directory name in the LD_LIBRARY_PATH, which allows local users to gain privileges via a Trojan horse DSO in the current working directory during execution of apachectl.",https://www.cvedetails.com/cve/CVE-2012-0883/,20120119,Yes. Fixed in Apache HTTP Server 2.4.2: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2012-0883 (cve.mitre.org)
envvars: Fix insecure handling of LD_LIBRARY_PATH that could lead to the current working directory to be searched for DSOs. [Stefan Fritsch]",No,2012-2-14,2012-3-2,2012-4-17,55c244c694d68cb578551c372fc2364caccebae1,CHANGES,"Fix insecure handling of LD_LIBRARY_PATH that could lead to the current working directory to be searched for DSOs
CVE-2012-0883",https://github.com/apache/httpd/commit/55c244c694d68cb578551c372fc2364caccebae1,Stefan Fritsch,,,GeNUA mbH,2012-3-2,1,4,4,9,1,Local,0.014048820215823,621,44203,Jim Jagielski
CVE-2012-0883,264,NA,Gain privileges,2012-4-18,2017-12-28,6.9,None,Local,Medium,Not required,Complete,Complete,Complete,"envvars (aka envvars-std) in the Apache HTTP Server before 2.4.2 places a zero-length directory name in the LD_LIBRARY_PATH, which allows local users to gain privileges via a Trojan horse DSO in the current working directory during execution of apachectl.",https://www.cvedetails.com/cve/CVE-2012-0883/,20120119,Yes. Fixed in Apache HTTP Server 2.4.2: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2012-0883 (cve.mitre.org)
envvars: Fix insecure handling of LD_LIBRARY_PATH that could lead to the current working directory to be searched for DSOs. [Stefan Fritsch]",No,2012-2-14,2012-3-2,2012-4-17,55c244c694d68cb578551c372fc2364caccebae1,support/envvars-std.in,"Fix insecure handling of LD_LIBRARY_PATH that could lead to the current working directory to be searched for DSOs
CVE-2012-0883",https://github.com/apache/httpd/commit/55c244c694d68cb578551c372fc2364caccebae1,Stefan Fritsch,,,GeNUA mbH,2012-3-2,1,5,6,9,1,Local,0.1,6,60,Jeff Trawick
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,5628a41223252b3878074ab06f4f17b498a8fc51,server/scoreboard.c,"Create the scoreboard (in the parent) in a global pool context, so it survives graceful restarts. This fixes a SEGV during graceful restarts. 
Children who attach to this scoreboard keep the same pool as before (pchild) since they should detach/unmap when the child process exits.",https://github.com/apache/httpd/commit/5628a41223252b3878074ab06f4f17b498a8fc51,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-2-1,309,21,25,21,4,Local,0.062431142122659,170,2723,Ryan Bloom
CVE-2002-1593,Not defined,NA,DoS,2002-9-25,2017-7-10,5,None,Remote,Low,Not required,None,None,Partial,"mod_dav in Apache before 2.0.42 does not properly handle versioning hooks, which may allow remote attackers to kill a child process via a null dereference and cause a denial of service (CPU consumption) in a preforked multi-processing module.",https://www.cvedetails.com/cve/CVE-2002-1593/,20050313,Yes. Fixed in Apache HTTP Server 2.0.42: http://httpd.apache.org/security/vulnerabilities_20.html ,"A flaw was found in handling of versioning hooks in mod_dav. An attacker could send a carefully crafted request in such a way to cause the child process handling the connection to crash. This issue will only result in a denial of service where a threaded process model is in use. 

http://archive.apache.org/dist/httpd/CHANGES_2.0
SECURITY: CVE-2002-1593 (cve.mitre.org) [CERT VU#406121]: mod_dav: Check for versioning hooks before using them. [Greg Stein]",No,,2002-9-19,2002-9-24,574e12b6c4dd4a1d7170f62a4556b342260d3b9f,modules/dav/main/mod_dav.c,"Switch hook from type_checker to fixups. (This hook may be able to removed entirely in favor of being in dav_handler, but that is left as an exercise to the reader.)",https://github.com/apache/httpd/commit/574e12b6c4dd4a1d7170f62a4556b342260d3b9f,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-9-5,15,2,6,2,4,Local,0.000871459694989,10,11475,Greg Stein
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,5771195d5a4dbc2e25cfd6b595ff3bdf0d349a40,server/protocol.c,* server/protocol.c (read_request_line): Fix compiler warnings with GCC.,https://github.com/apache/httpd/commit/5771195d5a4dbc2e25cfd6b595ff3bdf0d349a40,Joe Orton,notroj,,Red Hat,2016-8-18,60,3,6,3,3,Local,0.0417071748007,429,10286,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,57d681b087ce68e03a59468991207a4bd69a108a,modules/http/byterange_filter.c,* Damm it. Missed another superflous whitespace.,https://github.com/apache/httpd/commit/57d681b087ce68e03a59468991207a4bd69a108a,Ruediger Pluem,,,,2011-8-28,13,2,4,2,2,Local,0.09891435464415,164,1658,Jim Jagielski
CVE-2012-4557,399,NA,DoS,2012-11-30,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,"The mod_proxy_ajp module in the Apache HTTP Server 2.2.12 through 2.2.21 places a worker node into an error state upon detection of a long request-processing time, which allows remote attackers to cause a denial of service (worker consumption) via an expensive request.",https://www.cvedetails.com/cve/CVE-2012-4557/,20120821,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,*) mod_proxy_ajp: Try to prevent a single long request from marking a worker in error. [Jean-Frederic Clere],No,2012-10-11,2012-1-4,2012-1-31,583538426fd3a5f272f5b5a4941b2db5569ca573,modules/proxy/ajp_link.c,replace recent AJP direct comparisons to APR_TIMEUP with APR_STATUS_IS_TIMEUP.,https://github.com/apache/httpd/commit/583538426fd3a5f272f5b5a4941b2db5569ca573,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2001-5-7,NA,1,2,2,2,Global,0.009478672985782,2,211,Jean-Frederic Clere
CVE-2012-4557,399,NA,DoS,2012-11-30,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,"The mod_proxy_ajp module in the Apache HTTP Server 2.2.12 through 2.2.21 places a worker node into an error state upon detection of a long request-processing time, which allows remote attackers to cause a denial of service (worker consumption) via an expensive request.",https://www.cvedetails.com/cve/CVE-2012-4557/,20120821,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,*) mod_proxy_ajp: Try to prevent a single long request from marking a worker in error. [Jean-Frederic Clere],No,2012-10-11,2012-1-4,2012-1-31,583538426fd3a5f272f5b5a4941b2db5569ca573,modules/proxy/mod_proxy_ajp.c,replace recent AJP direct comparisons to APR_TIMEUP with APR_STATUS_IS_TIMEUP.,https://github.com/apache/httpd/commit/583538426fd3a5f272f5b5a4941b2db5569ca573,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2001-5-7,NA,1,2,2,2,Global,0.000581902822229,2,3437,William A. Rowe Jr
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,588b8f8e099d3aa84b06417d9a2e2d8b769cbda1,modules/http/byterange_filter.c,* Use apr_uint64_t throughout instead of mixing apr_off_t and apr_size_t,https://github.com/apache/httpd/commit/588b8f8e099d3aa84b06417d9a2e2d8b769cbda1,Ruediger Pluem,,,,2011-8-25,13,21,32,21,11,Local,0.041078305519897,32,779,Justin Erenkrantz
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,59095d7599722045fb9c75258864702ef8414c76,modules/http/byterange_filter.c,* Adjust comment and don't get fooled by a negative end,https://github.com/apache/httpd/commit/59095d7599722045fb9c75258864702ef8414c76,Ruediger Pluem,,,,2011-8-25,13,4,9,4,5,Local,0.129347826086957,119,920,Justin Erenkrantz
CVE-2016-2161,20,NA,,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,None,Partial,"In Apache HTTP Server versions 2.4.0 to 2.4.23, malicious input to mod_auth_digest can cause the server to crash, and each instance continues to crash even for subsequently valid requests",https://www.cvedetails.com/cve/CVE-2016-2161/,20160129,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-2161 (cve.mitre.org)
mod_auth_digest: Prevent segfaults during client entry allocation when the shared memory space is exhausted.
[Maksim Malyutin <m.malyutin dsec.ru>, Eric Covener, Jacob Champion]", No,2016-7-11,2016-12-20,2016-12-20,5da25a4e43b92ab29a87a1e3dcf4fdb062d7dbed,CHANGES,"mod_auth_digest: fix segfaults during shared memory exhaustion
The apr_rmm_addr_get/apr_rmm_malloc() combination did not correctly check for a malloc failure, leading to crashes when we ran out of the limited space provided by AuthDigestShmemSize. This patch replaces all these calls with a helper function that performs this check. Additionally, fix a NULL-check bug during entry garbage collection.",https://github.com/apache/httpd/commit/5da25a4e43b92ab29a87a1e3dcf4fdb062d7dbed,Jacob Champion,jchampio,https://github.com/jchampio,Pivotal Software,2016-12-6,77,5,5,48,9,Local,0.000162796849881,8,49141,Jim Jagielski
CVE-2016-2161,20,NA,,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,None,Partial,"In Apache HTTP Server versions 2.4.0 to 2.4.23, malicious input to mod_auth_digest can cause the server to crash, and each instance continues to crash even for subsequently valid requests",https://www.cvedetails.com/cve/CVE-2016-2161/,20160129,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-2161 (cve.mitre.org)
mod_auth_digest: Prevent segfaults during client entry allocation when the shared memory space is exhausted.
[Maksim Malyutin <m.malyutin dsec.ru>, Eric Covener, Jacob Champion]", No,2016-7-11,2016-12-20,2016-12-20,5da25a4e43b92ab29a87a1e3dcf4fdb062d7dbed,modules/aaa/mod_auth_digest.c,"mod_auth_digest: fix segfaults during shared memory exhaustion
The apr_rmm_addr_get/apr_rmm_malloc() combination did not correctly check for a malloc failure, leading to crashes when we ran out of the limited space provided by AuthDigestShmemSize. This patch replaces all these calls with a helper function that performs this check. Additionally, fix a NULL-check bug during entry garbage collection.",https://github.com/apache/httpd/commit/5da25a4e43b92ab29a87a1e3dcf4fdb062d7dbed,Jacob Champion,jchampio,https://github.com/jchampio,Pivotal Software,2016-12-6,77,43,52,48,9,Local,0.006668376506797,52,7798,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,5e05bdd3123f58ee93780168f9c35414bf4be254,CHANGES,Win32: Enable reliable piped log support.,https://github.com/apache/httpd/commit/5e05bdd3123f58ee93780168f9c35414bf4be254,Bill Stoddard,,,IBM,2001-5-17,16,5,5,7,5,Local,0.006338320864505,61,9624,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,5e3e9ec2fe40097a258e6a8199486011aa28e81f,modules/http/byterange_filter.c,* Ranges like --2 or -0 are invalid,https://github.com/apache/httpd/commit/5e3e9ec2fe40097a258e6a8199486011aa28e81f,Ruediger Pluem,,,,2011-9-1,13,3,3,3,0,Local,0.113749309773606,206,1811,Jim Jagielski
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,5ea7fb79d8f14847554ebacb6aae8fc0e02b0ba8,modules/generators/mod_cgi.c,process_cgi is more descriptive than replace_cmd. It also affects query_string args.,https://github.com/apache/httpd/commit/5ea7fb79d8f14847554ebacb6aae8fc0e02b0ba8,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-4-13,9,10,14,13,7,Local,0.119061936259772,396,3326,Ryan Bloom
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,5ea7fb79d8f14847554ebacb6aae8fc0e02b0ba8,modules/generators/mod_cgi.h,process_cgi is more descriptive than replace_cmd. It also affects query_string args.,https://github.com/apache/httpd/commit/5ea7fb79d8f14847554ebacb6aae8fc0e02b0ba8,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-4-13,9,3,6,13,7,Local,0.929292929292929,92,99,William A. Rowe Jr
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,5eee8dafc108d500e758fcc1d3461a702eb13eff,modules/generators/mod_cgid.c,Failure to fork cgid is a shooting offense.,https://github.com/apache/httpd/commit/5eee8dafc108d500e758fcc1d3461a702eb13eff,Bill Stoddard,,,IBM,2002-4-22,9,2,4,2,2,Local,0.005059523809524,17,3360,Ryan Bloom
CVE-2004-0811,,NA,,2004-12-31,2017-7-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Unknown vulnerability in Apache 2.0.51 prevents ""the merging of the Satisfy directive,"" which could allow attackers to obtain access to restricted resources contrary to the specified authentication configuration.",https://www.cvedetails.com/cve/CVE-2004-0811/,20040825,Yes. Fixed in Apache HTTP Server 2.0.52: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0811 (cve.mitre.org)
Fix merging of the Satisfy directive, which was applied to the surrounding context and could allow access despite configured
 authentication.  PR 31315.  [Rici Lake <rici ricilake.net>]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2004-9-18,2004-9-28,5f320e14d77cbfbdf371b13daf347660f26f1246,CHANGES,SECURITY: CAN-2004-0811 officially part of 2.0.52,https://github.com/apache/httpd/commit/5f320e14d77cbfbdf371b13daf347660f26f1246,Geoffrey Young,,,,2004-9-21,2,5,10,5,5,Local,0.003704712612367,68,18355,Roy T. Fielding
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,5f9ea34053ac469f0be88c5c92c8502525250f07,modules/http/http_request.c,"ap_die: get rid of bad side effects from the recursive error handling code that mess with the status and which request_rec the rest of the function uses.
Submitted by:  Justin Erenkrantz, Greg Ames",https://github.com/apache/httpd/commit/5f9ea34053ac469f0be88c5c92c8502525250f07,Greg Ames,,,,2002-6-21,29,4,8,4,4,Local,0.002671415850401,12,4492,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,5fc6f830700fee6b5831e0e20688bb40c1f6ef24,modules/http/http_core.c,Move the addition of default AP_HTTP_HTTP_HEADER filters to the insert_filter phase so that other filters are not bypassed by default.,https://github.com/apache/httpd/commit/5fc6f830700fee6b5831e0e20688bb40c1f6ef24,Graham Leggett,minfrin,https://github.com/minfrin,,2001-5-22,16,8,8,11,11,Global,0.000572164211129,8,13982,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,5fc6f830700fee6b5831e0e20688bb40c1f6ef24,modules/http/http_request.c,Move the addition of default AP_HTTP_HTTP_HEADER filters to the insert_filter phase so that other filters are not bypassed by default.,https://github.com/apache/httpd/commit/5fc6f830700fee6b5831e0e20688bb40c1f6ef24,Graham Leggett,minfrin,https://github.com/minfrin,,2001-5-22,16,0,4,11,11,Global,0.001038691249026,4,3851,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,5fc6f830700fee6b5831e0e20688bb40c1f6ef24,modules/metadata/mod_headers.c,Move the addition of default AP_HTTP_HTTP_HEADER filters to the insert_filter phase so that other filters are not bypassed by default.,https://github.com/apache/httpd/commit/5fc6f830700fee6b5831e0e20688bb40c1f6ef24,Graham Leggett,minfrin,https://github.com/minfrin,,2001-5-22,16,3,6,11,11,Global,0.008344923504868,6,719,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,5fc6f830700fee6b5831e0e20688bb40c1f6ef24,server/protocol.c,Move the addition of default AP_HTTP_HTTP_HEADER filters to the insert_filter phase so that other filters are not bypassed by default.,https://github.com/apache/httpd/commit/5fc6f830700fee6b5831e0e20688bb40c1f6ef24,Graham Leggett,minfrin,https://github.com/minfrin,,2001-5-22,16,0,4,11,11,Global,0.001610305958132,4,2484,Ryan Bloom
CVE-2002-1593,Not defined,NA,DoS,2002-9-25,2017-7-10,5,None,Remote,Low,Not required,None,None,Partial,"mod_dav in Apache before 2.0.42 does not properly handle versioning hooks, which may allow remote attackers to kill a child process via a null dereference and cause a denial of service (CPU consumption) in a preforked multi-processing module.",https://www.cvedetails.com/cve/CVE-2002-1593/,20050313,Yes. Fixed in Apache HTTP Server 2.0.42: http://httpd.apache.org/security/vulnerabilities_20.html ,"A flaw was found in handling of versioning hooks in mod_dav. An attacker could send a carefully crafted request in such a way to cause the child process handling the connection to crash. This issue will only result in a denial of service where a threaded process model is in use. 

http://archive.apache.org/dist/httpd/CHANGES_2.0
SECURITY: CVE-2002-1593 (cve.mitre.org) [CERT VU#406121]: mod_dav: Check for versioning hooks before using them. [Greg Stein]",No,,2002-9-19,2002-9-24,618f31fcd3ab951204eeb98661c37ed1e765e316,modules/dav/main/mod_dav.c,"If a body arrives with an OPTIONS request, and it contains an <options> tag, as defined by RFC 3253, and we don’t recognize the option as a builtin one, then we pass that off to the versioning hooks of the DAV provider for it to process. However, we neglected to check whether the provider actually *had* versioning hooks first. The fix: simply check for versioning hooks before using them.",https://github.com/apache/httpd/commit/618f31fcd3ab951204eeb98661c37ed1e765e316,Greg Stein,gstein,https://github.com/gstein,Apache,2002-9-19,15,1,2,1,1,Local,0.702275654787462,8178,11645,Greg Stein
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,619f5747ec818aee6666d1837fd8d36f80c0d826,include/http_log.h,Fix the PATH exposure security problem I thought I fixed in 2.0.36.,https://github.com/apache/httpd/commit/619f5747ec818aee6666d1837fd8d36f80c0d826,Bill Stoddard,,,IBM,2002-7-30,13,1,2,1,1,Local,0.033444816053512,20,598,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,62484cb8644c35f546f16dff8fec57220f37bb03,modules/http/byterange_filter.c,0 is OK,https://github.com/apache/httpd/commit/62484cb8644c35f546f16dff8fec57220f37bb03,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-25,13,1,2,1,1,Local,0.315175097276265,324,1028,Justin Erenkrantz
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,630255202f9c8d56506e9d6c7739d06baf2ae276,modules/experimental/NWGNUmakefile,Including the make file for mod_ext_filter to the main build for NetWare,https://github.com/apache/httpd/commit/630255202f9c8d56506e9d6c7739d06baf2ae276,Bradley Nicholes,,,Novell,2002-7-22,13,1,1,1,0,Global,1,250,250,Bradley Nicholes
CVE-2015-0228,20,NA,DoS,2015-3-7,2018-1-4,5,None,Remote,Low,Not required,None,None,Partial,The lua_websocket_read function in lua_request.c in the mod_lua module in the Apache HTTP Server through 2.4.12 allows remote attackers to cause a denial of service (child-process crash) by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function.,https://www.cvedetails.com/cve/CVE-2015-0228/,20141118,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-0228 (cve.mitre.org)
mod_lua: A maliciously crafted websockets PING after a script calls r:wsupgrade() can cause a child process crash. 
[Edward Lu <Chaosed0 gmail.com>]",No,2015-1-28,2015-2-4,2015-7-15,643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef,CHANGES,"*) SECURITY: CVE-2015-0228 (cve.mitre.org)
mod_lua: A maliciously crafted websockets PING after a script calls r:wsupgrade() can cause a child process crash.
[Edward Lu <Chaosed0 gmail.com>]
Discovered by Guido Vranken <guidovranken gmail.com>
Submitted by: Edward Lu
Committed by: covener",https://github.com/apache/httpd/commit/643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2015-2-4,1,5,5,10,1,Local,0.02054779921134,964,46915,Jim Jagielski
CVE-2015-0228,20,NA,DoS,2015-3-7,2018-1-4,5,None,Remote,Low,Not required,None,None,Partial,The lua_websocket_read function in lua_request.c in the mod_lua module in the Apache HTTP Server through 2.4.12 allows remote attackers to cause a denial of service (child-process crash) by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function.,https://www.cvedetails.com/cve/CVE-2015-0228/,20141118,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-0228 (cve.mitre.org)
mod_lua: A maliciously crafted websockets PING after a script calls r:wsupgrade() can cause a child process crash. 
[Edward Lu <Chaosed0 gmail.com>]",No,2015-1-28,2015-2-4,2015-7-15,643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef,modules/lua/lua_request.c,"*) SECURITY: CVE-2015-0228 (cve.mitre.org)
mod_lua: A maliciously crafted websockets PING after a script calls r:wsupgrade() can cause a child process crash.
[Edward Lu <Chaosed0 gmail.com>]
Discovered by Guido Vranken <guidovranken gmail.com>
Submitted by: Edward Lu
Committed by: covener",https://github.com/apache/httpd/commit/643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2015-2-4,1,5,6,10,1,Local,0.029204233633869,149,5102,Daniel Gruno
CVE-2015-3183,20,NA,,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,Partial,None,"The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules/http/http_filters.c.",https://www.cvedetails.com/cve/CVE-2015-3183/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3183 (cve.mitre.org)
core: Fix chunk header parsing defect. Remove apr_brigade_flatten(), buffering and duplicated code from the HTTP_IN filter, parse chunks in a single pass with zero copy.
Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.  [Graham Leggett, Yann Ylavic]",No,2015-4-4,2015-6-9,2015-7-15,647a6d575d9f8493c3572441a177e4c0d7518ba0,CHANGES,Follow up to r1685349: remove a tab.,https://github.com/apache/httpd/commit/647a6d575d9f8493c3572441a177e4c0d7518ba0,Yann Ylavic,ylavic,https://github.com/ylavic,,2015-6-14,6,1,2,1,1,Local,0.008423941729125,399,47365,Jim Jagielski
CVE-2017-7659,476,NA,,2017-7-26,2018-6-2,5,None,Remote,Low,Not required,None,None,Partial,"A maliciously constructed HTTP/2 request could cause mod_http2 2.4.24, 2.4.25 to dereference a NULL pointer and crash the server process.",https://www.cvedetails.com/cve/CVE-2017-7659/,20170411,Yes. Fixed in Apache HTTP Server 2.4.26: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-7659 (cve.mitre.org)
A maliciously constructed HTTP/2 request could cause mod_http2 to dereference a NULL pointer and crash the server process.", No,2016-11-18,2017-7-19,2017-7-19,672187c168b94b562d8065e08e2cad5b00cdd0e3,CHANGES,"On the trunk:
mod_http2: fix for crash when running out of memory. Initial patch by Robert Swiecki <robert@swiecki.net>",https://github.com/apache/httpd/commit/672187c168b94b562d8065e08e2cad5b00cdd0e3,Stefan Eissing,,,greenbytes GmbH,2017-2-1,15,3,3,10,5,Local,0.019508143586419,963,49364,Jim Jagielski
CVE-2017-7659,476,NA,,2017-7-26,2018-6-2,5,None,Remote,Low,Not required,None,None,Partial,"A maliciously constructed HTTP/2 request could cause mod_http2 2.4.24, 2.4.25 to dereference a NULL pointer and crash the server process.",https://www.cvedetails.com/cve/CVE-2017-7659/,20170411,Yes. Fixed in Apache HTTP Server 2.4.26: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-7659 (cve.mitre.org)
A maliciously constructed HTTP/2 request could cause mod_http2 to dereference a NULL pointer and crash the server process.", No,2016-11-18,2017-7-19,2017-7-19,672187c168b94b562d8065e08e2cad5b00cdd0e3,modules/http2/h2_stream.c,"On the trunk:
mod_http2: fix for crash when running out of memory. Initial patch by Robert Swiecki <robert@swiecki.net>",https://github.com/apache/httpd/commit/672187c168b94b562d8065e08e2cad5b00cdd0e3,Stefan Eissing,,,greenbytes GmbH,2017-2-1,15,7,12,10,5,Local,0.889013452914798,3172,3568,Stefan Eissing
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,include/http_core.h,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,9,9,169,25,Global,0.022784810126582,9,395,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,modules/filters/mod_include.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,27,29,169,25,Global,0.009443178117877,29,3071,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,modules/generators/mod_autoindex.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,1,2,169,25,Global,0.001043841336117,2,1916,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,modules/http/http_core.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,34,34,169,25,Global,0.008097165991903,34,4199,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,modules/http/http_protocol.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,43,51,169,25,Global,0.01368025751073,51,3728,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,modules/loggers/mod_log_config.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,1,2,169,25,Global,0.001459854014599,2,1370,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,modules/mappers/mod_actions.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,2,3,169,25,Global,0.01067615658363,3,281,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,modules/mappers/mod_speling.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,5,10,169,25,Global,0.013717421124829,10,729,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,modules/metadata/mod_expires.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,2,3,169,25,Global,0.004846526655897,3,619,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,modules/proxy/proxy_util.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,9,14,169,25,Global,0.009728978457262,14,1439,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,server/log.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,2,3,169,25,Global,0.001937984496124,3,1548,Roy T. Fielding
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,67dd13f3adc8ce84da68b49a296830b3406ce602,server/util.c,"Backport the CSS security fixes to Apache 2.0a. Or is that forward
port? My sense of direction is all confused.

PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/67dd13f3adc8ce84da68b49a296830b3406ce602,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-3-13,43,34,34,169,25,Global,0.012005649717514,34,2832,Roy T. Fielding
CVE-2003-0132,,NA,DoS,2003-4-11,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"A memory leak in Apache 2.0 through 2.0.44 allows remote attackers to cause a denial of service (memory consumption) via large chunks of linefeed characters, which causes Apache to allocate 80 bytes for each linefeed.",https://www.cvedetails.com/cve/CVE-2003-0132/,20030313,Yes. Fixed in Apache HTTP Server 2.0.45: http://httpd.apache.org/security/vulnerabilities_20.html,"Simplify and shorten the code path for scanning request headers.Simplify and shorten the code path for scanning request headers.
This is the scanning logic that was subject to an unlimited search for a non-blank line between requests.  These lines each consumed 80 bytes - until memory was exhausted in the DoS attack identified by David Endler
[http://archive.apache.org/dist/httpd/patches/apply_to_2.0.44/denial_of_service_fix.patch]",No,,2004-4-2,2004-4-2,680f3c73c291817ab07686f0e2ba9d97cf1ea7b4,server/protocol.c,"* server/protocol.c (ap_rgetline_core): Fix folding if header is continued over more than two lines.
PR: 19405 (affects proxy only)",https://github.com/apache/httpd/commit/680f3c73c291817ab07686f0e2ba9d97cf1ea7b4,Joe Orton,notroj,,Red Hat,2004-1-26,351,1,1,1,0,Local,0.056375838926175,294,5215,Ryan Bloom
CVE-2005-2088,,NA,XSS Bypass,2005-7-5,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"The Apache HTTP server before 1.3.34, and 2.0.x before 2.0.55, when acting as an HTTP proxy, allows remote attackers to poison the web cache, bypass web application firewall protection, and conduct XSS attacks via an HTTP request with both a ""Transfer-Encoding: chunked"" header and a Content-Length header, which causes Apache to incorrectly handle and forward the body of the request in a way that causes the receiving server to process it as a separate HTTP request, aka ""HTTP Request Smuggling.""",https://www.cvedetails.com/cve/CVE-2005-2088/,20050630,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ," *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     proxy: Correctly handle the Transfer-Encoding and Content-Length headers.  Discard the request Content-Length whenever T-E: chunked is used, always passing one of either C-L or T-E: chunked whenever the request includes a request body.  Resolves an entire class of proxy HTTP Request Splitting/Spoofing attacks.  [William Rowe]

 *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     core: If a request contains both Transfer-Encoding and Content-Length headers, remove the Content-Length, mitigating some HTTP Request Splitting/Spoofing attacks.  [Paul Querna, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-6-11,2005-10-14,6860a698c48b62841a1840237feb2abc6a6c7f4d,server/protocol.c,"* server/protocol.c (ap_read_request): Remove the Content-Length header if any Transfer-Encoding header is present, regardless of value.
Reviewed by: Paul Querna, Jeff Trawick",https://github.com/apache/httpd/commit/6860a698c48b62841a1840237feb2abc6a6c7f4d,Joe Orton,notroj,,Red Hat,2005-6-23,23,7,17,7,10,Local,0.070389657029987,392,5569,Ryan Bloom
CVE-2007-6422,399,NA,DoS,2008-1-8,2017-9-28,4,None,Remote,Low,Single system,None,None,Partial,"The balancer_handler function in mod_proxy_balancer in the Apache HTTP Server 2.2.0 through 2.2.6, when a threaded Multi-Processing Module is used, allows remote authenticated users to cause a denial of service (child process crash) via an invalid bb variable.",https://www.cvedetails.com/cve/CVE-2007-6422/,20071217,Yes. Fixed in Apache HTTP Server 2.2.8. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-6422 (cve.mitre.org)
Prevent crash in balancer manager if invalid balancer name is passed as parameter. Reported by SecurityReason. [Ruediger Pluem]",No,2007-12-12,2008-1-2,2008-1-19,69905a57a0637369cd7c11a21b776ce53ccd5ac3,CHANGES,* Prevent crash in balancer manager if invalid balancer name is passed as  parameter.,https://github.com/apache/httpd/commit/69905a57a0637369cd7c11a21b776ce53ccd5ac3,Ruediger Pluem,,,,2007-12-28,2,3,3,4,1,Local,0.023603133159269,904,38300,Jim Jagielski
CVE-2007-6422,399,NA,DoS,2008-1-8,2017-9-28,4,None,Remote,Low,Single system,None,None,Partial,"The balancer_handler function in mod_proxy_balancer in the Apache HTTP Server 2.2.0 through 2.2.6, when a threaded Multi-Processing Module is used, allows remote authenticated users to cause a denial of service (child process crash) via an invalid bb variable.",https://www.cvedetails.com/cve/CVE-2007-6422/,20071217,Yes. Fixed in Apache HTTP Server 2.2.8. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-6422 (cve.mitre.org)
Prevent crash in balancer manager if invalid balancer name is passed as parameter. Reported by SecurityReason. [Ruediger Pluem]",No,2007-12-12,2008-1-2,2008-1-19,69905a57a0637369cd7c11a21b776ce53ccd5ac3,modules/proxy/mod_proxy_balancer.c,* Prevent crash in balancer manager if invalid balancer name is passed as  parameter.,https://github.com/apache/httpd/commit/69905a57a0637369cd7c11a21b776ce53ccd5ac3,Ruediger Pluem,,,,2007-12-28,2,1,2,4,1,Local,0.045057345712725,165,3662,Jim Jagielski
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,69ab4d83d31836fa5b4b422bdba064a0dd519e78,server/protocol.c,"Correct request header handling of whitespace with the new possible config of HttpProtocolOptions Unsafe StrictWhitespace I have elected not to preserve any significance to excess whitespace in the now-deprecated obs-fold code path, that's certainly open for discussion. This can be reviewed by tweaking t/conf/extra.conf to switch Strict to Unsafe.",https://github.com/apache/httpd/commit/69ab4d83d31836fa5b4b422bdba064a0dd519e78,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-18,60,35,39,35,4,Local,0.177917675544794,1837,10325,Ryan Bloom
CVE-2014-0117,20,NA,DoS,2014-7-20,2016-7-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The mod_proxy module in the Apache HTTP Server 2.4.x before 2.4.10, when a reverse proxy is enabled, allows remote attackers to cause a denial of service (child-process crash) via a crafted HTTP Connection header.",https://www.cvedetails.com/cve/CVE-2014-0117/,20131203,Yes. Fixed in Apache HTTP Server 2.4.10: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-0117 (cve.mitre.org)
mod_proxy: Fix crash in Connection header handling which allowed a denial of service attack against a reverse proxy with a threaded MPM.  [Ben Reser]",No,2014-4-7,2014-7-15,2014-7-15,69ce95ded2b530427240fe185ae513d0b6616576,include/ap_mmn.h,"SECURITY (CVE-2014-0117): Fix a crash in mod_proxy. In a reverse proxy configuration, a remote attacker could send a carefully crafted request which could crash a server process, resulting in denial of service.
Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this issue.
* server/util.c (ap_parse_token_list_strict): New function.
* modules/proxy/proxy_util.c (find_conn_headers): Use it here.
* modules/proxy/mod_proxy_http.c (ap_proxy_http_process_response): Send a 400 for a malformed Connection header.
Submitted by: Edward Lu, breser, covener",https://github.com/apache/httpd/commit/69ce95ded2b530427240fe185ae513d0b6616576,Joe Orton,notroj,,Red Hat,2014-7-15,1,2,3,145,40,Global,0.015406162464986,33,2142,Roy T. Fielding
CVE-2014-0117,20,NA,DoS,2014-7-20,2016-7-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The mod_proxy module in the Apache HTTP Server 2.4.x before 2.4.10, when a reverse proxy is enabled, allows remote attackers to cause a denial of service (child-process crash) via a crafted HTTP Connection header.",https://www.cvedetails.com/cve/CVE-2014-0117/,20131203,Yes. Fixed in Apache HTTP Server 2.4.10: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-0117 (cve.mitre.org)
mod_proxy: Fix crash in Connection header handling which allowed a denial of service attack against a reverse proxy with a threaded MPM.  [Ben Reser]",No,2014-4-7,2014-7-15,2014-7-15,69ce95ded2b530427240fe185ae513d0b6616576,include/httpd.h,"SECURITY (CVE-2014-0117): Fix a crash in mod_proxy. In a reverse proxy configuration, a remote attacker could send a carefully crafted request which could crash a server process, resulting in denial of service.
Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this issue.
* server/util.c (ap_parse_token_list_strict): New function.
* modules/proxy/proxy_util.c (find_conn_headers): Use it here.
* modules/proxy/mod_proxy_http.c (ap_proxy_http_process_response): Send a 400 for a malformed Connection header.
Submitted by: Edward Lu, breser, covener",https://github.com/apache/httpd/commit/69ce95ded2b530427240fe185ae513d0b6616576,Joe Orton,notroj,,Red Hat,2014-7-15,1,17,17,145,40,Global,0.011494252873563,80,6960,Ryan Bloom
CVE-2014-0117,20,NA,DoS,2014-7-20,2016-7-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The mod_proxy module in the Apache HTTP Server 2.4.x before 2.4.10, when a reverse proxy is enabled, allows remote attackers to cause a denial of service (child-process crash) via a crafted HTTP Connection header.",https://www.cvedetails.com/cve/CVE-2014-0117/,20131203,Yes. Fixed in Apache HTTP Server 2.4.10: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-0117 (cve.mitre.org)
mod_proxy: Fix crash in Connection header handling which allowed a denial of service attack against a reverse proxy with a threaded MPM.  [Ben Reser]",No,2014-4-7,2014-7-15,2014-7-15,69ce95ded2b530427240fe185ae513d0b6616576,modules/proxy/mod_proxy_http.c,"SECURITY (CVE-2014-0117): Fix a crash in mod_proxy. In a reverse proxy configuration, a remote attacker could send a carefully crafted request which could crash a server process, resulting in denial of service.
Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this issue.
* server/util.c (ap_parse_token_list_strict): New function.
* modules/proxy/proxy_util.c (find_conn_headers): Use it here.
* modules/proxy/mod_proxy_http.c (ap_proxy_http_process_response): Send a 400 for a malformed Connection header.
Submitted by: Edward Lu, breser, covener",https://github.com/apache/httpd/commit/69ce95ded2b530427240fe185ae513d0b6616576,Joe Orton,notroj,,Red Hat,2014-7-15,1,7,8,145,40,Global,0.016260162601626,196,12054,Graham Leggett
CVE-2014-0117,20,NA,DoS,2014-7-20,2016-7-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The mod_proxy module in the Apache HTTP Server 2.4.x before 2.4.10, when a reverse proxy is enabled, allows remote attackers to cause a denial of service (child-process crash) via a crafted HTTP Connection header.",https://www.cvedetails.com/cve/CVE-2014-0117/,20131203,Yes. Fixed in Apache HTTP Server 2.4.10: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-0117 (cve.mitre.org)
mod_proxy: Fix crash in Connection header handling which allowed a denial of service attack against a reverse proxy with a threaded MPM.  [Ben Reser]",No,2014-4-7,2014-7-15,2014-7-15,69ce95ded2b530427240fe185ae513d0b6616576,modules/proxy/proxy_util.c,"SECURITY (CVE-2014-0117): Fix a crash in mod_proxy. In a reverse proxy configuration, a remote attacker could send a carefully crafted request which could crash a server process, resulting in denial of service.
Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this issue.
* server/util.c (ap_parse_token_list_strict): New function.
* modules/proxy/proxy_util.c (find_conn_headers): Use it here.
* modules/proxy/mod_proxy_http.c (ap_proxy_http_process_response): Send a 400 for a malformed Connection header.
Submitted by: Edward Lu, breser, covener",https://github.com/apache/httpd/commit/69ce95ded2b530427240fe185ae513d0b6616576,Joe Orton,notroj,,Red Hat,2014-7-15,1,30,68,145,40,Global,0.006093234839948,146,23961,Mladen Turk
CVE-2014-0117,20,NA,DoS,2014-7-20,2016-7-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The mod_proxy module in the Apache HTTP Server 2.4.x before 2.4.10, when a reverse proxy is enabled, allows remote attackers to cause a denial of service (child-process crash) via a crafted HTTP Connection header.",https://www.cvedetails.com/cve/CVE-2014-0117/,20131203,Yes. Fixed in Apache HTTP Server 2.4.10: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-0117 (cve.mitre.org)
mod_proxy: Fix crash in Connection header handling which allowed a denial of service attack against a reverse proxy with a threaded MPM.  [Ben Reser]",No,2014-4-7,2014-7-15,2014-7-15,69ce95ded2b530427240fe185ae513d0b6616576,server/util.c,"SECURITY (CVE-2014-0117): Fix a crash in mod_proxy. In a reverse proxy configuration, a remote attacker could send a carefully crafted request which could crash a server process, resulting in denial of service.
Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this issue.
* server/util.c (ap_parse_token_list_strict): New function.
* modules/proxy/proxy_util.c (find_conn_headers): Use it here.
* modules/proxy/mod_proxy_http.c (ap_proxy_http_process_response): Send a 400 for a malformed Connection header.
Submitted by: Edward Lu, breser, covener",https://github.com/apache/httpd/commit/69ce95ded2b530427240fe185ae513d0b6616576,Joe Orton,notroj,,Red Hat,2014-7-15,1,89,89,145,40,Global,0.031780688985929,262,8244,Roy T. Fielding
CVE-2005-2970,,NA,DoS,2005-10-25,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Memory leak in the worker MPM (worker.c) for Apache 2, in certain circumstances, allows remote attackers to cause a denial of service (memory consumption) via aborted connections, which prevents the memory for the transaction pool from being reused for other connections.",https://www.cvedetails.com/cve/CVE-2005-2970/,20050919,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-2970 (cve.mitre.org)
worker MPM: Fix a memory leak which can occur after an aborted connection in some limited circumstances.  [Greg Ames]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,,2005-10-14,6a28069cef904802aeb334adce5e210a7379194c,CHANGES,"SECURITY: CAN-2005-2970 (cve.mitre.org)
worker MPM: Fix a memory leak which can occur after an aborted connection in some limited circumstances.",https://github.com/apache/httpd/commit/6a28069cef904802aeb334adce5e210a7379194c,Jeff Trawick,trawick,https://github.com/trawick,Apache,2005-9-30,11,4,4,9,0,Local,0.079072768787849,1593,20146,Roy T. Fielding
CVE-2005-2970,,NA,DoS,2005-10-25,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Memory leak in the worker MPM (worker.c) for Apache 2, in certain circumstances, allows remote attackers to cause a denial of service (memory consumption) via aborted connections, which prevents the memory for the transaction pool from being reused for other connections.",https://www.cvedetails.com/cve/CVE-2005-2970/,20050919,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-2970 (cve.mitre.org)
worker MPM: Fix a memory leak which can occur after an aborted connection in some limited circumstances.  [Greg Ames]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,,2005-10-14,6a28069cef904802aeb334adce5e210a7379194c,server/mpm/worker/worker.c,"SECURITY: CAN-2005-2970 (cve.mitre.org)
worker MPM: Fix a memory leak which can occur after an aborted connection in some limited circumstances.",https://github.com/apache/httpd/commit/6a28069cef904802aeb334adce5e210a7379194c,Jeff Trawick,trawick,https://github.com/trawick,Apache,2005-9-30,11,9,9,9,0,Local,0.229709324273311,1217,5298,Ryan Bloom
CVE-2014-3523,399,NA,DoS,2014-7-20,2018-1-4,5,None,Remote,Low,Not required,None,None,Partial,"Memory leak in the winnt_accept function in server/mpm/winnt/child.c in the WinNT MPM in the Apache HTTP Server 2.4.x before 2.4.10 on Windows, when the default AcceptFilter is enabled, allows remote attackers to cause a denial of service (memory consumption) via crafted requests.",https://www.cvedetails.com/cve/CVE-2014-3523/,20140514,Yes. Fixed in Apache HTTP Server 2.4.10: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-3523 (cve.mitre.org)
Fix a memory consumption denial of service in the WinNT MPM (used in all Windows installations). Workaround: AcceptFilter <protocol> {none|connect}
[Jeff Trawick]",No,2014-7-1,2014-7-15,2014-7-15,6a5460f32415c2087b6dd5f67281b111a916a79b,server/mpm/winnt/child.c,"SECURITY (CVE-2014-0226): Fix a memory consumption denial of service in the WinNT MPM used in all Windows installations. Workaround: AcceptFilter <protocol> {none|connect}
Submitted by: trawick
Reviewed by: jorton, covener, jim",https://github.com/apache/httpd/commit/6a5460f32415c2087b6dd5f67281b111a916a79b,Jeff Trawick,trawick,https://github.com/trawick,Apache,2014-7-15,1,5,6,5,1,Local,0.06700135161228,347,5179,William A. Rowe Jr
CVE-2015-0253,,NA,DoS,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,None,Partial,"The read_request_line function in server/protocol.c in the Apache HTTP Server 2.4.12 does not initialize the protocol structure member, which allows remote attackers to cause a denial of service (NULL pointer dereference and process crash) by sending a request that lacks a method to an installation that enables the INCLUDES filter and has an ErrorDocument 400 directive specifying a local URI.",https://www.cvedetails.com/cve/CVE-2015-0253/,20141118,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-0253 (cve.mitre.org)
core: Fix a crash with ErrorDocument 400 pointing to a local URL-path  with the INCLUDES filter active, introduced in 2.4.11. PR 57531.  [Yann Ylavic]",No,2015-2-3,2015-3-5,2015-7-15,6a974059190b8a0c7e499f4ab12fe108127099cb,CHANGES,"*) SECURITY: CVE-2015-0253 (cve.mitre.org)
core: Fix a crash introduced in with ErrorDocument 400 pointing to a local URL-path with the INCLUDES filter active, introduced in 2.4.11. PR 57531. [Yann Ylavic]
Submitted By: ylavic
Committed By: covener",https://github.com/apache/httpd/commit/6a974059190b8a0c7e499f4ab12fe108127099cb,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2015-3-5,2,5,5,7,2,Local,0.02080231420428,978,47014,Jim Jagielski
CVE-2015-0253,,NA,DoS,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,None,Partial,"The read_request_line function in server/protocol.c in the Apache HTTP Server 2.4.12 does not initialize the protocol structure member, which allows remote attackers to cause a denial of service (NULL pointer dereference and process crash) by sending a request that lacks a method to an installation that enables the INCLUDES filter and has an ErrorDocument 400 directive specifying a local URI.",https://www.cvedetails.com/cve/CVE-2015-0253/,20141118,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-0253 (cve.mitre.org)
core: Fix a crash with ErrorDocument 400 pointing to a local URL-path  with the INCLUDES filter active, introduced in 2.4.11. PR 57531.  [Yann Ylavic]",No,2015-2-3,2015-3-5,2015-7-15,6a974059190b8a0c7e499f4ab12fe108127099cb,server/protocol.c,"*) SECURITY: CVE-2015-0253 (cve.mitre.org)
core: Fix a crash introduced in with ErrorDocument 400 pointing to a local URL-path with the INCLUDES filter active, introduced in 2.4.11. PR 57531. [Yann Ylavic]
Submitted By: ylavic
Committed By: covener",https://github.com/apache/httpd/commit/6a974059190b8a0c7e499f4ab12fe108127099cb,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2015-3-5,2,2,4,7,2,Local,0.006294058408862,50,7944,Ryan Bloom
CVE-2016-0736,310,NA,,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,Partial,None,None,"In Apache HTTP Server versions 2.4.0 to 2.4.23, mod_session_crypto was encrypting its data/cookie using the configured ciphers with possibly either CBC or ECB modes of operation (AES256-CBC by default), hence no selectable or builtin authenticated encryption. This made it vulnerable to padding oracle attacks, particularly with CBC.",https://www.cvedetails.com/cve/CVE-2016-0736/,20151216,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-0736 (cve.mitre.org)
mod_session_crypto: Authenticate the session data/cookie with a MAC (SipHash) to prevent deciphering or tampering with a padding oracle attack.  [Yann Ylavic, Colm MacCarthaigh]", No,2016-1-20,2016-12-20,2016-12-20,6b061df7133cb9033e1d161f36c1662697d82ec5,CHANGES,mod_session_crypto: follow up to r1772812: CHANGES entry.,https://github.com/apache/httpd/commit/6b061df7133cb9033e1d161f36c1662697d82ec5,Yann Ylavic,ylavic,https://github.com/ylavic,,2016-12-6,77,5,5,5,0,Local,0.013798436991208,678,49136,Jim Jagielski
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,6b8d5730d0fb1a1eaa4da6ba8dfc38f560329228,modules/http/byterange_filter.c,"Fix some RFC 2616 14.35.1 compliance issues:
- If there is at least one syntactically invalid byte-range-spec, we must ignore the whole header.
- If all ranges are unsatisfiable, send 416.",https://github.com/apache/httpd/commit/6b8d5730d0fb1a1eaa4da6ba8dfc38f560329228,Stefan Fritsch,,,GeNUA mbH,2011-9-1,13,49,68,46,19,Local,0.200221238938053,362,1808,Jim Jagielski
CVE-2010-2068,200,NA,+Info,2010-6-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"mod_proxy_http.c in mod_proxy_http in the Apache HTTP Server 2.2.9 through 2.2.15, 2.3.4-alpha, and 2.3.5-alpha on Windows, NetWare, and OS/2, in certain configurations involving proxy worker pools, does not properly detect timeouts, which allows remote attackers to obtain a potentially sensitive response intended for a different client in opportunistic circumstances via a normal HTTP request.",https://www.cvedetails.com/cve/CVE-2010-2068/,20100525,Yes. Fixed in Apache HTTP Server 2.2.16: http://httpd.apache.org/security/vulnerabilities_22.html," *) SECURITY: CVE-2010-2068 (cve.mitre.org) 
mod_proxy_ajp, mod_proxy_http, mod_reqtimeout: Fix timeout detection for platforms Windows, Netware and OS2.  PR: 49417. [Rainer Jung]",Yes,,2010-6-9,2010-7-25,6bc9826689e881d597b67baaa0033bd65c9fa932,modules/filters/mod_reqtimeout.c,"* Use APR_STATUS_IS_TIMEUP instead of direct compare to APR_TIMEUP to be more safe on different platforms.
Pointed out by: rjung",https://github.com/apache/httpd/commit/6bc9826689e881d597b67baaa0033bd65c9fa932,Ruediger Pluem,,,,2010-6-10,1,1,2,1,1,Local,0.002042900919305,2,979,Stefan Fritsch
CVE-2007-6421,79,NA,XSS,2008-1-8,2017-9-28,3.5,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in balancer-manager in mod_proxy_balancer in the Apache HTTP Server 2.2.0 through 2.2.6 allows remote attackers to inject arbitrary web script or HTML via the (1) ss, (2) wr, or (3) rr parameters, or (4) the URL.",https://www.cvedetails.com/cve/CVE-2007-6421/,20071217,Yes. Fixed in Apache HTTP Server 2.2.8. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-6421 (cve.mitre.org)
mod_proxy_balancer: Correctly escape the worker route and the worker redirect string in the HTML output of the balancer manager.
Reported by SecurityReason. [Ruediger Pluem]",No,2007-12-12,2008-1-2,2008-1-19,6c7d80d382ccafc16acefa9ab85f3db3e4bc33af,CHANGES,* Added missing CVE number,https://github.com/apache/httpd/commit/6c7d80d382ccafc16acefa9ab85f3db3e4bc33af,Ruediger Pluem,,,,2007-12-29,2,2,3,2,1,Local,0.024469139667136,938,38334,Jim Jagielski
CVE-2015-3183,20,NA,,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,Partial,None,"The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules/http/http_filters.c.",https://www.cvedetails.com/cve/CVE-2015-3183/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3183 (cve.mitre.org)
core: Fix chunk header parsing defect. Remove apr_brigade_flatten(), buffering and duplicated code from the HTTP_IN filter, parse chunks in a single pass with zero copy.
Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.  [Graham Leggett, Yann Ylavic]",No,2015-4-4,2015-6-9,2015-7-15,6e82e594ff37b01a84e2c33215ca820ed5e4328b,modules/http/http_filters.c,Follow up to r1685345: don't accept spaces *before* the chunk-size.,https://github.com/apache/httpd/commit/6e82e594ff37b01a84e2c33215ca820ed5e4328b,Yann Ylavic,ylavic,https://github.com/ylavic,,2015-6-14,6,0,4,0,4,Local,0.014653641207815,66,4504,Graham Leggett
CVE-2003-0460,,NA,DoS,2003-8-27,2008-9-5,5,None,Remote,Low,Not required,None,None,Partial,"The rotatelogs program on Apache before 1.3.28, for Windows and OS/2 systems, does not properly ignore certain control characters that are received over the pipe, which could allow remote attackers to cause a denial of service.",https://www.cvedetails.com/cve/CVE-2003-0460/,20030626,Yes. Fixed in Apache HTTP Server 1.3.28: http://httpd.apache.org/security/vulnerabilities_13.html ," *) SECURITY: CVE-2003-0460 (cve.mitre.org)
     Fix the rotatelogs support program on Win32 and OS/2 to ignore special control characters received over the pipe. Previously
     such characters could cause rotatelogs to quit logging and exit. [André Malo]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]",No,2003-7-4,2003-7-18,2003-7-18,6e8e4ad72da2ffe4d344d4cb74908919bf9ad9fc,modules/mappers/mod_rewrite.c,"when prefixing document root, use the core translator instead of baking our own. The core function is much better maintained and probably more safe. Additionally this removes just another fixed buffer :)",https://github.com/apache/httpd/commit/6e8e4ad72da2ffe4d344d4cb74908919bf9ad9fc,Andre Malo,,,,2003-7-18,2,19,46,19,27,Local,0.154491368379986,1584,10253,Roy T. Fielding
CVE-2006-5752,,NA,XSS,2007-6-27,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in mod_status.c in the mod_status module in Apache HTTP Server (httpd), when ExtendedStatus is enabled and a public server-status page is used, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors involving charsets with browsers that perform ""charset detection"" when the content-type is not specified.",https://www.cvedetails.com/cve/CVE-2006-5752/,20061106,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html 
","*) SECURITY: CVE-2006-5752 (cve.mitre.org)
mod_status: Fix a possible XSS attack against a site with a public server-status page and ExtendedStatus enabled, for browsers which perform charset ""detection"".  Reported by Stefan Esser.  [Joe Orton]",No,2006-10-19,2007-6-20,2007-9-7,6f0c8008746b58eb0a59f59501163eea2921d03d,CHANGES,"Fix CVE-2006-5752:
* modules/generators/mod_status.c (status_handler): Specify charset in content-type to prevent browsers doing charset ""detection"", which allows an XSS attack.  Use logitem-escaping on the request string to make it charset-neutral.
Reported by: Stefan Esser <sesser hardened-php.net>",https://github.com/apache/httpd/commit/6f0c8008746b58eb0a59f59501163eea2921d03d,Joe Orton,notroj,,Red Hat,2007-6-20,1,5,5,11,4,Local,0.030153483949835,666,22087,Roy T. Fielding
CVE-2006-5752,,NA,XSS,2007-6-27,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in mod_status.c in the mod_status module in Apache HTTP Server (httpd), when ExtendedStatus is enabled and a public server-status page is used, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors involving charsets with browsers that perform ""charset detection"" when the content-type is not specified.",https://www.cvedetails.com/cve/CVE-2006-5752/,20061106,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html 
","*) SECURITY: CVE-2006-5752 (cve.mitre.org)
mod_status: Fix a possible XSS attack against a site with a public server-status page and ExtendedStatus enabled, for browsers which perform charset ""detection"".  Reported by Stefan Esser.  [Joe Orton]",No,2006-10-19,2007-6-20,2007-9-7,6f0c8008746b58eb0a59f59501163eea2921d03d,modules/generators/mod_status.c,"Fix CVE-2006-5752:
* modules/generators/mod_status.c (status_handler): Specify charset in content-type to prevent browsers doing charset ""detection"", which allows an XSS attack.  Use logitem-escaping on the request string to make it charset-neutral.
Reported by: Stefan Esser <sesser hardened-php.net>",https://github.com/apache/httpd/commit/6f0c8008746b58eb0a59f59501163eea2921d03d,Joe Orton,notroj,,Red Hat,2007-6-20,1,6,10,11,4,Local,0.005712034666141,29,5077,Jeff Trawick
CVE-2002-1593,Not defined,NA,DoS,2002-9-25,2017-7-10,5,None,Remote,Low,Not required,None,None,Partial,"mod_dav in Apache before 2.0.42 does not properly handle versioning hooks, which may allow remote attackers to kill a child process via a null dereference and cause a denial of service (CPU consumption) in a preforked multi-processing module.",https://www.cvedetails.com/cve/CVE-2002-1593/,20050313,Yes. Fixed in Apache HTTP Server 2.0.42: http://httpd.apache.org/security/vulnerabilities_20.html ,"A flaw was found in handling of versioning hooks in mod_dav. An attacker could send a carefully crafted request in such a way to cause the child process handling the connection to crash. This issue will only result in a denial of service where a threaded process model is in use. 

http://archive.apache.org/dist/httpd/CHANGES_2.0
SECURITY: CVE-2002-1593 (cve.mitre.org) [CERT VU#406121]: mod_dav: Check for versioning hooks before using them. [Greg Stein]",No,,2002-9-19,2002-9-24,6f9b7df85c0f76025e1fc0e8061af6bf06a66d0b,modules/dav/main/mod_dav.c,Allow mod_dav to be involved with sub-requests.,https://github.com/apache/httpd/commit/6f9b7df85c0f76025e1fc0e8061af6bf06a66d0b,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-9-5,15,2,4,2,2,Local,0.000348766239428,4,11469,Greg Stein
CVE-2009-1195,16,NA,Gain privileges,2009-5-28,2017-9-28,4.9,None,Local,Low,Not required,None,None,Complete,"The Apache HTTP Server 2.2.11 and earlier 2.2 versions does not properly handle Options=IncludesNOEXEC in the AllowOverride directive, which allows local users to gain privileges by configuring (1) Options Includes, (2) Options +Includes, or (3) Options +IncludesNOEXEC in a .htaccess file, and then inserting an exec element in a .shtml file.",https://www.cvedetails.com/cve/CVE-2009-1195/,20090326,Yes. Fixed in Apache HTTP Server 2.2.12. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2009-1195 (cve.mitre.org)
Prevent the ""Includes"" Option from being enabled in an .htaccess file if the AllowOverride restrictions do not permit it.
     [Jonathan Peatfield <j.s.peatfield damtp.cam.ac.uk>, Joe Orton, Ruediger Pluem, Jeff Trawick]",No,2009-3-9,2009-4-22,2009-7-27,701b5288abf6d237e1793d9c9d0236a659f9dbc4,include/http_core.h,"Security fix for CVE-2009-1195: fix Options handling such that 'AllowOverride Options=IncludesNoExec' does not permit Includes with exec= enabled to be configured in an .htaccess file:

* include/http_core.h: Change semantics of Includes/IncludeNoExec options bits to be additive, OPT_INCLUDES now means SSI is enabled without exec=.  OPT_INCLUDES|OPT_INC_WITH_EXEC means SSI is enabled with exec=.
* server/core.c (create_core_dir_config): Remove defunct OPT_INCNOEXEC from default override_opts, no functional change.
 (merge_core_dir_configs): Update logic to ensure that exec= is disabled in a context where IncludesNoexec is configured, even if Includes-with-exec is permitted in the inherited options set.
(set_allow_opts, set_options): Update to reflect new semantics of OPT_INCLUDES, OPT_INC_WITH_EXEC.
* server/config.c: Update to remove OPT_INCNOEXEC from default override_opts, no functional change.
* modules/filters/mod_include.c (includes_filter): Update to reflect new options semantics - disable exec= support if the OPT_INC_WITH_EXEC bit is not set.
Submitted by: Jonathan Peatfield <j.s.peatfield damtp.cam.ac.uk>, jorton
Thanks to: Vincent Danon <vdanon redhat.com>",https://github.com/apache/httpd/commit/701b5288abf6d237e1793d9c9d0236a659f9dbc4,Joe Orton,notroj,,Red Hat,2009-5-8,1,4,8,22,16,Global,0.012321660181582,19,1542,Roy T. Fielding
CVE-2009-1195,16,NA,Gain privileges,2009-5-28,2017-9-28,4.9,None,Local,Low,Not required,None,None,Complete,"The Apache HTTP Server 2.2.11 and earlier 2.2 versions does not properly handle Options=IncludesNOEXEC in the AllowOverride directive, which allows local users to gain privileges by configuring (1) Options Includes, (2) Options +Includes, or (3) Options +IncludesNOEXEC in a .htaccess file, and then inserting an exec element in a .shtml file.",https://www.cvedetails.com/cve/CVE-2009-1195/,20090326,Yes. Fixed in Apache HTTP Server 2.2.12. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2009-1195 (cve.mitre.org)
Prevent the ""Includes"" Option from being enabled in an .htaccess file if the AllowOverride restrictions do not permit it.
     [Jonathan Peatfield <j.s.peatfield damtp.cam.ac.uk>, Joe Orton, Ruediger Pluem, Jeff Trawick]",No,2009-3-9,2009-4-22,2009-7-27,701b5288abf6d237e1793d9c9d0236a659f9dbc4,modules/filters/mod_include.c,"Security fix for CVE-2009-1195: fix Options handling such that 'AllowOverride Options=IncludesNoExec' does not permit Includes with exec= enabled to be configured in an .htaccess file:

* include/http_core.h: Change semantics of Includes/IncludeNoExec options bits to be additive, OPT_INCLUDES now means SSI is enabled without exec=.  OPT_INCLUDES|OPT_INC_WITH_EXEC means SSI is enabled with exec=.
* server/core.c (create_core_dir_config): Remove defunct OPT_INCNOEXEC from default override_opts, no functional change.
 (merge_core_dir_configs): Update logic to ensure that exec= is disabled in a context where IncludesNoexec is configured, even if Includes-with-exec is permitted in the inherited options set.
(set_allow_opts, set_options): Update to reflect new semantics of OPT_INCLUDES, OPT_INC_WITH_EXEC.
* server/config.c: Update to remove OPT_INCNOEXEC from default override_opts, no functional change.
* modules/filters/mod_include.c (includes_filter): Update to reflect new options semantics - disable exec= support if the OPT_INC_WITH_EXEC bit is not set.
Submitted by: Jonathan Peatfield <j.s.peatfield damtp.cam.ac.uk>, jorton
Thanks to: Vincent Danon <vdanon redhat.com>",https://github.com/apache/httpd/commit/701b5288abf6d237e1793d9c9d0236a659f9dbc4,Joe Orton,notroj,,Red Hat,2009-5-8,1,1,2,22,16,Global,0.001887520912874,44,23311,Andre Malo
CVE-2009-1195,16,NA,Gain privileges,2009-5-28,2017-9-28,4.9,None,Local,Low,Not required,None,None,Complete,"The Apache HTTP Server 2.2.11 and earlier 2.2 versions does not properly handle Options=IncludesNOEXEC in the AllowOverride directive, which allows local users to gain privileges by configuring (1) Options Includes, (2) Options +Includes, or (3) Options +IncludesNOEXEC in a .htaccess file, and then inserting an exec element in a .shtml file.",https://www.cvedetails.com/cve/CVE-2009-1195/,20090326,Yes. Fixed in Apache HTTP Server 2.2.12. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2009-1195 (cve.mitre.org)
Prevent the ""Includes"" Option from being enabled in an .htaccess file if the AllowOverride restrictions do not permit it.
     [Jonathan Peatfield <j.s.peatfield damtp.cam.ac.uk>, Joe Orton, Ruediger Pluem, Jeff Trawick]",No,2009-3-9,2009-4-22,2009-7-27,701b5288abf6d237e1793d9c9d0236a659f9dbc4,server/config.c,"Security fix for CVE-2009-1195: fix Options handling such that 'AllowOverride Options=IncludesNoExec' does not permit Includes with exec= enabled to be configured in an .htaccess file:

* include/http_core.h: Change semantics of Includes/IncludeNoExec options bits to be additive, OPT_INCLUDES now means SSI is enabled without exec=.  OPT_INCLUDES|OPT_INC_WITH_EXEC means SSI is enabled with exec=.
* server/core.c (create_core_dir_config): Remove defunct OPT_INCNOEXEC from default override_opts, no functional change.
 (merge_core_dir_configs): Update logic to ensure that exec= is disabled in a context where IncludesNoexec is configured, even if Includes-with-exec is permitted in the inherited options set.
(set_allow_opts, set_options): Update to reflect new semantics of OPT_INCLUDES, OPT_INC_WITH_EXEC.
* server/config.c: Update to remove OPT_INCNOEXEC from default override_opts, no functional change.
* modules/filters/mod_include.c (includes_filter): Update to reflect new options semantics - disable exec= support if the OPT_INC_WITH_EXEC bit is not set.
Submitted by: Jonathan Peatfield <j.s.peatfield damtp.cam.ac.uk>, jorton
Thanks to: Vincent Danon <vdanon redhat.com>",https://github.com/apache/httpd/commit/701b5288abf6d237e1793d9c9d0236a659f9dbc4,Joe Orton,notroj,,Red Hat,2009-5-8,1,3,6,22,16,Global,0.002958579881657,21,7098,Roy T. Fielding
CVE-2009-1195,16,NA,Gain privileges,2009-5-28,2017-9-28,4.9,None,Local,Low,Not required,None,None,Complete,"The Apache HTTP Server 2.2.11 and earlier 2.2 versions does not properly handle Options=IncludesNOEXEC in the AllowOverride directive, which allows local users to gain privileges by configuring (1) Options Includes, (2) Options +Includes, or (3) Options +IncludesNOEXEC in a .htaccess file, and then inserting an exec element in a .shtml file.",https://www.cvedetails.com/cve/CVE-2009-1195/,20090326,Yes. Fixed in Apache HTTP Server 2.2.12. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2009-1195 (cve.mitre.org)
Prevent the ""Includes"" Option from being enabled in an .htaccess file if the AllowOverride restrictions do not permit it.
     [Jonathan Peatfield <j.s.peatfield damtp.cam.ac.uk>, Joe Orton, Ruediger Pluem, Jeff Trawick]",No,2009-3-9,2009-4-22,2009-7-27,701b5288abf6d237e1793d9c9d0236a659f9dbc4,server/core.c,"Security fix for CVE-2009-1195: fix Options handling such that 'AllowOverride Options=IncludesNoExec' does not permit Includes with exec= enabled to be configured in an .htaccess file:

* include/http_core.h: Change semantics of Includes/IncludeNoExec options bits to be additive, OPT_INCLUDES now means SSI is enabled without exec=.  OPT_INCLUDES|OPT_INC_WITH_EXEC means SSI is enabled with exec=.
* server/core.c (create_core_dir_config): Remove defunct OPT_INCNOEXEC from default override_opts, no functional change.
 (merge_core_dir_configs): Update logic to ensure that exec= is disabled in a context where IncludesNoexec is configured, even if Includes-with-exec is permitted in the inherited options set.
(set_allow_opts, set_options): Update to reflect new semantics of OPT_INCLUDES, OPT_INC_WITH_EXEC.
* server/config.c: Update to remove OPT_INCNOEXEC from default override_opts, no functional change.
* modules/filters/mod_include.c (includes_filter): Update to reflect new options semantics - disable exec= support if the OPT_INC_WITH_EXEC bit is not set.
Submitted by: Jonathan Peatfield <j.s.peatfield damtp.cam.ac.uk>, jorton
Thanks to: Vincent Danon <vdanon redhat.com>",https://github.com/apache/httpd/commit/701b5288abf6d237e1793d9c9d0236a659f9dbc4,Joe Orton,notroj,,Red Hat,2009-5-8,1,14,22,22,16,Global,0.010009024530314,122,12189,Ryan Bloom
CVE-2012-2687,79,NA,XSS,2012-8-22,2017-9-18,2.6,None,Remote,High,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the make_variant_list function in mod_negotiation.c in the mod_negotiation module in the Apache HTTP Server 2.4.x before 2.4.3, when the MultiViews option is enabled, allow remote attackers to inject arbitrary web script or HTML via a crafted filename that is not properly handled during construction of a variant list.",https://www.cvedetails.com/cve/CVE-2012-2687/,20120514,Yes. Fixed in Apache HTTP Server 2.4.3: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2012-2687 (cve.mitre.org)
mod_negotiation: Escape filenames in variant list to prevent a possible XSS for a site where untrusted users can upload files to a location with MultiViews enabled. [Niels Heinen <Heinz google.com>]",No,2012-5-31,2012-6-13,2012-8-21,706691e6fd5445f6d60456f55c5647e788e7b3ad,CHANGES,"SECURITY: CVE-2012-2687 (cve.mitre.org):
mod_negotiation: Escape filenames in variant list to prevent an possible XSS for a site where untrusted users can upload files to a location with MultiViews enabled.
* modules/mappers/mod_negotiation.c (make_variant_list): Escape filenames in variant list.
Submitted by: Niels Heinen <heinenn google.com>",https://github.com/apache/httpd/commit/706691e6fd5445f6d60456f55c5647e788e7b3ad,Joe Orton,notroj,,Red Hat,2012-6-13,1,5,5,7,2,Local,0.017377780783014,771,44367,Jim Jagielski
CVE-2012-2687,79,NA,XSS,2012-8-22,2017-9-18,2.6,None,Remote,High,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the make_variant_list function in mod_negotiation.c in the mod_negotiation module in the Apache HTTP Server 2.4.x before 2.4.3, when the MultiViews option is enabled, allow remote attackers to inject arbitrary web script or HTML via a crafted filename that is not properly handled during construction of a variant list.",https://www.cvedetails.com/cve/CVE-2012-2687/,20120514,Yes. Fixed in Apache HTTP Server 2.4.3: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2012-2687 (cve.mitre.org)
mod_negotiation: Escape filenames in variant list to prevent a possible XSS for a site where untrusted users can upload files to a location with MultiViews enabled. [Niels Heinen <Heinz google.com>]",No,2012-5-31,2012-6-13,2012-8-21,706691e6fd5445f6d60456f55c5647e788e7b3ad,modules/mappers/mod_negotiation.c,"SECURITY: CVE-2012-2687 (cve.mitre.org):
mod_negotiation: Escape filenames in variant list to prevent an possible XSS for a site where untrusted users can upload files to a location with MultiViews enabled.
* modules/mappers/mod_negotiation.c (make_variant_list): Escape filenames in variant list.
Submitted by: Niels Heinen <heinenn google.com>",https://github.com/apache/httpd/commit/706691e6fd5445f6d60456f55c5647e788e7b3ad,Joe Orton,notroj,,Red Hat,2012-6-13,1,2,4,7,2,Local,0.002057228352347,11,5347,Roy T. Fielding
CVE-2012-3499,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving hostnames and URIs in the (1) mod_imagemap, (2) mod_info, (3) mod_ldap, (4) mod_proxy_ftp, and (5) mod_status modules.",https://www.cvedetails.com/cve/CVE-2012-3499/,20120614,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-3499 (cve.mitre.org)
Various XSS flaws due to unescaped hostnames and URIs HTML output in mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.
[Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]",No,2012-7-11,2013-2-18,2013-2-25,71c37194fc30a1ae09403850356568500b7f7f94,modules/generators/mod_info.c,Be sure to escape potential troubled srings,https://github.com/apache/httpd/commit/71c37194fc30a1ae09403850356568500b7f7f94,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-26,13,2,3,38,22,Global,0.032862496396656,114,3469,Paul Querna
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,71c37194fc30a1ae09403850356568500b7f7f94,modules/generators/mod_info.c,Be sure to escape potential troubled srings,https://github.com/apache/httpd/commit/71c37194fc30a1ae09403850356568500b7f7f94,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-26,26,2,3,38,22,Global,0.032862496396656,114,3469,Paul Querna
CVE-2012-3499,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving hostnames and URIs in the (1) mod_imagemap, (2) mod_info, (3) mod_ldap, (4) mod_proxy_ftp, and (5) mod_status modules.",https://www.cvedetails.com/cve/CVE-2012-3499/,20120614,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-3499 (cve.mitre.org)
Various XSS flaws due to unescaped hostnames and URIs HTML output in mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.
[Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]",No,2012-7-11,2013-2-18,2013-2-25,71c37194fc30a1ae09403850356568500b7f7f94,modules/generators/mod_status.c,Be sure to escape potential troubled srings,https://github.com/apache/httpd/commit/71c37194fc30a1ae09403850356568500b7f7f94,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-26,13,2,3,38,22,Global,0.013488880787459,74,5486,Jeff Trawick
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,71c37194fc30a1ae09403850356568500b7f7f94,modules/generators/mod_status.c,Be sure to escape potential troubled srings,https://github.com/apache/httpd/commit/71c37194fc30a1ae09403850356568500b7f7f94,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-26,26,2,3,38,22,Global,0.013488880787459,74,5486,Jeff Trawick
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,71c37194fc30a1ae09403850356568500b7f7f94,modules/mappers/mod_imagemap.c,Be sure to escape potential troubled srings,https://github.com/apache/httpd/commit/71c37194fc30a1ae09403850356568500b7f7f94,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-26,26,18,26,38,22,Global,0.171228887594642,294,1717,Roy T. Fielding
CVE-2012-3499,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving hostnames and URIs in the (1) mod_imagemap, (2) mod_info, (3) mod_ldap, (4) mod_proxy_ftp, and (5) mod_status modules.",https://www.cvedetails.com/cve/CVE-2012-3499/,20120614,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-3499 (cve.mitre.org)
Various XSS flaws due to unescaped hostnames and URIs HTML output in mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.
[Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]",No,2012-7-11,2013-2-18,2013-2-25,71c37194fc30a1ae09403850356568500b7f7f94,modules/mappers/mod_imagemap.c,Be sure to escape potential troubled srings,https://github.com/apache/httpd/commit/71c37194fc30a1ae09403850356568500b7f7f94,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-26,13,18,26,38,22,Global,0.171228887594642,294,1717,Roy T. Fielding
CVE-2012-4558,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.,https://www.cvedetails.com/cve/CVE-2012-4558/,20120821,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-4558 (cve.mitre.org)
     XSS in mod_proxy_balancer manager interface. [Jim Jagielski, Niels Heinen <heinenn google com>]",No,2012-10-7,2013-2-18,2013-2-25,71c37194fc30a1ae09403850356568500b7f7f94,modules/proxy/mod_proxy_balancer.c,Be sure to escape potential troubled srings,https://github.com/apache/httpd/commit/71c37194fc30a1ae09403850356568500b7f7f94,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-26,26,13,24,38,22,Global,0.59720420809915,4144,6939,Jim Jagielski
CVE-2012-3499,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving hostnames and URIs in the (1) mod_imagemap, (2) mod_info, (3) mod_ldap, (4) mod_proxy_ftp, and (5) mod_status modules.",https://www.cvedetails.com/cve/CVE-2012-3499/,20120614,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-3499 (cve.mitre.org)
Various XSS flaws due to unescaped hostnames and URIs HTML output in mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.
[Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]",No,2012-7-11,2013-2-18,2013-2-25,71c37194fc30a1ae09403850356568500b7f7f94,modules/proxy/mod_proxy_balancer.c,Be sure to escape potential troubled srings,https://github.com/apache/httpd/commit/71c37194fc30a1ae09403850356568500b7f7f94,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-26,13,13,24,38,22,Global,0.59720420809915,4144,6939,Jim Jagielski
CVE-2012-3499,79,NA,XSS,2013-2-26,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving hostnames and URIs in the (1) mod_imagemap, (2) mod_info, (3) mod_ldap, (4) mod_proxy_ftp, and (5) mod_status modules.",https://www.cvedetails.com/cve/CVE-2012-3499/,20120614,"Yes. Fixed in Apache HTTP Server 2.2.24, 2.4.4: http://httpd.apache.org/security/vulnerabilities_22.html
https://httpd.apache.org/security/vulnerabilities_24.html ","*) SECURITY: CVE-2012-3499 (cve.mitre.org)
Various XSS flaws due to unescaped hostnames and URIs HTML output in mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.
[Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]",No,2012-7-11,2013-2-18,2013-2-25,71c37194fc30a1ae09403850356568500b7f7f94,modules/proxy/mod_proxy_ftp.c,Be sure to escape potential troubled srings,https://github.com/apache/httpd/commit/71c37194fc30a1ae09403850356568500b7f7f94,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2012-11-26,13,3,4,38,22,Global,0.007111466240511,89,12515,Martin Kraemer
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,7200729163a903dbc887bcf5577b235541faf44a,modules/http/byterange_filter.c,* Bit operators should be more efficient then the modulo operator (provided the compiler does not optimize on its own),https://github.com/apache/httpd/commit/7200729163a903dbc887bcf5577b235541faf44a,Ruediger Pluem,,,,2011-8-29,13,1,2,1,1,Local,0.113109048723898,195,1724,Jim Jagielski
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,72474d28a3e7c2f618182033ab6d70a8cec6da91,modules/http/http_protocol.c,"If the request doesn't have a body, then don't try to read it. Without this, the httpd-test suite was taking five minutes for EVERY test.",https://github.com/apache/httpd/commit/72474d28a3e7c2f618182033ab6d70a8cec6da91,Ryan Bloom,,,,2002-5-31,29,5,5,5,0,Local,0.318628240218966,5937,18633,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,72fb0585b019645ba249feb1cbd331aae96f5250,modules/mappers/mod_rewrite.c,"Protect us from this dirty hack that gets SysV Sem working again on mod_rewrite. This, along with the original usage of a unix-only function in mod_rewrite, is a temporary stopgap measure designed only to workaround limitations in APR's handling of permission attributes. It shall be removed as soon as that interface is improved.",https://github.com/apache/httpd/commit/72fb0585b019645ba249feb1cbd331aae96f5250,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-5-6,309,4,4,4,0,Local,0.048896476039507,401,8201,Roy T. Fielding
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,7454dbad4bb9020b2f7f67d15b13338cf4760417,docs/manual/mod/core.xml,"Dropped the never-released ap_has_cntrls() as it had very limited and inefficient application at that, added ap_scan_vchar_obstext() to accomplish a similar purpose.
Dropped HttpProtocolOptions StrictURL option, this will be better handled in the future with a specific directive and perhaps multiple levels of scrutiny, use ap_scan_vchar_obstext() to simply ensure there are no control characters or whitespace within the URI.
Changed the scanning of the response header table by check_headers() to follow the same rulesets as reading request headers. Disallow any CTL character within a response header value, and any CTL or whitespace in response header field name, even in strict mode.
Apply HttpProtocolOptions Strict to chunk header parsing, invalid whitespace is invalid, line termination must follow CRLF convention.",https://github.com/apache/httpd/commit/7454dbad4bb9020b2f7f67d15b13338cf4760417,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-10-14,60,13,35,102,118,Global,0.039206497969385,502,12804,Joshua Slive
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,7454dbad4bb9020b2f7f67d15b13338cf4760417,modules/http/http_filters.c,"Dropped the never-released ap_has_cntrls() as it had very limited and inefficient application at that, added ap_scan_vchar_obstext() to accomplish a similar purpose.
Dropped HttpProtocolOptions StrictURL option, this will be better handled in the future with a specific directive and perhaps multiple levels of scrutiny, use ap_scan_vchar_obstext() to simply ensure there are no control characters or whitespace within the URI.
Changed the scanning of the response header table by check_headers() to follow the same rulesets as reading request headers. Disallow any CTL character within a response header value, and any CTL or whitespace in response header field name, even in strict mode.
Apply HttpProtocolOptions Strict to chunk header parsing, invalid whitespace is invalid, line termination must follow CRLF convention.",https://github.com/apache/httpd/commit/7454dbad4bb9020b2f7f67d15b13338cf4760417,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-10-14,60,59,90,102,118,Global,0.070455512984249,331,4698,Graham Leggett
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,7454dbad4bb9020b2f7f67d15b13338cf4760417,server/core.c,"Dropped the never-released ap_has_cntrls() as it had very limited and inefficient application at that, added ap_scan_vchar_obstext() to accomplish a similar purpose.
Dropped HttpProtocolOptions StrictURL option, this will be better handled in the future with a specific directive and perhaps multiple levels of scrutiny, use ap_scan_vchar_obstext() to simply ensure there are no control characters or whitespace within the URI.
Changed the scanning of the response header table by check_headers() to follow the same rulesets as reading request headers. Disallow any CTL character within a response header value, and any CTL or whitespace in response header field name, even in strict mode.
Apply HttpProtocolOptions Strict to chunk header parsing, invalid whitespace is invalid, line termination must follow CRLF convention.",https://github.com/apache/httpd/commit/7454dbad4bb9020b2f7f67d15b13338cf4760417,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-10-14,60,3,18,102,118,Global,0.15674291368372,2693,17181,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,7454dbad4bb9020b2f7f67d15b13338cf4760417,server/gen_test_char.c,"Dropped the never-released ap_has_cntrls() as it had very limited and inefficient application at that, added ap_scan_vchar_obstext() to accomplish a similar purpose.
Dropped HttpProtocolOptions StrictURL option, this will be better handled in the future with a specific directive and perhaps multiple levels of scrutiny, use ap_scan_vchar_obstext() to simply ensure there are no control characters or whitespace within the URI.
Changed the scanning of the response header table by check_headers() to follow the same rulesets as reading request headers. Disallow any CTL character within a response header value, and any CTL or whitespace in response header field name, even in strict mode.
Apply HttpProtocolOptions Strict to chunk header parsing, invalid whitespace is invalid, line termination must follow CRLF convention.",https://github.com/apache/httpd/commit/7454dbad4bb9020b2f7f67d15b13338cf4760417,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-10-14,60,5,13,102,118,Global,0.390738060781476,270,691,William A. Rowe Jr
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,7454dbad4bb9020b2f7f67d15b13338cf4760417,server/protocol.c,"Dropped the never-released ap_has_cntrls() as it had very limited and inefficient application at that, added ap_scan_vchar_obstext() to accomplish a similar purpose.
Dropped HttpProtocolOptions StrictURL option, this will be better handled in the future with a specific directive and perhaps multiple levels of scrutiny, use ap_scan_vchar_obstext() to simply ensure there are no control characters or whitespace within the URI.
Changed the scanning of the response header table by check_headers() to follow the same rulesets as reading request headers. Disallow any CTL character within a response header value, and any CTL or whitespace in response header field name, even in strict mode.
Apply HttpProtocolOptions Strict to chunk header parsing, invalid whitespace is invalid, line termination must follow CRLF convention.",https://github.com/apache/httpd/commit/7454dbad4bb9020b2f7f67d15b13338cf4760417,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-10-14,60,18,46,102,118,Global,0.214801110083256,2322,10810,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,7454dbad4bb9020b2f7f67d15b13338cf4760417,server/util.c,"Dropped the never-released ap_has_cntrls() as it had very limited and inefficient application at that, added ap_scan_vchar_obstext() to accomplish a similar purpose.
Dropped HttpProtocolOptions StrictURL option, this will be better handled in the future with a specific directive and perhaps multiple levels of scrutiny, use ap_scan_vchar_obstext() to simply ensure there are no control characters or whitespace within the URI.
Changed the scanning of the response header table by check_headers() to follow the same rulesets as reading request headers. Disallow any CTL character within a response header value, and any CTL or whitespace in response header field name, even in strict mode.
Apply HttpProtocolOptions Strict to chunk header parsing, invalid whitespace is invalid, line termination must follow CRLF convention.",https://github.com/apache/httpd/commit/7454dbad4bb9020b2f7f67d15b13338cf4760417,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-10-14,60,4,18,102,118,Global,0.084148948138148,748,8889,Roy T. Fielding
CVE-2013-1896,264,NA,DoS,2013-7-10,2017-9-18,4.3,None,Remote,Medium,Not required,None,None,Partial,"mod_dav.c in the Apache HTTP Server before 2.2.25 does not properly determine whether DAV is enabled for a URI, which allows remote attackers to cause a denial of service (segmentation fault) via a MERGE request in which the URI is configured for handling by the mod_dav_svn module, but a certain href attribute in XML data refers to a non-DAV URI.",https://www.cvedetails.com/cve/CVE-2013-1896/,20130219,"Yes. Fixed in Apache HTTP Server 2.2.25, 2.4.6: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-1896 (cve.mitre.org)
mod_dav: Sending a MERGE request against a URI handled by mod_dav_svn with the source href (sent as part of the request body as XML) pointing to a URI that is not configured for DAV will trigger a segfault. [Ben Reser <ben reser.org>]",No,2013-3-7,2013-5-23,2013-7-22,7608e940c1821dc70907adf6d3c48abdd729476b,CHANGES,mod_dav: Sending a MERGE request against a URI handled by mod_dav_svn with the source href (sent as part of the request body as XML) pointing to a URI that is not configured for DAV will trigger a segfault.,https://github.com/apache/httpd/commit/7608e940c1821dc70907adf6d3c48abdd729476b,Graham Leggett,minfrin,https://github.com/minfrin,,2013-5-23,1,5,5,11,5,Local,0.025719277294942,1163,45219,Jim Jagielski
CVE-2013-1896,264,NA,DoS,2013-7-10,2017-9-18,4.3,None,Remote,Medium,Not required,None,None,Partial,"mod_dav.c in the Apache HTTP Server before 2.2.25 does not properly determine whether DAV is enabled for a URI, which allows remote attackers to cause a denial of service (segmentation fault) via a MERGE request in which the URI is configured for handling by the mod_dav_svn module, but a certain href attribute in XML data refers to a non-DAV URI.",https://www.cvedetails.com/cve/CVE-2013-1896/,20130219,"Yes. Fixed in Apache HTTP Server 2.2.25, 2.4.6: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-1896 (cve.mitre.org)
mod_dav: Sending a MERGE request against a URI handled by mod_dav_svn with the source href (sent as part of the request body as XML) pointing to a URI that is not configured for DAV will trigger a segfault. [Ben Reser <ben reser.org>]",No,2013-3-7,2013-5-23,2013-7-22,7608e940c1821dc70907adf6d3c48abdd729476b,modules/dav/main/mod_dav.c,mod_dav: Sending a MERGE request against a URI handled by mod_dav_svn with the source href (sent as part of the request body as XML) pointing to a URI that is not configured for DAV will trigger a segfault.,https://github.com/apache/httpd/commit/7608e940c1821dc70907adf6d3c48abdd729476b,Graham Leggett,minfrin,https://github.com/minfrin,,2013-5-23,1,6,11,11,5,Local,0.007885080802561,101,12809,Greg Stein
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,767ee194669093277d1c65635b07eb35fa005324,modules/http/http_request.c,fix the type of a parameter to ap_get_brigade(),https://github.com/apache/httpd/commit/767ee194669093277d1c65635b07eb35fa005324,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-5-7,16,1,2,2,2,Global,0.01689628281778,65,3847,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,767ee194669093277d1c65635b07eb35fa005324,server/protocol.c,fix the type of a parameter to ap_get_brigade(),https://github.com/apache/httpd/commit/767ee194669093277d1c65635b07eb35fa005324,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-5-7,16,1,2,2,2,Global,0.01008064516129,25,2480,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,768392c07535de58c2096cdc0df3650c8ddec322,modules/http/byterange_filter.c,* Fix error message,https://github.com/apache/httpd/commit/768392c07535de58c2096cdc0df3650c8ddec322,Ruediger Pluem,,,,2011-9-1,13,3,4,3,1,Local,0.117647058823529,214,1819,Jim Jagielski
CVE-2000-1204,Not defined,NA,,2000-10-13,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"Vulnerability in the mod_vhost_alias virtual hosting module for Apache 1.3.9, 1.3.11 and 1.3.12 allows remote attackers to obtain the source code for CGI programs if the cgi-bin directory is under the document root",https://www.cvedetails.com/cve/CVE-2000-1204/,20020501,Yes. Fixed in Apache HTTP Server 1.3.14: http://httpd.apache.org/security/vulnerabilities_13.html,"A security problem for users of the mass virtual hosting module, mod_vhost_alias, causes the source to a CGI to be sent if the cgi-bin directory is under the document root. However, it is not normal to have your cgi-bin directory under a document root. 
[http://archive.apache.org/gnats/6684]",No,,,2000-10-13,78802fd943d27dc36a2f762ebf3a6c89a3db995f,modules/mappers/mod_rewrite.c,Restore functionality broken by the mod_rewrite security fix:,https://github.com/apache/httpd/commit/78802fd943d27dc36a2f762ebf3a6c89a3db995f,Tony Finch,fanf2,https://github.com/fanf2,PiBSD,2000-10-18,1,47,52,50,5,Global,0.078700994733762,538,6836,Roy T. Fielding
CVE-2000-1204,Not defined,NA,,2000-10-13,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"Vulnerability in the mod_vhost_alias virtual hosting module for Apache 1.3.9, 1.3.11 and 1.3.12 allows remote attackers to obtain the source code for CGI programs if the cgi-bin directory is under the document root",https://www.cvedetails.com/cve/CVE-2000-1204/,20020501,Yes. Fixed in Apache HTTP Server 1.3.14: http://httpd.apache.org/security/vulnerabilities_13.html,"A security problem for users of the mass virtual hosting module, mod_vhost_alias, causes the source to a CGI to be sent if the cgi-bin directory is under the document root. However, it is not normal to have your cgi-bin directory under a document root. 
[http://archive.apache.org/gnats/6684]",No,,,2000-10-13,78802fd943d27dc36a2f762ebf3a6c89a3db995f,modules/mappers/mod_rewrite.h,Restore functionality broken by the mod_rewrite security fix:,https://github.com/apache/httpd/commit/78802fd943d27dc36a2f762ebf3a6c89a3db995f,Tony Finch,fanf2,https://github.com/fanf2,PiBSD,2000-10-18,1,3,3,50,5,Global,0.015608740894901,15,961,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,79df332a2f94742754b9bdcfa4b78917ac07c5b0,CHANGES,"Whoh boy that's rough... We sometimes like to answer SIGHUP in the parent process, don't we?
  This -was- post-fork() in 1.3, but with the massive restructuring, we inadvertantly now whack the parent process.",https://github.com/apache/httpd/commit/79df332a2f94742754b9bdcfa4b78917ac07c5b0,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-2-27,309,4,4,4,13,Local,0.034518647007806,398,11530,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,79df332a2f94742754b9bdcfa4b78917ac07c5b0,modules/mappers/mod_rewrite.c,"Whoh boy that's rough... We sometimes like to answer SIGHUP in the parent process, don't we?
  This -was- post-fork() in 1.3, but with the massive restructuring, we inadvertantly now whack the parent process.",https://github.com/apache/httpd/commit/79df332a2f94742754b9bdcfa4b78917ac07c5b0,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-2-27,309,0,5,4,13,Local,0.039210789210789,314,8008,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,79df332a2f94742754b9bdcfa4b78917ac07c5b0,server/log.c,"Whoh boy that's rough... We sometimes like to answer SIGHUP in the parent process, don't we?
  This -was- post-fork() in 1.3, but with the massive restructuring, we inadvertantly now whack the parent process.",https://github.com/apache/httpd/commit/79df332a2f94742754b9bdcfa4b78917ac07c5b0,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-2-27,309,0,8,4,13,Local,0.038328729281768,111,2896,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,7a293327ddc3b48b35e8b9d18c063d7b24e0d0e2,modules/http/byterange_filter.c,* Silence compiler warning,https://github.com/apache/httpd/commit/7a293327ddc3b48b35e8b9d18c063d7b24e0d0e2,Ruediger Pluem,,,,2011-8-30,13,1,2,1,1,Local,0.116733755031627,203,1739,Jim Jagielski
CVE-2005-2728,,NA,DoS,2005-8-30,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,The byte-range filter in Apache 2.0 before 2.0.54 allows remote attackers to cause a denial of service (memory consumption) via an HTTP header with a large Range field.,https://www.cvedetails.com/cve/CVE-2005-2728/,20050829,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-2728 (cve.mitre.org)
Fix cases where the byterange filter would buffer responses into memory.  PR 29962.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-7-7,2005-10-14,7a7839aef41bf7bf38c248f9f294275e8cab0a4a,modules/http/byterange_filter.c,* modules/http/byterange_filter.c (ap_byterange_filter): No functional changes: reflow/reformat after r188797.,https://github.com/apache/httpd/commit/7a7839aef41bf7bf38c248f9f294275e8cab0a4a,Joe Orton,notroj,,Red Hat,2005-6-8,63,32,65,32,33,Local,0.224206349206349,113,504,Justin Erenkrantz
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,7aa452b84578d08c4906defbcd492c2bc1e87ad9,include/ap_regex.h,Correctly identify origin of util_pcre.c/ap_regex.h as pcreposix[.ch] and correct LICENSE/NOTICE to match.,https://github.com/apache/httpd/commit/7aa452b84578d08c4906defbcd492c2bc1e87ad9,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2018-2-21,9,6,7,65,13,Global,0.027777777777778,11,396,Joe Orton
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,7aa452b84578d08c4906defbcd492c2bc1e87ad9,LICENSE,Correctly identify origin of util_pcre.c/ap_regex.h as pcreposix[.ch] and correct LICENSE/NOTICE to match.,https://github.com/apache/httpd/commit/7aa452b84578d08c4906defbcd492c2bc1e87ad9,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2018-2-21,9,34,34,65,13,Global,0.15092936802974,203,1345,Bill Stoddard
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,7aa452b84578d08c4906defbcd492c2bc1e87ad9,NOTICE,Correctly identify origin of util_pcre.c/ap_regex.h as pcreposix[.ch] and correct LICENSE/NOTICE to match.,https://github.com/apache/httpd/commit/7aa452b84578d08c4906defbcd492c2bc1e87ad9,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2018-2-21,9,4,4,65,13,Global,0.222222222222222,12,54,Andre Malo
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,7aa452b84578d08c4906defbcd492c2bc1e87ad9,server/util_pcre.c,Correctly identify origin of util_pcre.c/ap_regex.h as pcreposix[.ch] and correct LICENSE/NOTICE to match.,https://github.com/apache/httpd/commit/7aa452b84578d08c4906defbcd492c2bc1e87ad9,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2018-2-21,9,21,33,65,13,Global,0.239420935412027,215,898,Stefan Fritsch
CVE-2003-0083,,NA,,2003-4-2,2017-10-10,5,None,Remote,Low,Not required,None,Partial,None,"Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.",https://www.cvedetails.com/cve/CVE-2003-0083/,20030210,Yes. Fixed in Apache HTTP Server 2.0.46 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"*) SECURITY: CVE-2003-0083 (cve.mitre.org)
 Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25. [Andrea Malo]",No,,2003-2-24,2004-4-2,7b1d2e3f234bb60948da4144e7bb4f7484e00511,CHANGES,"Minor MMN bump: Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25.
Obtained from: Patch in 1.3.25-dev by Martin",https://github.com/apache/httpd/commit/7b1d2e3f234bb60948da4144e7bb4f7484e00511,Andre Malo,,,,2003-3-7,1,6,6,114,26,Global,0.013902968863143,192,13810,Roy T. Fielding
CVE-2003-0083,,NA,,2003-4-2,2017-10-10,5,None,Remote,Low,Not required,None,Partial,None,"Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.",https://www.cvedetails.com/cve/CVE-2003-0083/,20030210,Yes. Fixed in Apache HTTP Server 2.0.46 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"*) SECURITY: CVE-2003-0083 (cve.mitre.org)
 Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25. [Andrea Malo]",No,,2003-2-24,2004-4-2,7b1d2e3f234bb60948da4144e7bb4f7484e00511,include/ap_mmn.h,"Minor MMN bump: Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25.
Obtained from: Patch in 1.3.25-dev by Martin",https://github.com/apache/httpd/commit/7b1d2e3f234bb60948da4144e7bb4f7484e00511,Andre Malo,,,,2003-3-7,1,4,6,114,26,Global,0.010666666666667,8,750,Roy T. Fielding
CVE-2003-0083,,NA,,2003-4-2,2017-10-10,5,None,Remote,Low,Not required,None,Partial,None,"Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.",https://www.cvedetails.com/cve/CVE-2003-0083/,20030210,Yes. Fixed in Apache HTTP Server 2.0.46 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"*) SECURITY: CVE-2003-0083 (cve.mitre.org)
 Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25. [Andrea Malo]",No,,2003-2-24,2004-4-2,7b1d2e3f234bb60948da4144e7bb4f7484e00511,include/httpd.h,"Minor MMN bump: Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25.
Obtained from: Patch in 1.3.25-dev by Martin",https://github.com/apache/httpd/commit/7b1d2e3f234bb60948da4144e7bb4f7484e00511,Andre Malo,,,,2003-3-7,1,8,8,114,26,Global,0.003064351378958,15,4895,Ryan Bloom
CVE-2003-0083,,NA,,2003-4-2,2017-10-10,5,None,Remote,Low,Not required,None,Partial,None,"Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.",https://www.cvedetails.com/cve/CVE-2003-0083/,20030210,Yes. Fixed in Apache HTTP Server 2.0.46 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"*) SECURITY: CVE-2003-0083 (cve.mitre.org)
 Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25. [Andrea Malo]",No,,2003-2-24,2004-4-2,7b1d2e3f234bb60948da4144e7bb4f7484e00511,modules/loggers/mod_log_config.c,"Minor MMN bump: Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25.
Obtained from: Patch in 1.3.25-dev by Martin",https://github.com/apache/httpd/commit/7b1d2e3f234bb60948da4144e7bb4f7484e00511,Andre Malo,,,,2003-3-7,1,31,53,114,26,Global,0.017301038062284,55,3179,Roy T. Fielding
CVE-2003-0083,,NA,,2003-4-2,2017-10-10,5,None,Remote,Low,Not required,None,Partial,None,"Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.",https://www.cvedetails.com/cve/CVE-2003-0083/,20030210,Yes. Fixed in Apache HTTP Server 2.0.46 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"*) SECURITY: CVE-2003-0083 (cve.mitre.org)
 Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25. [Andrea Malo]",No,,2003-2-24,2004-4-2,7b1d2e3f234bb60948da4144e7bb4f7484e00511,server/gen_test_char.c,"Minor MMN bump: Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25.
Obtained from: Patch in 1.3.25-dev by Martin",https://github.com/apache/httpd/commit/7b1d2e3f234bb60948da4144e7bb4f7484e00511,Andre Malo,,,,2003-3-7,1,13,15,114,26,Global,0.061594202898551,17,276,Roy T. Fielding
CVE-2003-0083,,NA,,2003-4-2,2017-10-10,5,None,Remote,Low,Not required,None,Partial,None,"Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.",https://www.cvedetails.com/cve/CVE-2003-0083/,20030210,Yes. Fixed in Apache HTTP Server 2.0.46 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"*) SECURITY: CVE-2003-0083 (cve.mitre.org)
 Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25. [Andrea Malo]",No,,2003-2-24,2004-4-2,7b1d2e3f234bb60948da4144e7bb4f7484e00511,server/util.c,"Minor MMN bump: Forward port: Escape special characters (especially control characters) in mod_log_config to make a clear distinction between client-supplied strings (with special characters) and server-side strings. This was already introduced in version 1.3.25.
Obtained from: Patch in 1.3.25-dev by Martin",https://github.com/apache/httpd/commit/7b1d2e3f234bb60948da4144e7bb4f7484e00511,Andre Malo,,,,2003-3-7,1,52,52,114,26,Global,0.009658379538544,54,5591,Roy T. Fielding
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,7b508e000f877f1e826b0d81af5b2c462af2d2d4,include/http_core.h,"Folding StrictWhitespace into the Strict ruleset of RFC7230, per dev@poll.
This choice is unanimous, although StrictURI (a different RFC) still hasn’t found absolute concensus.
An ap_mmn bump will follow (major, this removes a struct elt)",https://github.com/apache/httpd/commit/7b508e000f877f1e826b0d81af5b2c462af2d2d4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-29,60,0,5,8,28,Global,0.143526405451448,337,2348,Stefan Fritsch
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,7b508e000f877f1e826b0d81af5b2c462af2d2d4,server/core.c,"Folding StrictWhitespace into the Strict ruleset of RFC7230, per dev@poll.
This choice is unanimous, although StrictURI (a different RFC) still hasn’t found absolute concensus.
An ap_mmn bump will follow (major, this removes a struct elt)",https://github.com/apache/httpd/commit/7b508e000f877f1e826b0d81af5b2c462af2d2d4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-29,60,0,13,8,28,Global,0.155894865668162,2675,17159,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,7b508e000f877f1e826b0d81af5b2c462af2d2d4,server/protocol.c,"Folding StrictWhitespace into the Strict ruleset of RFC7230, per dev@poll.
This choice is unanimous, although StrictURI (a different RFC) still hasn’t found absolute concensus.
An ap_mmn bump will follow (major, this removes a struct elt)",https://github.com/apache/httpd/commit/7b508e000f877f1e826b0d81af5b2c462af2d2d4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-29,60,8,18,8,28,Global,0.202780125857049,2159,10647,Ryan Bloom
CVE-2017-7668,20,NA,,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"The HTTP strict parsing changes added in Apache httpd 2.2.32 and 2.4.24 introduced a bug in token list parsing, which allows ap_find_token() to search past the end of its input string. By maliciously crafting a sequence of request headers, an attacker may be able to cause a segmentation fault, or to force ap_find_token() to return an incorrect value.",https://www.cvedetails.com/cve/CVE-2017-7668/,20170411,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-7668 (cve.mitre.org)
The HTTP strict parsing changes added in 2.2.32 and 2.4.24 introduced a bug in token list parsing, which allows ap_find_token() to search past the end of its input string. By maliciously crafting a sequence of request headers, an attacker may be able to cause a segmentation fault, or to force ap_find_token() to return an incorrect value.", No,2017-5-6,2017-6-19,2017-7-11,7b8dc026874c2c744b9ee043bf1b881e0f05cae7,server/util.c,util.c: revert r1799375 during veto discussion,https://github.com/apache/httpd/commit/7b8dc026874c2c744b9ee043bf1b881e0f05cae7,Jacob Champion,jchampio,https://github.com/jchampio,Pivotal Software,2017-6-21,27,4,8,4,4,Local,0.024589272114025,226,9191,Roy T. Fielding
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,7cbdede072eb1b7a15f89cbaec8cd1c8130bc16d,server/mpm/winnt/child.c,"This was an identity... sort of silly really.
",https://github.com/apache/httpd/commit/7cbdede072eb1b7a15f89cbaec8cd1c8130bc16d,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-8-4,13,0,3,0,3,Local,1,1058,1058,William A. Rowe Jr
CVE-2012-0053,264,NA,+Info,2012-1-27,2018-1-17,4.3,None,Remote,Medium,Not required,Partial,None,None,"protocol.c in the Apache HTTP Server 2.2.x through 2.2.21 does not properly restrict header information during construction of Bad Request (aka 400) error documents, which allows remote attackers to obtain the values of HTTPOnly cookies via vectors involving a (1) long or (2) malformed header in conjunction with crafted web script.",https://www.cvedetails.com/cve/CVE-2012-0053/,20111207,Yes. Fixed in Apache HTTP Server 2.2.22: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2012-0053 (cve.mitre.org)
Fix an issue in error responses that could expose ""httpOnly"" cookies when no custom ErrorDocument is specified for status code 400. [Eric Covener]",No,2012-1-15,2012-1-23,2012-1-31,7e75ec94c9488baf1faa2bb7e1152cb42fba609a,server/protocol.c,s/insure/ensure/,https://github.com/apache/httpd/commit/7e75ec94c9488baf1faa2bb7e1152cb42fba609a,Jeff Trawick,trawick,https://github.com/trawick,Apache,2012-1-29,7,3,6,3,3,Local,0.023221277170244,172,7407,Ryan Bloom
CVE-2015-0228,20,NA,DoS,2015-3-7,2018-1-4,5,None,Remote,Low,Not required,None,None,Partial,The lua_websocket_read function in lua_request.c in the mod_lua module in the Apache HTTP Server through 2.4.12 allows remote attackers to cause a denial of service (child-process crash) by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function.,https://www.cvedetails.com/cve/CVE-2015-0228/,20141118,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-0228 (cve.mitre.org)
mod_lua: A maliciously crafted websockets PING after a script calls r:wsupgrade() can cause a child process crash. 
[Edward Lu <Chaosed0 gmail.com>]",No,2015-1-28,2015-2-4,2015-7-15,7eb5fc602fc78ca8e90408293c0a03b6094b4a35,modules/lua/lua_request.c,followup to r1657261 whitespace only -- reindent body of while loop. (no change under svn diff -x-w),https://github.com/apache/httpd/commit/7eb5fc602fc78ca8e90408293c0a03b6094b4a35,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2015-2-4,1,120,240,120,120,Local,0.072819168850618,389,5342,Daniel Gruno
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,Apache.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,0.595132743362832,269,452,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,support/ab.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,0.581749049429658,153,263,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,support/abs.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,1,145,145,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,support/htdbm.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,1,127,127,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,support/htdigest.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,0.508771929824561,145,285,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,support/htpasswd.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,0.409230769230769,133,325,Bill Stoddard
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,support/logresolve.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,0.529182879377432,136,257,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,support/rotatelogs.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,0.522267206477733,129,247,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,support/win32/ApacheMonitor.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,0.446153846153846,464,1040,Cliff Woolley
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,7f0feacf1fb55441daf11ec4296b7da676d9c1f4,support/win32/wintty.dsp,Update support utility filenames to reflect .exe extensions for the newest apr/build/win32ver.awk script changes.,https://github.com/apache/httpd/commit/7f0feacf1fb55441daf11ec4296b7da676d9c1f4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,20,20,Local,1,159,159,William A. Rowe Jr
CVE-2003-0460,,NA,DoS,2003-8-27,2008-9-5,5,None,Remote,Low,Not required,None,None,Partial,"The rotatelogs program on Apache before 1.3.28, for Windows and OS/2 systems, does not properly ignore certain control characters that are received over the pipe, which could allow remote attackers to cause a denial of service.",https://www.cvedetails.com/cve/CVE-2003-0460/,20030626,Yes. Fixed in Apache HTTP Server 1.3.28: http://httpd.apache.org/security/vulnerabilities_13.html ," *) SECURITY: CVE-2003-0460 (cve.mitre.org)
     Fix the rotatelogs support program on Win32 and OS/2 to ignore special control characters received over the pipe. Previously
     such characters could cause rotatelogs to quit logging and exit. [André Malo]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]",No,2003-7-4,2003-7-18,2003-7-18,7f615307b90aab5ed20ff618af0bb06907b5a409,modules/mappers/mod_rewrite.c,"optimization, rewrite the do_expand function in order to:
  + give it a better interface
  + get a rid of most of the fixed stack buffers and then
  + no longer limit rewritten uris	 expanded variables etc to 2k
  + make it better readable and understandable at all.
This is a two-tiered commit for better diffs.",https://github.com/apache/httpd/commit/7f615307b90aab5ed20ff618af0bb06907b5a409,Andre Malo,,,,2003-7-17,2,210,238,219,30,Global,0.139040619723905,1400,10069,Roy T. Fielding
CVE-2003-0460,,NA,DoS,2003-8-27,2008-9-5,5,None,Remote,Low,Not required,None,None,Partial,"The rotatelogs program on Apache before 1.3.28, for Windows and OS/2 systems, does not properly ignore certain control characters that are received over the pipe, which could allow remote attackers to cause a denial of service.",https://www.cvedetails.com/cve/CVE-2003-0460/,20030626,Yes. Fixed in Apache HTTP Server 1.3.28: http://httpd.apache.org/security/vulnerabilities_13.html ," *) SECURITY: CVE-2003-0460 (cve.mitre.org)
     Fix the rotatelogs support program on Win32 and OS/2 to ignore special control characters received over the pipe. Previously
     such characters could cause rotatelogs to quit logging and exit. [André Malo]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]",No,2003-7-4,2003-7-18,2003-7-18,7f615307b90aab5ed20ff618af0bb06907b5a409,modules/mappers/mod_rewrite.h,"optimization, rewrite the do_expand function in order to:
  + give it a better interface
  + get a rid of most of the fixed stack buffers and then
  + no longer limit rewritten uris	 expanded variables etc to 2k
  + make it better readable and understandable at all.
This is a two-tiered commit for better diffs.",https://github.com/apache/httpd/commit/7f615307b90aab5ed20ff618af0bb06907b5a409,Andre Malo,,,,2003-7-17,2,9,11,219,30,Global,0.031496062992126,36,1143,Roy T. Fielding
CVE-2014-0098,20,NA,DoS,2014-3-18,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,The log_cookie function in mod_log_config.c in the mod_log_config module in the Apache HTTP Server before 2.4.8 allows remote attackers to cause a denial of service (segmentation fault and daemon crash) via a crafted cookie that is not properly handled during truncation.,https://www.cvedetails.com/cve/CVE-2014-0098/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.27, 2.4.9: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0098 (cve.mitre.org)
Clean up cookie logging with fewer redundant string parsing passes. Log only cookies with a value assignment. Prevents segfaults when logging truncated cookies.
[William Rowe, Ruediger Pluem, Jim Jagielski]",No,2014-2-25,2014-3-17,2014-3-26,7fbda24a4f8fc76f5baf32d412cfc24c71ab99e2,modules/loggers/mod_log_config.c,ensure cookies have name/value,https://github.com/apache/httpd/commit/7fbda24a4f8fc76f5baf32d412cfc24c71ab99e2,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2014-3-5,6,3,5,3,2,Local,0.02172338884866,90,4143,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,812d45966b320c42f28392368252eeed6d874940,modules/http/byterange_filter.c,* The first condition is not needed as pos >=0. If the first one is true the second one is true either. If the second one is false the first one is false as well.,https://github.com/apache/httpd/commit/812d45966b320c42f28392368252eeed6d874940,Ruediger Pluem,,,,2011-8-25,13,2,4,2,2,Local,0.133116883116883,123,924,Justin Erenkrantz
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,81439676743ce7930db02f06b87b2069b9fae155,modules/http/byterange_filter.c,"Every 32 ranges, pass the prepared ranges down the filter chain.",https://github.com/apache/httpd/commit/81439676743ce7930db02f06b87b2069b9fae155,Stefan Fritsch,,,GeNUA mbH,2011-8-28,13,6,6,6,0,Local,0.16066154754873,272,1693,Jim Jagielski
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,81d31392589bb81f57a979cd0502d94de8788289,libhttpd.dsp,Update libhttpd.dll filenames to reflect the .dll extension for the newest apr/build/win32ver.awk script changes.  Submitted by Mladen Turk.,https://github.com/apache/httpd/commit/81d31392589bb81f57a979cd0502d94de8788289,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,2,4,2,2,Local,0.979473684210526,1861,1900,William A. Rowe Jr
CVE-2013-1862,310,NA,Exec Code,2013-6-10,2017-9-18,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"mod_rewrite.c in the mod_rewrite module in the Apache HTTP Server 2.2.x before 2.2.25 writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to execute arbitrary commands via an HTTP request containing an escape sequence for a terminal emulator.",https://www.cvedetails.com/cve/CVE-2013-1862/,20130219,Yes. Fixed in Apache HTTP Server 2.2.25. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2013-1862 (cve.mitre.org)
mod_rewrite: Ensure that client data written to the RewriteLog is escaped to prevent terminal escape sequences from entering the log file.  [Eric Covener, Jeff Trawick, Joe Orton]",No,2013-3-13,2013-4-19,2013-7-22,8206d63ddfe5fbd4bf3d15ae9c11ab7a26e8ca4a,server/util.c,Be more clever when allocating memory for log item to be escaped. This should save about 70-100 bytes in the request pool with the default config.,https://github.com/apache/httpd/commit/8206d63ddfe5fbd4bf3d15ae9c11ab7a26e8ca4a,Christophe Jaillet,,,,2013-3-27,19,15,16,15,1,Local,0.003250812703176,26,7998,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,8236257da1d621ad15f62bc5aeb112e97a938ea7,modules/http/byterange_filter.c,Final tuneage,https://github.com/apache/httpd/commit/8236257da1d621ad15f62bc5aeb112e97a938ea7,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-26,13,1,2,1,1,Local,0.410904255319149,618,1504,Jim Jagielski
CVE-2014-0098,20,NA,DoS,2014-3-18,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,The log_cookie function in mod_log_config.c in the mod_log_config module in the Apache HTTP Server before 2.4.8 allows remote attackers to cause a denial of service (segmentation fault and daemon crash) via a crafted cookie that is not properly handled during truncation.,https://www.cvedetails.com/cve/CVE-2014-0098/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.27, 2.4.9: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0098 (cve.mitre.org)
Clean up cookie logging with fewer redundant string parsing passes. Log only cookies with a value assignment. Prevents segfaults when logging truncated cookies.
[William Rowe, Ruediger Pluem, Jim Jagielski]",No,2014-2-25,2014-3-17,2014-3-26,8255e22e35392afd4152a80253236c2d5096201a,CHANGES,"CVE-2014-0098 (reported by Rainer Canavan <rainer-apache 7val com>)
Segfaults w/ truncated cookie logging.
Clean up the cookie logging parser to recognize only the cookie=value pairs, not valueless cookies.  This refactors multiple passes over the same string buffer into a single pass parser.
Submitted by: wrowe
Reviewed by: rpluem, jim ",https://github.com/apache/httpd/commit/8255e22e35392afd4152a80253236c2d5096201a,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2014-3-7,6,4,4,21,6,Local,0.057928549724357,2669,46074,Jim Jagielski
CVE-2014-0098,20,NA,DoS,2014-3-18,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,The log_cookie function in mod_log_config.c in the mod_log_config module in the Apache HTTP Server before 2.4.8 allows remote attackers to cause a denial of service (segmentation fault and daemon crash) via a crafted cookie that is not properly handled during truncation.,https://www.cvedetails.com/cve/CVE-2014-0098/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.27, 2.4.9: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0098 (cve.mitre.org)
Clean up cookie logging with fewer redundant string parsing passes. Log only cookies with a value assignment. Prevents segfaults when logging truncated cookies.
[William Rowe, Ruediger Pluem, Jim Jagielski]",No,2014-2-25,2014-3-17,2014-3-26,8255e22e35392afd4152a80253236c2d5096201a,modules/loggers/mod_log_config.c,"CVE-2014-0098 (reported by Rainer Canavan <rainer-apache 7val com>)
Segfaults w/ truncated cookie logging.
Clean up the cookie logging parser to recognize only the cookie=value pairs, not valueless cookies.  This refactors multiple passes over the same string buffer into a single pass parser.
Submitted by: wrowe
Reviewed by: rpluem, jim ",https://github.com/apache/httpd/commit/8255e22e35392afd4152a80253236c2d5096201a,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2014-3-7,6,17,23,21,6,Local,0.089187245264925,372,4171,Roy T. Fielding
CVE-2014-0118,399,NA,DoS,2014-7-20,2017-12-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The deflate_in_filter function in mod_deflate.c in the mod_deflate module in the Apache HTTP Server before 2.4.10, when request body decompression is enabled, allows remote attackers to cause a denial of service (resource consumption) via crafted request data that decompresses to a much larger size.",https://www.cvedetails.com/cve/CVE-2014-0118/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0118 (cve.mitre.org)
mod_deflate: The DEFLATE input filter (inflates request bodies) now limits the length and compression ratio of inflated request bodies to avoid denial of sevice via highly compressed bodies. See directives DeflateInflateLimitRequestBody, DeflateInflateRatioLimit, and DeflateInflateRatioBurst. [Yann Ylavic, Eric Covener]",No,2014-2-19,2014-7-14,2014-9-3,83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,docs/log-message-tags/next-number,Add missing APLOGNO + fix a typo in a comment,https://github.com/apache/httpd/commit/83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,Christophe Jaillet,,,,2014-7-14,1,1,2,7,7,Global,0.034042553191489,8,235,Jim Jagielski
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,docs/log-message-tags/next-number,Add missing APLOGNO + fix a typo in a comment,https://github.com/apache/httpd/commit/83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,Christophe Jaillet,,,,2014-7-14,278,1,2,7,7,Global,0.034042553191489,8,235,Jim Jagielski
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,modules/filters/mod_deflate.c,Add missing APLOGNO + fix a typo in a comment,https://github.com/apache/httpd/commit/83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,Christophe Jaillet,,,,2014-7-14,278,5,10,7,7,Global,0.002130833155764,10,4693,Justin Erenkrantz
CVE-2014-0118,399,NA,DoS,2014-7-20,2017-12-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The deflate_in_filter function in mod_deflate.c in the mod_deflate module in the Apache HTTP Server before 2.4.10, when request body decompression is enabled, allows remote attackers to cause a denial of service (resource consumption) via crafted request data that decompresses to a much larger size.",https://www.cvedetails.com/cve/CVE-2014-0118/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0118 (cve.mitre.org)
mod_deflate: The DEFLATE input filter (inflates request bodies) now limits the length and compression ratio of inflated request bodies to avoid denial of sevice via highly compressed bodies. See directives DeflateInflateLimitRequestBody, DeflateInflateRatioLimit, and DeflateInflateRatioBurst. [Yann Ylavic, Eric Covener]",No,2014-2-19,2014-7-14,2014-9-3,83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,modules/filters/mod_deflate.c,Add missing APLOGNO + fix a typo in a comment,https://github.com/apache/httpd/commit/83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,Christophe Jaillet,,,,2014-7-14,1,5,10,7,7,Global,0.002130833155764,10,4693,Justin Erenkrantz
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,modules/generators/mod_cgid.c,Add missing APLOGNO + fix a typo in a comment,https://github.com/apache/httpd/commit/83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,Christophe Jaillet,,,,2014-7-14,278,1,2,7,7,Global,0.000307597662258,2,6502,Ryan Bloom
CVE-2014-0118,399,NA,DoS,2014-7-20,2017-12-8,4.3,None,Remote,Medium,Not required,None,None,Partial,"The deflate_in_filter function in mod_deflate.c in the mod_deflate module in the Apache HTTP Server before 2.4.10, when request body decompression is enabled, allows remote attackers to cause a denial of service (resource consumption) via crafted request data that decompresses to a much larger size.",https://www.cvedetails.com/cve/CVE-2014-0118/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0118 (cve.mitre.org)
mod_deflate: The DEFLATE input filter (inflates request bodies) now limits the length and compression ratio of inflated request bodies to avoid denial of sevice via highly compressed bodies. See directives DeflateInflateLimitRequestBody, DeflateInflateRatioLimit, and DeflateInflateRatioBurst. [Yann Ylavic, Eric Covener]",No,2014-2-19,2014-7-14,2014-9-3,83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,modules/generators/mod_cgid.c,Add missing APLOGNO + fix a typo in a comment,https://github.com/apache/httpd/commit/83d7cd0f04de1d493a8a33ad61c9fb78ce11377a,Christophe Jaillet,,,,2014-7-14,1,1,2,7,7,Global,0.000307597662258,2,6502,Ryan Bloom
CVE-2008-2168,79,NA,XSS,2008-6-13,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in Apache 2.2.6 and earlier allows remote attackers to inject arbitrary web script or HTML via UTF-7 encoded URLs that are not properly handled when displaying the 403 Forbidden error page.,https://www.cvedetails.com/cve/CVE-2008-2168/,20080513,"The Apache security team state that this issue is due to web browsers that are violating RFC2616 and is not a flaw in the Apache HTTPD Server. 

This is actually a flaw in browsers that do not derive the response character set as required by RFC 2616. This does not affect the default configuration of Apache httpd in Red Hat products and will only affect customers who have removed the ""AddDefaultCharset"" directive. https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2008-2168 ",,No,,,,843bc0eebe984216b90427c75f0d8d3af4a6b1c4,CHANGES,"* Set character set for HTML outputs generated by mod_ldap, mod_proxy_balancer, mod_proxy_ftp, mod_info, mod_dav without a character set to ISO-8859-1.
Submitted by: jorton",https://github.com/apache/httpd/commit/843bc0eebe984216b90427c75f0d8d3af4a6b1c4,Ruediger Pluem,,,,2007-12-24,1,16,16,21,5,Local,0.023530948028206,901,38290,Jim Jagielski
CVE-2008-2168,79,NA,XSS,2008-6-13,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in Apache 2.2.6 and earlier allows remote attackers to inject arbitrary web script or HTML via UTF-7 encoded URLs that are not properly handled when displaying the 403 Forbidden error page.,https://www.cvedetails.com/cve/CVE-2008-2168/,20080513,"The Apache security team state that this issue is due to web browsers that are violating RFC2616 and is not a flaw in the Apache HTTPD Server. 

This is actually a flaw in browsers that do not derive the response character set as required by RFC 2616. This does not affect the default configuration of Apache httpd in Red Hat products and will only affect customers who have removed the ""AddDefaultCharset"" directive. https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2008-2168 ",,No,,,,843bc0eebe984216b90427c75f0d8d3af4a6b1c4,modules/dav/main/mod_dav.c,"* Set character set for HTML outputs generated by mod_ldap, mod_proxy_balancer, mod_proxy_ftp, mod_info, mod_dav without a character set to ISO-8859-1.
Submitted by: jorton",https://github.com/apache/httpd/commit/843bc0eebe984216b90427c75f0d8d3af4a6b1c4,Ruediger Pluem,,,,2007-12-24,1,1,2,21,5,Local,0.00032525613921,4,12298,Greg Stein
CVE-2008-2168,79,NA,XSS,2008-6-13,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in Apache 2.2.6 and earlier allows remote attackers to inject arbitrary web script or HTML via UTF-7 encoded URLs that are not properly handled when displaying the 403 Forbidden error page.,https://www.cvedetails.com/cve/CVE-2008-2168/,20080513,"The Apache security team state that this issue is due to web browsers that are violating RFC2616 and is not a flaw in the Apache HTTPD Server. 

This is actually a flaw in browsers that do not derive the response character set as required by RFC 2616. This does not affect the default configuration of Apache httpd in Red Hat products and will only affect customers who have removed the ""AddDefaultCharset"" directive. https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2008-2168 ",,No,,,,843bc0eebe984216b90427c75f0d8d3af4a6b1c4,modules/generators/mod_info.c,"* Set character set for HTML outputs generated by mod_ldap, mod_proxy_balancer, mod_proxy_ftp, mod_info, mod_dav without a character set to ISO-8859-1.
Submitted by: jorton",https://github.com/apache/httpd/commit/843bc0eebe984216b90427c75f0d8d3af4a6b1c4,Ruediger Pluem,,,,2007-12-24,1,1,2,21,5,Local,0.000646412411118,2,3094,Paul Querna
CVE-2008-2168,79,NA,XSS,2008-6-13,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in Apache 2.2.6 and earlier allows remote attackers to inject arbitrary web script or HTML via UTF-7 encoded URLs that are not properly handled when displaying the 403 Forbidden error page.,https://www.cvedetails.com/cve/CVE-2008-2168/,20080513,"The Apache security team state that this issue is due to web browsers that are violating RFC2616 and is not a flaw in the Apache HTTPD Server. 

This is actually a flaw in browsers that do not derive the response character set as required by RFC 2616. This does not affect the default configuration of Apache httpd in Red Hat products and will only affect customers who have removed the ""AddDefaultCharset"" directive. https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2008-2168 ",,No,,,,843bc0eebe984216b90427c75f0d8d3af4a6b1c4,modules/ldap/util_ldap.c,"* Set character set for HTML outputs generated by mod_ldap, mod_proxy_balancer, mod_proxy_ftp, mod_info, mod_dav without a character set to ISO-8859-1.
Submitted by: jorton",https://github.com/apache/httpd/commit/843bc0eebe984216b90427c75f0d8d3af4a6b1c4,Ruediger Pluem,,,,2007-12-24,1,1,2,21,5,Local,0.040934917355372,317,7744,Bradley Nicholes
CVE-2008-2168,79,NA,XSS,2008-6-13,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in Apache 2.2.6 and earlier allows remote attackers to inject arbitrary web script or HTML via UTF-7 encoded URLs that are not properly handled when displaying the 403 Forbidden error page.,https://www.cvedetails.com/cve/CVE-2008-2168/,20080513,"The Apache security team state that this issue is due to web browsers that are violating RFC2616 and is not a flaw in the Apache HTTPD Server. 

This is actually a flaw in browsers that do not derive the response character set as required by RFC 2616. This does not affect the default configuration of Apache httpd in Red Hat products and will only affect customers who have removed the ""AddDefaultCharset"" directive. https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2008-2168 ",,No,,,,843bc0eebe984216b90427c75f0d8d3af4a6b1c4,modules/proxy/mod_proxy_balancer.c,"* Set character set for HTML outputs generated by mod_ldap, mod_proxy_balancer, mod_proxy_ftp, mod_info, mod_dav without a character set to ISO-8859-1.
Submitted by: jorton",https://github.com/apache/httpd/commit/843bc0eebe984216b90427c75f0d8d3af4a6b1c4,Ruediger Pluem,,,,2007-12-24,1,1,2,21,5,Local,0.044535519125683,163,3660,Jim Jagielski
CVE-2008-2168,79,NA,XSS,2008-6-13,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in Apache 2.2.6 and earlier allows remote attackers to inject arbitrary web script or HTML via UTF-7 encoded URLs that are not properly handled when displaying the 403 Forbidden error page.,https://www.cvedetails.com/cve/CVE-2008-2168/,20080513,"The Apache security team state that this issue is due to web browsers that are violating RFC2616 and is not a flaw in the Apache HTTPD Server. 

This is actually a flaw in browsers that do not derive the response character set as required by RFC 2616. This does not affect the default configuration of Apache httpd in Red Hat products and will only affect customers who have removed the ""AddDefaultCharset"" directive. https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2008-2168 ",,No,,,,843bc0eebe984216b90427c75f0d8d3af4a6b1c4,modules/proxy/mod_proxy_ftp.c,"* Set character set for HTML outputs generated by mod_ldap, mod_proxy_balancer, mod_proxy_ftp, mod_info, mod_dav without a character set to ISO-8859-1.
Submitted by: jorton",https://github.com/apache/httpd/commit/843bc0eebe984216b90427c75f0d8d3af4a6b1c4,Ruediger Pluem,,,,2007-12-24,1,1,2,21,5,Local,0.00025320729237,3,11848,Martin Kraemer
CVE-2002-1592,Not defined,NA,+Info,2002-5-6,2008-9-5,5,None,Remote,Low,Not required,Partial,None,None,"The ap_log_rerror function in Apache 2.0 through 2.035, when a CGI application encounters an error, sends error messages to the client that include the full path for the server, which allows remote attackers to obtain sensitive information

Added the APLOG_TOCLIENT flag to ap_log_rerror() to explicitly tell the server that warning messages should be sent to the client in addition to being recorded in the error log.
Prior to this change, ap_log_rerror() always sent warning messages to the client. In one case, a faulty CGI script caused the server to send a warning message to the client that contained the full path to the CGI script. This could be considered a minor security exposure. [Bill Stoddard] (http://archive.apache.org/dist/httpd/CHANGES_2.0)",https://www.cvedetails.com/cve/CVE-2002-1592/,20050313,Yes. Fixed in Apache HTTP Server 2.0.36: http://httpd.apache.org/security/vulnerabilities_20.html ,"In some cases warning messages could get returned to end users in addition to being recorded in the error log. This could reveal the path to a CGI script for example, a minor security exposure.",No,,2002-4-22,2002-5-8,8512336c571a7c692d7dfc82f80b0785d51dc42c,modules/arch/win32/mod_win32.c,Respect the process_cgi argument,https://github.com/apache/httpd/commit/8512336c571a7c692d7dfc82f80b0785d51dc42c,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-4-14,9,24,46,24,22,Local,0.818064516129032,634,775,William A. Rowe Jr
CVE-2004-0488,,NA,Exec Code Overflow,2004-7-7,2017-10-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Stack-based buffer overflow in the ssl_util_uuencode_binary function in ssl_util.c for Apache mod_ssl, when mod_ssl is configured to trust the issuing CA, may allow remote attackers to execute arbitrary code via a client certificate with a long subject DN.",https://www.cvedetails.com/cve/CVE-2004-0488/,20040524,Yes. Fixed in Apache HTTP Server 2.0.50: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0488 (cve.mitre.org)
mod_ssl: Fix a buffer overflow in the FakeBasicAuth code for a (trusted) client certificate subject DN which exceeds 6K in length.
     [Joe Orton]",No ,,2004-5-17,2004-6-1,85b5ed49abb27791a98e8d51c1f4e8343fabce33,modules/ssl/ssl_private.h,"* modules/ssl/ssl_util.c, modules/ssl/ssl_private.h: Remove unused functions ssl_util_strupper, ssl_util_ptxtstub, and ssl_util_uuencode*.",https://github.com/apache/httpd/commit/85b5ed49abb27791a98e8d51c1f4e8343fabce33,Joe Orton,notroj,,Red Hat,2004-5-25,1,0,4,0,105,Global,0.981538461538462,638,650,Joe Orton
CVE-2004-0488,,NA,Exec Code Overflow,2004-7-7,2017-10-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Stack-based buffer overflow in the ssl_util_uuencode_binary function in ssl_util.c for Apache mod_ssl, when mod_ssl is configured to trust the issuing CA, may allow remote attackers to execute arbitrary code via a client certificate with a long subject DN.",https://www.cvedetails.com/cve/CVE-2004-0488/,20040524,Yes. Fixed in Apache HTTP Server 2.0.50: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0488 (cve.mitre.org)
mod_ssl: Fix a buffer overflow in the FakeBasicAuth code for a (trusted) client certificate subject DN which exceeds 6K in length.
     [Joe Orton]",No ,,2004-5-17,2004-6-1,85b5ed49abb27791a98e8d51c1f4e8343fabce33,modules/ssl/ssl_util.c,"* modules/ssl/ssl_util.c, modules/ssl/ssl_private.h: Remove unused functions ssl_util_strupper, ssl_util_ptxtstub, and ssl_util_uuencode*.",https://github.com/apache/httpd/commit/85b5ed49abb27791a98e8d51c1f4e8343fabce33,Joe Orton,notroj,,Red Hat,2004-5-25,1,0,101,0,105,Global,0.076079005120702,104,1367,Ralf S. Engelschall
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,8690cb102ca9d78237c413e9d77b173fa5cc6d58,modules/http/byterange_filter.c,Optimize... and break if we get eg 200-100,https://github.com/apache/httpd/commit/8690cb102ca9d78237c413e9d77b173fa5cc6d58,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-25,13,4,5,4,1,Local,0.311764705882353,318,1020,Justin Erenkrantz
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,875078241d0f34cbdd0aee8afb9232ecedc01b60,docs/manual/mod/core.html.en,simple doc for MaxRanges.,https://github.com/apache/httpd/commit/875078241d0f34cbdd0aee8afb9232ecedc01b60,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2011-8-28,13,19,19,37,0,Local,0.015404760070862,200,12983,Andre Malo
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,875078241d0f34cbdd0aee8afb9232ecedc01b60,docs/manual/mod/core.xml,simple doc for MaxRanges.,https://github.com/apache/httpd/commit/875078241d0f34cbdd0aee8afb9232ecedc01b60,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2011-8-28,13,19,19,37,0,Local,0.043148263672281,415,9618,Joshua Slive
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,8879d69cfb2cb6acabdb89e3c6eb5db3e1c831cb,modules/metadata/mod_cern_meta.c,"Get mod_cern_meta to work on Windows. The problem was in the ""skip leading slash"" logic, which is inheriently broken on Windows because full Windows filenames begin with a drive letter or UNC path.",https://github.com/apache/httpd/commit/8879d69cfb2cb6acabdb89e3c6eb5db3e1c831cb,Bill Stoddard,,,IBM,2001-5-7,16,5,9,5,4,Local,0.046676096181047,33,707,Roy T. Fielding
CVE-2005-2728,,NA,DoS,2005-8-30,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,The byte-range filter in Apache 2.0 before 2.0.54 allows remote attackers to cause a denial of service (memory consumption) via an HTTP header with a large Range field.,https://www.cvedetails.com/cve/CVE-2005-2728/,20050829,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-2728 (cve.mitre.org)
Fix cases where the byterange filter would buffer responses into memory.  PR 29962.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-7-7,2005-10-14,88bad8542fee8ae116d0a6bd65ac53a552081b9a,modules/http/byterange_filter.c,* modules/http/byterange_filter.c (ap_byterange_filter): Update some comments.,https://github.com/apache/httpd/commit/88bad8542fee8ae116d0a6bd65ac53a552081b9a,Joe Orton,notroj,,Red Hat,2005-8-9,63,7,16,7,9,Local,0.248076923076923,129,520,Justin Erenkrantz
CVE-2003-0020,,NA,,2003-3-18,2017-10-9,5,None,Remote,Low,Not required,None,Partial,None,"Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.",https://www.cvedetails.com/cve/CVE-2003-0020/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49 and 1.3.31 http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"SECURITY: CVE-2003-0020 (cve.mitre.org)
     Escape arbitrary data before writing into the errorlog. Unescaped
     errorlogs are still possible using the compile time switch
     ""-DAP_UNSAFE_ERROR_LOG_UNESCAPED"".  [Geoffrey Young, André Malo]",No,,2003-2-24,2004-4-19,88f261355a83c28097a18f9b15d92196ec290def,CHANGES,SECURITY [CAN-2003-0020]: escape arbitrary data before writing into the errorlog.,https://github.com/apache/httpd/commit/88f261355a83c28097a18f9b15d92196ec290def#diff-92ab18e3fef9a16c6986970b537dd81f,Andre Malo,,,,2003-11-24,58,3,3,89,6,Global,0.035091950557733,582,16585,Roy T. Fielding
CVE-2003-0020,,NA,,2003-3-18,2017-10-9,5,None,Remote,Low,Not required,None,Partial,None,"Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.",https://www.cvedetails.com/cve/CVE-2003-0020/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49 and 1.3.31 http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"SECURITY: CVE-2003-0020 (cve.mitre.org)
     Escape arbitrary data before writing into the errorlog. Unescaped
     errorlogs are still possible using the compile time switch
     ""-DAP_UNSAFE_ERROR_LOG_UNESCAPED"".  [Geoffrey Young, André Malo]",No,,2003-2-24,2004-4-19,88f261355a83c28097a18f9b15d92196ec290def,include/ap_mmn.h,SECURITY [CAN-2003-0020]: escape arbitrary data before writing into the errorlog.,https://github.com/apache/httpd/commit/88f261355a83c28097a18f9b15d92196ec290def#diff-92ab18e3fef9a16c6986970b537dd81f,Andre Malo,,,,2003-11-24,58,2,3,89,6,Global,0.030065359477124,23,765,Roy T. Fielding
CVE-2003-0020,,NA,,2003-3-18,2017-10-9,5,None,Remote,Low,Not required,None,Partial,None,"Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.",https://www.cvedetails.com/cve/CVE-2003-0020/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49 and 1.3.31 http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"SECURITY: CVE-2003-0020 (cve.mitre.org)
     Escape arbitrary data before writing into the errorlog. Unescaped
     errorlogs are still possible using the compile time switch
     ""-DAP_UNSAFE_ERROR_LOG_UNESCAPED"".  [Geoffrey Young, André Malo]",No,,2003-2-24,2004-4-19,88f261355a83c28097a18f9b15d92196ec290def,include/httpd.h,SECURITY [CAN-2003-0020]: escape arbitrary data before writing into the errorlog.,https://github.com/apache/httpd/commit/88f261355a83c28097a18f9b15d92196ec290def#diff-92ab18e3fef9a16c6986970b537dd81f,Andre Malo,,,,2003-11-24,58,11,12,89,6,Global,0.009710702002832,48,4943,Ryan Bloom
CVE-2003-0020,,NA,,2003-3-18,2017-10-9,5,None,Remote,Low,Not required,None,Partial,None,"Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.",https://www.cvedetails.com/cve/CVE-2003-0020/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49 and 1.3.31 http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"SECURITY: CVE-2003-0020 (cve.mitre.org)
     Escape arbitrary data before writing into the errorlog. Unescaped
     errorlogs are still possible using the compile time switch
     ""-DAP_UNSAFE_ERROR_LOG_UNESCAPED"".  [Geoffrey Young, André Malo]",No,,2003-2-24,2004-4-19,88f261355a83c28097a18f9b15d92196ec290def,server/log.c,SECURITY [CAN-2003-0020]: escape arbitrary data before writing into the errorlog.,https://github.com/apache/httpd/commit/88f261355a83c28097a18f9b15d92196ec290def#diff-92ab18e3fef9a16c6986970b537dd81f,Andre Malo,,,,2003-11-24,58,9,13,89,6,Global,0.004519433564327,15,3319,Roy T. Fielding
CVE-2003-0020,,NA,,2003-3-18,2017-10-9,5,None,Remote,Low,Not required,None,Partial,None,"Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.",https://www.cvedetails.com/cve/CVE-2003-0020/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49 and 1.3.31 http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"SECURITY: CVE-2003-0020 (cve.mitre.org)
     Escape arbitrary data before writing into the errorlog. Unescaped
     errorlogs are still possible using the compile time switch
     ""-DAP_UNSAFE_ERROR_LOG_UNESCAPED"".  [Geoffrey Young, André Malo]",No,,2003-2-24,2004-4-19,88f261355a83c28097a18f9b15d92196ec290def,server/util.c,SECURITY [CAN-2003-0020]: escape arbitrary data before writing into the errorlog.,https://github.com/apache/httpd/commit/88f261355a83c28097a18f9b15d92196ec290def#diff-92ab18e3fef9a16c6986970b537dd81f,Andre Malo,,,,2003-11-24,58,64,64,89,6,Global,0.020705386909984,118,5699,Roy T. Fielding
CVE-2014-3583,119,NA,DoS Overflow,2014-12-15,2017-10-2,5,None,Remote,Low,Not required,None,None,Partial,The handle_headers function in mod_proxy_fcgi.c in the mod_proxy_fcgi module in the Apache HTTP Server 2.4.10 allows remote FastCGI servers to cause a denial of service (buffer over-read and daemon crash) via long response headers.,https://www.cvedetails.com/cve/CVE-2014-3583/,20140514,Yes. Fixed in Apache HTTP Server 2.4.12: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-3583 (cve.mitre.org)
mod_proxy_fcgi: Fix a potential crash due to buffer over-read, with response headers' size above 8K.  [Yann Ylavic, Jeff Trawick]",No,2014-9-17,2014-11-12,2015-1-30,894cf92e7e7aa0cb5139d390d97107a0237c9405,CHANGES,"mod_authnz_fcgi is not vulnerable to the CVE-2014-3583 bug (and it is too late to use the same CVE anyway).
The code changes to mod_authnz_fcgi are retained in order to keep the similar code in sync between the two modules.",https://github.com/apache/httpd/commit/894cf92e7e7aa0cb5139d390d97107a0237c9405,Jeff Trawick,trawick,https://github.com/trawick,Apache,2014-11-18,7,2,4,2,2,Local,0.10163506399007,4749,46726,Jim Jagielski
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,8b95596037175b30fdff3e12046e5c25be2cf2b6,modules/mappers/mod_negotiation.c,"Thanks goes to Manoj, while commenting on another issue, for triggering this idea.  If we find files matching (e.g. index.html.bak matches index.html) but they are rejected because we don't understand them (e.g. they are a directory, or .bak isn't a mod_mime recognized extension) then Error 500 out of here, with a note for the system administrator explaining that index.html matches some files, but their extensions cannot be grokked.  No more (unintentional, or situational) autoindex :)",https://github.com/apache/httpd/commit/8b95596037175b30fdff3e12046e5c25be2cf2b6,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-7,4,12,12,12,0,Local,0.07510183299389,295,3928,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,8c2ce509ff5a19b38484d3328333fd84f6f4a404,include/http_config.h,"Fix up some of the definitions, based on Ian's patch.",https://github.com/apache/httpd/commit/8c2ce509ff5a19b38484d3328333fd84f6f4a404,Victor J. Orlikowski,,,IBM,2001-5-11,16,9,16,9,7,Global,0.007114273010227,16,2249,Ryan Bloom
CVE-2011-4317,20,NA,,2011-11-29,2018-1-8,4.3,None,Remote,Medium,Not required,None,Partial,None,"The mod_proxy module in the Apache HTTP Server 1.3.x through 1.3.42, 2.0.x through 2.0.64, and 2.2.x through 2.2.21, when the Revision 1179239 patch is in place, does not properly interact with use of (1) RewriteRule and (2) ProxyPassMatch pattern matches for configuration of a reverse proxy, which allows remote attackers to send requests to intranet servers via a malformed URI containing an @ (at sign) character and a : (colon) character in invalid positions. NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-3368.",https://www.cvedetails.com/cve/CVE-2011-4317/,20111104,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2011-4317 (cve.mitre.org)
Resolve additional cases of URL rewriting with ProxyPassMatch or RewriteRule, where particular request-URIs could result in undesired backend network exposure in some configurations.
[Joe Orton]",No,2011-10-20,2012-1-22,2012-1-31,8e905e6d97ab5575ae82ff7ffff35d5d3769914b,modules/mappers/mod_rewrite.c,"Adjust CVE-2011-3368/CVE-2011-4317 fixes to rely solely on core's translate-name to fail unsupported URIs.
Rewrite and proxy now decline what they don't support rather than fail the request.
Suggested by: trawick
Implemented by: jorton
Tweaked by: wrowe",https://github.com/apache/httpd/commit/8e905e6d97ab5575ae82ff7ffff35d5d3769914b,Jeff Trawick,trawick,https://github.com/trawick,Apache,2011-1-19,NA,2,11,4,38,Global,0.023296087082011,565,24253,Andre Malo
CVE-2011-4317,20,NA,,2011-11-29,2018-1-8,4.3,None,Remote,Medium,Not required,None,Partial,None,"The mod_proxy module in the Apache HTTP Server 1.3.x through 1.3.42, 2.0.x through 2.0.64, and 2.2.x through 2.2.21, when the Revision 1179239 patch is in place, does not properly interact with use of (1) RewriteRule and (2) ProxyPassMatch pattern matches for configuration of a reverse proxy, which allows remote attackers to send requests to intranet servers via a malformed URI containing an @ (at sign) character and a : (colon) character in invalid positions. NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-3368.",https://www.cvedetails.com/cve/CVE-2011-4317/,20111104,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2011-4317 (cve.mitre.org)
Resolve additional cases of URL rewriting with ProxyPassMatch or RewriteRule, where particular request-URIs could result in undesired backend network exposure in some configurations.
[Joe Orton]",No,2011-10-20,2012-1-22,2012-1-31,8e905e6d97ab5575ae82ff7ffff35d5d3769914b,modules/proxy/mod_proxy.c,"Adjust CVE-2011-3368/CVE-2011-4317 fixes to rely solely on core's translate-name to fail unsupported URIs.
Rewrite and proxy now decline what they don't support rather than fail the request.
Suggested by: trawick
Implemented by: jorton
Tweaked by: wrowe",https://github.com/apache/httpd/commit/8e905e6d97ab5575ae82ff7ffff35d5d3769914b,Jeff Trawick,trawick,https://github.com/trawick,Apache,2011-1-19,NA,2,11,4,38,Global,0.006580440208759,58,8814,William A. Rowe Jr
CVE-2011-4317,20,NA,,2011-11-29,2018-1-8,4.3,None,Remote,Medium,Not required,None,Partial,None,"The mod_proxy module in the Apache HTTP Server 1.3.x through 1.3.42, 2.0.x through 2.0.64, and 2.2.x through 2.2.21, when the Revision 1179239 patch is in place, does not properly interact with use of (1) RewriteRule and (2) ProxyPassMatch pattern matches for configuration of a reverse proxy, which allows remote attackers to send requests to intranet servers via a malformed URI containing an @ (at sign) character and a : (colon) character in invalid positions. NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-3368.",https://www.cvedetails.com/cve/CVE-2011-4317/,20111104,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2011-4317 (cve.mitre.org)
Resolve additional cases of URL rewriting with ProxyPassMatch or RewriteRule, where particular request-URIs could result in undesired backend network exposure in some configurations.
[Joe Orton]",No,2011-10-20,2012-1-22,2012-1-31,8e905e6d97ab5575ae82ff7ffff35d5d3769914b,server/protocol.c,"Adjust CVE-2011-3368/CVE-2011-4317 fixes to rely solely on core's translate-name to fail unsupported URIs.
Rewrite and proxy now decline what they don't support rather than fail the request.
Suggested by: trawick
Implemented by: jorton
Tweaked by: wrowe",https://github.com/apache/httpd/commit/8e905e6d97ab5575ae82ff7ffff35d5d3769914b,Jeff Trawick,trawick,https://github.com/trawick,Apache,2011-1-19,NA,0,20,4,38,Global,0.022502372238037,166,7377,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,8f501285cb8af6ecffc5b147c61dc25084fe6b61,modules/http/byterange_filter.c,Save a few cycles... do reason to set in_merge if we already have,https://github.com/apache/httpd/commit/8f501285cb8af6ecffc5b147c61dc25084fe6b61,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-25,13,2,4,2,2,Local,0.314453125,322,1024,Justin Erenkrantz
CVE-2002-1593,Not defined,NA,DoS,2002-9-25,2017-7-10,5,None,Remote,Low,Not required,None,None,Partial,"mod_dav in Apache before 2.0.42 does not properly handle versioning hooks, which may allow remote attackers to kill a child process via a null dereference and cause a denial of service (CPU consumption) in a preforked multi-processing module.",https://www.cvedetails.com/cve/CVE-2002-1593/,20050313,Yes. Fixed in Apache HTTP Server 2.0.42: http://httpd.apache.org/security/vulnerabilities_20.html ,"A flaw was found in handling of versioning hooks in mod_dav. An attacker could send a carefully crafted request in such a way to cause the child process handling the connection to crash. This issue will only result in a denial of service where a threaded process model is in use. 

http://archive.apache.org/dist/httpd/CHANGES_2.0
SECURITY: CVE-2002-1593 (cve.mitre.org) [CERT VU#406121]: mod_dav: Check for versioning hooks before using them. [Greg Stein]",No,,2002-9-19,2002-9-24,91184351d4e4f6fc7da36b3134177f843d2ba770,modules/dav/main/mod_dav.c,"We need to set r->handler to indicate that we'll be handling the request. Otherwise, other modules may attempt to do ""funny stuff"" with the request (specifically: mod_dir will map /some/path/ into an index.html document if found). This reinstalls a fixups hook to set the r->handler value. Most of the checks in the dav_handler() function are now moved to the fixups hook. We just don't bother to set the handler unless all conditions are met.",https://github.com/apache/httpd/commit/91184351d4e4f6fc7da36b3134177f843d2ba770,Greg Stein,gstein,https://github.com/gstein,Apache,2002-9-17,15,50,78,50,28,Global,0.702224512582668,8176,11643,Greg Stein
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,922c2d133e282f0a70b16419e4c1b7600da798a5,modules/http/http_protocol.c,Ignore leading zeros when parsing hex value for chunk extensions,https://github.com/apache/httpd/commit/922c2d133e282f0a70b16419e4c1b7600da798a5,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-5-29,29,5,5,5,0,Local,0.002378892733564,44,18496,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,931c384aae6ee5f96494db7b981b9feba73e3078,modules/http/byterange_filter.c,Merge in byteranges,https://github.com/apache/httpd/commit/931c384aae6ee5f96494db7b981b9feba73e3078,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-25,13,77,87,77,10,Local,0.308374384236453,313,1015,Justin Erenkrantz
CVE-2006-4110,,NA,Bypass,2006-8-14,2017-7-19,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache 2.2.2, when running on Windows, allows remote attackers to read source code of CGI programs via a request that contains uppercase (or alternate case) characters that bypass the case-sensitive ScriptAlias directive, but allow access to the file on case-insensitive file systems.",https://www.cvedetails.com/cve/CVE-2006-4110/,20060814,No. It is DISPUTED,,No,,,,95922f28042fd334ff2548ca226bf2dca22095c5,docs/manual/platform/windows.xml,"Add a note about case-sensitivity to the windows platform docs.
Partially in response to the disputed vulnerability:
http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4110",https://github.com/apache/httpd/commit/95922f28042fd334ff2548ca226bf2dca22095c5,Joshua Slive,,http://www.slive.ca,,2006-8-20,1,21,21,40,0,Local,0.018871672626142,95,5034,Astrid Kessler
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,CHANGES,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,3,3,33,38,Global,0.909410912102702,8784,9659,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,include/httpd.h,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,2,4,33,38,Global,0.319464033850494,1359,4254,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,modules/aaa/mod_auth_digest.c,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,6,12,33,38,Global,0.527565286204168,2000,3791,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,modules/dav/main/util.c,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,6,12,33,38,Global,0.003640145605824,14,3846,Greg Stein
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,modules/loggers/mod_log_config.c,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,1,2,33,38,Global,0.573333333333333,1247,2175,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,modules/mappers/mod_alias.c,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,2,4,33,38,Global,0.64375,515,800,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,modules/test/mod_test_util_uri.c,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,4,8,33,38,Global,0.909282700421941,431,474,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,server/main.c,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,1,2,33,38,Global,0.932489740082079,13633,14620,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,server/protocol.c,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,4,8,33,38,Global,0.063402889245586,158,2492,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,95a2ba01ed4638f5e2169a3af4a8dae77bd87299,server/scoreboard.c,"Moved util_uri to apr-util/uri/apr_uri, which means adding the apr_prefix to all of the uri functions (yuck), changing some includes, and using APR error codes instead of HTTP-specific error codes.
Other notes to test this patch:
- You need to delete the util_uri.h file - exports picks up on this.
- I'd like to remove the apr_uri.h from httpd.h, but that might  increase the complexity of this patch even further. Once this patch is accepted (in some form), then I can focus on removing apr_uri.h from httpd.h entirely.  I need baby steps (heh) right now.
- I imagine that this might break a bunch of stuff in Win32 or other OS builds with foreign dependency files.  Any help here is appreciated.

This is a start...  -- justin",https://github.com/apache/httpd/commit/95a2ba01ed4638f5e2169a3af4a8dae77bd87299,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,1,2,33,38,Global,0.031011450381679,65,2096,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,9749d561fbf10d9d4b068d06d6cf9b169d3a9cea,server/protocol.c,Calm some overly agressive crlf handling,https://github.com/apache/httpd/commit/9749d561fbf10d9d4b068d06d6cf9b169d3a9cea,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-30,60,1,2,1,1,Local,0.211299015052964,2274,10762,Ryan Bloom
CVE-2009-3094,,NA,DoS,2009-9-8,2017-9-18,2.6,None,Remote,High,Not required,None,None,Partial,The ap_proxy_ftp_handler function in modules/proxy/proxy_ftp.c in the mod_proxy_ftp module in the Apache HTTP Server 2.0.63 and 2.2.13 allows remote FTP servers to cause a denial of service (NULL pointer dereference and child process crash) via a malformed reply to an EPSV command.,https://www.cvedetails.com/cve/CVE-2009-3094/,20090202,Yes. Fixed in Apache HTTP Server 2.2.14. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2009-3094 (cve.mitre.org)
mod_proxy_ftp: NULL pointer dereference on error paths.[Stefan Fritsch <sf fritsch.de>, Joe Orton]",No,2009-9-4,2009-9-2,2009-10-5,9881400cd1ad20b036ac7bd2d7394919005490c3,modules/proxy/mod_proxy_ftp.c,"Security fix - this is presumed to fix CVE-2009-3094 (the disclosed information was limited so this has not been confirmed):
* modules/proxy/mod_proxy_ftp.c (parse_epsv_reply): New function.
  (proxy_ftp_handler): Fix possible NULL pointer deference in
  apr_socket_close(NULL) on error paths.  Fix possible buffer overread in EPSV response parser, use parse_epsv_reply instead. Thanks to Jeff Trawick and Stefan Fritsch for analysis of this issue.
Submitted by: Stefan Fritsch <sf fritsch.de>, jorton",https://github.com/apache/httpd/commit/9881400cd1ad20b036ac7bd2d7394919005490c3,Joe Orton,notroj,,Red Hat,2009-9-14,1,31,58,31,27,Local,0.008021832616606,97,12092,Martin Kraemer
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,98bc08188b626e6c7bf9804aa0f9b3d8c56f251d,modules/http/byterange_filter.c,Remove log message left over from debugging.,https://github.com/apache/httpd/commit/98bc08188b626e6c7bf9804aa0f9b3d8c56f251d,Stefan Fritsch,,,GeNUA mbH,2011-9-1,13,0,3,0,3,Local,0.20032930845225,365,1822,Jim Jagielski
CVE-2003-0253,,NA,DoS,2003-8-18,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"The prefork MPM in Apache 2 before 2.0.47 does not properly handle certain errors from accept, which could lead to a denial of service.",https://www.cvedetails.com/cve/CVE-2003-0253/,20030506,Yes. Fixed in Apache HTTP Server 2.0.47: http://httpd.apache.org/security/vulnerabilities_20.html ,*) SECURITY [CAN-2003-0253]: Fixed a bug in prefork MPM causing temporary denial of service when accept() on a rarely accessed port returns certain errors.  Reported by Saheed Akhtar <S.Akhtar@talis.com>.  [Jeff Trawick],No,2003-6-25,2003-7-9,2003-7-9,9bc02aba1972e6a7b2e691008cdac6618ef2f516,CHANGES,"Forward port patch for CAN-2003-0253 from 2.0.
SECURITY [CAN-2003-0253]: Fixed a bug in prefork MPM causing temporary denial of service when accept() on a rarely accessed port returns certain errors.  Reported by Saheed Akhtar
<S.Akhtar@talis.com>.  [Jeff Trawick]",https://github.com/apache/httpd/commit/9bc02aba1972e6a7b2e691008cdac6618ef2f516,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-7-9,1,5,5,14,14,Local,0.005696636925189,83,14570,Roy T. Fielding
CVE-2003-0253,,NA,DoS,2003-8-18,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"The prefork MPM in Apache 2 before 2.0.47 does not properly handle certain errors from accept, which could lead to a denial of service.",https://www.cvedetails.com/cve/CVE-2003-0253/,20030506,Yes. Fixed in Apache HTTP Server 2.0.47: http://httpd.apache.org/security/vulnerabilities_20.html ,*) SECURITY [CAN-2003-0253]: Fixed a bug in prefork MPM causing temporary denial of service when accept() on a rarely accessed port returns certain errors.  Reported by Saheed Akhtar <S.Akhtar@talis.com>.  [Jeff Trawick],No,2003-6-25,2003-7-9,2003-7-9,9bc02aba1972e6a7b2e691008cdac6618ef2f516,server/mpm/prefork/prefork.c,"Forward port patch for CAN-2003-0253 from 2.0.
SECURITY [CAN-2003-0253]: Fixed a bug in prefork MPM causing temporary denial of service when accept() on a rarely accessed port returns certain errors.  Reported by Saheed Akhtar
<S.Akhtar@talis.com>.  [Jeff Trawick]",https://github.com/apache/httpd/commit/9bc02aba1972e6a7b2e691008cdac6618ef2f516,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-7-9,1,9,23,14,14,Local,0.003740774441411,37,9891,Jim Jagielski
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,9bd73bf6409e7b0cf5bd15150cd89d442ca3a35e,CHANGES,"Correctly return 413 when an invalid chunk size is given on input.
- If get_chunk_size() returns a negative number, that probably implies an overflow.  So, create a 413 error and pass it to the output filters.
- Modify ap_discard_request_body() to return OK quickly if we're a subreq or our status code implies that we will be dropping the connection.
- Modify ap_die() so that if the new status implies that we will drop the connection, that we correctly indicate that we can not keepalive this connection.  (Without this, the error is returned, but the connection is not closed.)",https://github.com/apache/httpd/commit/9bd73bf6409e7b0cf5bd15150cd89d442ca3a35e,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-5-29,29,5,5,47,6,Local,0.021962769431744,269,12248,Roy T. Fielding
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,9bd73bf6409e7b0cf5bd15150cd89d442ca3a35e,modules/http/http_protocol.c,"Correctly return 413 when an invalid chunk size is given on input.
- If get_chunk_size() returns a negative number, that probably implies an overflow.  So, create a 413 error and pass it to the output filters.
- Modify ap_discard_request_body() to return OK quickly if we're a subreq or our status code implies that we will be dropping the connection.
- Modify ap_die() so that if the new status implies that we will drop the connection, that we correctly indicate that we can not keepalive this connection.  (Without this, the error is returned, but the connection is not closed.)",https://github.com/apache/httpd/commit/9bd73bf6409e7b0cf5bd15150cd89d442ca3a35e,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-5-29,29,33,33,47,6,Local,0.064690903180365,1194,18457,Ryan Bloom
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,9bd73bf6409e7b0cf5bd15150cd89d442ca3a35e,modules/http/http_request.c,"Correctly return 413 when an invalid chunk size is given on input.
- If get_chunk_size() returns a negative number, that probably implies an overflow.  So, create a 413 error and pass it to the output filters.
- Modify ap_discard_request_body() to return OK quickly if we're a subreq or our status code implies that we will be dropping the connection.
- Modify ap_die() so that if the new status implies that we will drop the connection, that we correctly indicate that we can not keepalive this connection.  (Without this, the error is returned, but the connection is not closed.)",https://github.com/apache/httpd/commit/9bd73bf6409e7b0cf5bd15150cd89d442ca3a35e,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-5-29,29,9,15,47,6,Local,0.020013492241961,89,4447,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,9c3814ad7b1c7229b7dbaeb5d90f314928630967,modules/http/byterange_filter.c,first round of cleanups,https://github.com/apache/httpd/commit/9c3814ad7b1c7229b7dbaeb5d90f314928630967,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-25,13,17,29,17,12,Local,0.230254350736278,172,747,Justin Erenkrantz
CVE-2010-0434,200,NA,+Info,2010-3-5,2017-9-18,4.3,None,Remote,Medium,Not required,Partial,None,None,"The ap_read_request function in server/protocol.c in the Apache HTTP Server 2.2.x before 2.2.15, when a multithreaded MPM is used, does not properly handle headers in subrequests in certain circumstances involving a parent request that has a body, which might allow remote attackers to obtain sensitive information via a crafted request that triggers access to memory locations associated with an earlier request.",https://www.cvedetails.com/cve/CVE-2010-0434/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-0434 (cve.mitre.org)
Ensure each subrequest has a shallow copy of headers_in so that the parent request headers are not corrupted.  Elimiates a problematic optimization in the case of no request body.  PR 48359
[Jake Scott, William Rowe, Ruediger Pluem]",No,,2009-12-9,2010-3-5,9d13040915bc02da835c39e97c0dfbc504f435df,CHANGES,reflect assignment of CVE-2010-0434,https://github.com/apache/httpd/commit/9d13040915bc02da835c39e97c0dfbc504f435df,Jeff Trawick,trawick,https://github.com/trawick,Apache,2010-3-3,84,2,3,2,1,Local,0.047475677424171,1908,40189,Jim Jagielski
CVE-2008-2939,79,NA,XSS,2008-8-6,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in proxy_ftp.c in the mod_proxy_ftp module in Apache 2.0.63 and earlier, and mod_proxy_ftp.c in the mod_proxy_ftp module in Apache 2.2.9 and earlier 2.2 versions, allows remote attackers to inject arbitrary web script or HTML via a wildcard in the last directory component in the pathname in an FTP URI.",https://www.cvedetails.com/cve/CVE-2008-2939/,20080630,"No. These issue was addressed in all affected httpd versions as shipped in Red Hat Enterprise Linux 3, 4, and 5 were fixed via: https://rhn.redhat.com/errata/RHSA-2008-0967.html This issue is tracked via the following bug: https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=CVE-2008-2939 The Red Hat Security Response Team has rated this issue as having low security impact, future updates may address this flaw in other affected products (such as Red Hat Application Stack). ",,No,,,,9d283cf23ab128b793cc5fa6cd4c1bfd9c820471,modules/proxy/mod_proxy_ftp.c,* Prevent XSS attacks when using wildcards in the path of the FTP URL (CVE-2008-2939). Discovered by Marc Bevand of Rapid7.,https://github.com/apache/httpd/commit/9d283cf23ab128b793cc5fa6cd4c1bfd9c820471,Ruediger Pluem,,,,2008-8-5,1,1,1,1,0,Local,0.001347368421053,16,11875,Martin Kraemer
CVE-2002-1156,,NA,,2002-10-11,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,Apache 2.0.42 allows remote attackers to view the source code of a CGI script via a POST request to a directory with both WebDAV and CGI enabled.,https://www.cvedetails.com/cve/CVE-2002-1156/,20040901,Yes. Fixed in Apache HTTP Server 2.0.43: http://httpd.apache.org/security/vulnerabilities_20.html,"moderate: CGI scripts source revealed using WebDAV (CVE-2002-1156)
In Apache 2.0.42 only, for a location where both WebDAV and CGI were enabled, a POST request to a CGI script would reveal the CGI source to a remote user.",No,,,2002-10-3,a07d0bebc57562814b5949c964a847a2e56438bc,CHANGES,"Allow CGI scripts that use POST and mod_dav to exist in the same location. Mod_Dav was always setting the r->handler field to ""dav_handler"", but this means that mod_cgi won't run the script.  According to my reading of the DAV RFC, mod_dav shouldn't do anything at all with a POST request, because it is impossible to know if the POST was meant for DAV or for some other resource. We used to excuse POST from DAV processing, so I have re-enabled that behavior.
PR:	13025",https://github.com/apache/httpd/commit/a07d0bebc57562814b5949c964a847a2e56438bc,Ryan Bloom,,,,2002-9-30,2,3,3,16,3,Local,0.063466169502059,817,12873,Roy T. Fielding
CVE-2002-1156,,NA,,2002-10-11,2017-10-9,5,None,Remote,Low,Not required,Partial,None,None,Apache 2.0.42 allows remote attackers to view the source code of a CGI script via a POST request to a directory with both WebDAV and CGI enabled.,https://www.cvedetails.com/cve/CVE-2002-1156/,20040901,Yes. Fixed in Apache HTTP Server 2.0.43: http://httpd.apache.org/security/vulnerabilities_20.html,"moderate: CGI scripts source revealed using WebDAV (CVE-2002-1156)
In Apache 2.0.42 only, for a location where both WebDAV and CGI were enabled, a POST request to a CGI script would reveal the CGI source to a remote user.",No,,,2002-10-3,a07d0bebc57562814b5949c964a847a2e56438bc,modules/dav/main/mod_dav.c,"Allow CGI scripts that use POST and mod_dav to exist in the same location. Mod_Dav was always setting the r->handler field to ""dav_handler"", but this means that mod_cgi won't run the script.  According to my reading of the DAV RFC, mod_dav shouldn't do anything at all with a POST request, because it is impossible to know if the POST was meant for DAV or for some other resource. We used to excuse POST from DAV processing, so I have re-enabled that behavior.
PR:	13025",https://github.com/apache/httpd/commit/a07d0bebc57562814b5949c964a847a2e56438bc,Ryan Bloom,,,,2002-9-30,2,13,16,16,3,Local,0.004373552868536,51,11661,Greg Stein
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,a11b146365f643b3d3b86898327a01278b086166,modules/http/byterange_filter.c,"avoid inserting the same bucket into bbout twice, causing an endless loop",https://github.com/apache/httpd/commit/a11b146365f643b3d3b86898327a01278b086166,Stefan Fritsch,,,GeNUA mbH,2011-8-25,13,1,2,1,1,Local,0.007766990291262,8,1030,Justin Erenkrantz
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,a30c0066e39da79a598e58aabd0c2d419be20566,modules/http/http_protocol.c,this comment is way bogus,https://github.com/apache/httpd/commit/a30c0066e39da79a598e58aabd0c2d419be20566,Cliff Woolley,,,,2002-6-13,29,0,5,0,5,Local,0.009212147180119,172,18671,Ryan Bloom
CVE-2014-0231,399,NA,DoS,2014-7-20,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",https://www.cvedetails.com/cve/CVE-2014-0231/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server.  By default, the client I/O timeout (Timeout directive) now applies to communication with scripts. The CGIDScriptTimeout directive can be used to set a different timeout for communication with scripts. [Rainer Jung, Eric Covener, Yann Ylavic]",No,2014-6-16,2014-7-14,2014-9-3,a30c26ca9d22f6482465de7adc4b045519127cfc,modules/generators/mod_cgid.c,"*) SECURITY: CVE-2014-0231 (cve.mitre.org)
mod_cgid: Fix a denial of service against CGI scripts that do not consume stdin that could lead to lingering HTTPD child processes filling up the scoreboard and eventually hanging the server. [Rainer Jung, Eric Covener, Yann Ylavic]
Submitted By: rjung, covener, ylavic
Reviewed By: trawick, jorton, covener, jim",https://github.com/apache/httpd/commit/a30c26ca9d22f6482465de7adc4b045519127cfc,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-14,278,13,13,13,0,Local,0.031076923076923,202,6500,Ryan Bloom
CVE-2005-2700,,NA,Bypass,2005-9-6,2017-10-10,10,None,Remote,Low,Not required,Complete,Complete,Complete,"ssl_engine_kernel.c in mod_ssl before 2.8.24, when using ""SSLVerifyClient optional"" in the global virtual host configuration, does not properly enforce ""SSLVerifyClient require"" in a per-location context, which allows remote attackers to bypass intended access restrictions.",https://www.cvedetails.com/cve/CVE-2005-2700/,20050826,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-2700 (cve.mitre.org) 
mod_ssl: Fix a security issue where ""SSLVerifyClient"" was not enforced in per-location context if ""SSLVerifyClient optional"" was configured in the vhost configuration.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",Yes,,2005-8-30,2005-10-14,a344c639929f8f53a47ba5eab157162294c676f3,CHANGES,"Fix CVE CAN-2005-2700:
* modules/ssl/ssl_engine_kernel.c (ssl_hook_Access): Ensure that renegotiation is performed for a transition from “SSLVerifyClient optional"" to ""SSLVerifyClient require"".
The boolean ""verify_old & SSL_VERIFY_PEER_STRICT"" is true if the old context merely has optional verification configured, since the definition of SSL_VERIFY_PEER_STRICT is (SSL_VERIFY_FAIL_IF_NO_PEER_CERT | SSL_VERIFY_PEER).",https://github.com/apache/httpd/commit/a344c639929f8f53a47ba5eab157162294c676f3,Joe Orton,notroj,,Red Hat,2005-8-30,1,5,5,7,2,Global,0.030104712041885,598,19864,Roy T. Fielding
CVE-2005-2700,,NA,Bypass,2005-9-6,2017-10-10,10,None,Remote,Low,Not required,Complete,Complete,Complete,"ssl_engine_kernel.c in mod_ssl before 2.8.24, when using ""SSLVerifyClient optional"" in the global virtual host configuration, does not properly enforce ""SSLVerifyClient require"" in a per-location context, which allows remote attackers to bypass intended access restrictions.",https://www.cvedetails.com/cve/CVE-2005-2700/,20050826,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-2700 (cve.mitre.org) 
mod_ssl: Fix a security issue where ""SSLVerifyClient"" was not enforced in per-location context if ""SSLVerifyClient optional"" was configured in the vhost configuration.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",Yes,,2005-8-30,2005-10-14,a344c639929f8f53a47ba5eab157162294c676f3,modules/ssl/ssl_engine_kernel.c,"Fix CVE CAN-2005-2700:
* modules/ssl/ssl_engine_kernel.c (ssl_hook_Access): Ensure that renegotiation is performed for a transition from “SSLVerifyClient optional"" to ""SSLVerifyClient require"".
The boolean ""verify_old & SSL_VERIFY_PEER_STRICT"" is true if the old context merely has optional verification configured, since the definition of SSL_VERIFY_PEER_STRICT is (SSL_VERIFY_FAIL_IF_NO_PEER_CERT | SSL_VERIFY_PEER).",https://github.com/apache/httpd/commit/a344c639929f8f53a47ba5eab157162294c676f3,Joe Orton,notroj,,Red Hat,2005-8-30,1,2,4,7,2,Global,0.027049873203719,160,5915,Doug MacEachern
CVE-2005-3352,,NA,XSS,2005-12-31,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in the mod_imap module of Apache httpd before 1.3.35-dev and Apache httpd 2.0.x before 2.0.56-dev allows remote attackers to inject arbitrary web script or HTML via the Referer when using image maps.,https://www.cvedetails.com/cve/CVE-2005-3352/,20051027,"Yes. Fixed in Apache HTTP Server 2.2.2, 2.0.58, and 1.3.35: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","*) SECURITY: CVE-2005-3352 (cve.mitre.org)
mod_imap: Escape untrusted referer header before outputting in HTML to avoid potential cross-site scripting.  Change also made to ap_escape_html so we escape quotes.  Reported by JPCERT.
[Mark Cox]",No,2005-11-1,2005-12-12,2006-5-1,a34a19e4b4c9ffc488af26972173633275fe22da,modules/mappers/mod_imagemap.c,"Bring forward the fix for CVE-2005-3352 already on the branches:
* modules/mappers/mod_imagemap.c (imap_url): Escape the referer.
* server/util.c (ap_escape_html): Escape the "" character.
Submitted by: mjc
Reviewed by: fielding, jorton",https://github.com/apache/httpd/commit/a34a19e4b4c9ffc488af26972173633275fe22da,Joe Orton,notroj,,Red Hat,2005-12-16,1,1,2,7,1,Local,0.001226993865031,2,1630,Roy T. Fielding
CVE-2005-3352,,NA,XSS,2005-12-31,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in the mod_imap module of Apache httpd before 1.3.35-dev and Apache httpd 2.0.x before 2.0.56-dev allows remote attackers to inject arbitrary web script or HTML via the Referer when using image maps.,https://www.cvedetails.com/cve/CVE-2005-3352/,20051027,"Yes. Fixed in Apache HTTP Server 2.2.2, 2.0.58, and 1.3.35: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","*) SECURITY: CVE-2005-3352 (cve.mitre.org)
mod_imap: Escape untrusted referer header before outputting in HTML to avoid potential cross-site scripting.  Change also made to ap_escape_html so we escape quotes.  Reported by JPCERT.
[Mark Cox]",No,2005-11-1,2005-12-12,2006-5-1,a34a19e4b4c9ffc488af26972173633275fe22da,server/util.c,"Bring forward the fix for CVE-2005-3352 already on the branches:
* modules/mappers/mod_imagemap.c (imap_url): Escape the referer.
* server/util.c (ap_escape_html): Escape the "" character.
Submitted by: mjc
Reviewed by: fielding, jorton",https://github.com/apache/httpd/commit/a34a19e4b4c9ffc488af26972173633275fe22da,Joe Orton,notroj,,Red Hat,2005-12-16,1,6,6,7,1,Local,0.026311541565779,163,6195,Roy T. Fielding
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,a44b72fbb1cc1dc066413867cc2e18bea04d7726,modules/experimental/mod_cache.dsp,Correct misplaced # End Group marker.,https://github.com/apache/httpd/commit/a44b72fbb1cc1dc066413867cc2e18bea04d7726,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,1,2,1,1,Local,0.301418439716312,85,282,Bill Stoddard
CVE-2017-9788,20,NA,DoS +Info,2017-7-13,2018-1-4,6.4,None,Remote,Low,Not required,Partial,None,Partial,"In Apache httpd before 2.2.34 and 2.4.x before 2.4.27, the value placeholder in [Proxy-]Authorization headers of type 'Digest' was not initialized or reset before or between successive key=value assignments by mod_auth_digest. Providing an initial key with no '=' assignment could reflect the stale value of uninitialized pool memory used by the prior request, leading to leakage of potentially confidential information, and a segfault in other cases resulting in denial of service.",https://www.cvedetails.com/cve/CVE-2017-9788/,20170621,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.27: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-9788 (cve.mitre.org)
mod_auth_digest: Uninitialized memory reflection.  The value placeholder in [Proxy-]Authorization headers type 'Digest' was not initialized or reset before or between successive key=value assignments. [William Rowe]", No,2017-6-28,2017-7-11,2017-7-11,a6ae987b3150dd0471fa7d4771e9345f3c3b9460,test/unit/mod_auth_digest.c,"CVE-2017-9788: add unit tests for get_digest_rec()
Including the module source is a dirty hack, but maybe the direct way is best for now. More functional tests are still TODO.",https://github.com/apache/httpd/commit/a6ae987b3150dd0471fa7d4771e9345f3c3b9460,Jacob Champion,jchampio,https://github.com/jchampio,Pivotal Software,2017-7-15,11,107,107,107,0,Global,1,107,107,Jacob Champion
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,a73efe9d578d0f5f248e309bee72e4ddb1ac7059,CHANGES,"This fixes a bug in mod_status on Windows where restart time was not properly initialized.
Move ap_restart_time into the scoreboard global area so the child process on non-forking platforms can have access to it.",https://github.com/apache/httpd/commit/a73efe9d578d0f5f248e309bee72e4ddb1ac7059,Bill Stoddard,,,IBM,2002-2-19,309,2,2,6,5,Global,0.017360202390299,199,11463,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,a73efe9d578d0f5f248e309bee72e4ddb1ac7059,include/scoreboard.h,"This fixes a bug in mod_status on Windows where restart time was not properly initialized.
Move ap_restart_time into the scoreboard global area so the child process on non-forking platforms can have access to it.",https://github.com/apache/httpd/commit/a73efe9d578d0f5f248e309bee72e4ddb1ac7059,Bill Stoddard,,,IBM,2002-2-19,309,1,2,6,5,Global,0.030707610146863,23,749,dgaudet
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,a73efe9d578d0f5f248e309bee72e4ddb1ac7059,modules/generators/mod_status.c,"This fixes a bug in mod_status on Windows where restart time was not properly initialized.
Move ap_restart_time into the scoreboard global area so the child process on non-forking platforms can have access to it.",https://github.com/apache/httpd/commit/a73efe9d578d0f5f248e309bee72e4ddb1ac7059,Bill Stoddard,,,IBM,2002-2-19,309,2,4,6,5,Global,0.018351685018352,55,2997,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,a73efe9d578d0f5f248e309bee72e4ddb1ac7059,server/scoreboard.c,"This fixes a bug in mod_status on Windows where restart time was not properly initialized.
Move ap_restart_time into the scoreboard global area so the child process on non-forking platforms can have access to it.",https://github.com/apache/httpd/commit/a73efe9d578d0f5f248e309bee72e4ddb1ac7059,Bill Stoddard,,,IBM,2002-2-19,309,1,3,6,5,Global,0.035739814152966,100,2798,Ryan Bloom
CVE-2017-15715,20,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.",https://www.cvedetails.com/cve/CVE-2017-15715/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) CVE-2017-15715 (cve.mitre.org)
core: Configure the regular expression engine to match '$' to the end of the input string only, excluding matching the end of any embedded newline characters. Behavior can be changed with new directive ‘RegexDefaultOptions'. [Yann Ylavic]", No,2017-11-24,2018-3-21,2018-3-21,a83a8740e269d10bf479c62378ea4d1f4a1562fa,server/util_pcre.c,Follow up to r1824339: s/strcasecmp/ap_cstr_casecmp/ as suggested by Ruediger.,https://github.com/apache/httpd/commit/a83a8740e269d10bf479c62378ea4d1f4a1562fa,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-16,9,4,8,4,4,Local,0.054335260115607,47,865,Stefan Fritsch
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,a84fb6ebd34a6363e0b6dd59cc31312ca717498f,modules/http/byterange_filter.c,"Send a 206 response for a ""Range: bytes=0-"" request, even if 200 would be more efficient.",https://github.com/apache/httpd/commit/a84fb6ebd34a6363e0b6dd59cc31312ca717498f,Stefan Fritsch,,,GeNUA mbH,2011-8-31,13,2,4,2,2,Local,0.17039586919105,297,1743,Jim Jagielski
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,a8cb9375a8f9be1af0234485955a67b391d7eef8,server/mpm/winnt/child.c,INVALID_SOCKET is -1 and appropriate to test throughout.,https://github.com/apache/httpd/commit/a8cb9375a8f9be1af0234485955a67b391d7eef8,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-8-4,13,4,8,4,4,Local,1,1055,1055,William A. Rowe Jr
CVE-2005-2728,,NA,DoS,2005-8-30,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,The byte-range filter in Apache 2.0 before 2.0.54 allows remote attackers to cause a denial of service (memory consumption) via an HTTP header with a large Range field.,https://www.cvedetails.com/cve/CVE-2005-2728/,20050829,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-2728 (cve.mitre.org)
Fix cases where the byterange filter would buffer responses into memory.  PR 29962.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-7-7,2005-10-14,a8cecac33a1c63b0436a39d75b9119a3cc872a89,modules/http/byterange_filter.c,"* modules/http/byterange_filter.c (ap_byterange_filter): Refuse to byterange any response which may require the consumption of arbitrary amounts of memory.
(functional changes split from whitespace/reflow changes which will follow in a separate commit)
Reviewed by: jerenkrantz (several moons ago)
PR: 29962",https://github.com/apache/httpd/commit/a8cecac33a1c63b0436a39d75b9119a3cc872a89,Joe Orton,notroj,,Red Hat,2005-6-7,63,21,48,21,27,Local,0.109339407744875,48,439,Justin Erenkrantz
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,ab0cacf22026b18e3b5ec814247e4dbf2106c53a,CHANGES,This issue now has a CVE name,https://github.com/apache/httpd/commit/ab0cacf22026b18e3b5ec814247e4dbf2106c53a,Mark J. Cox,iamamoose,https://github.com/iamamoose,"Red Hat, Apache Security, OpenSSL Security",2007-6-21,13,2,3,2,1,Local,0.008510638297872,188,22090,Roy T. Fielding
CVE-2017-7679,119,NA,Overflow,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, mod_mime can read one byte past the end of a buffer when sending a malicious Content-Type response header.",https://www.cvedetails.com/cve/CVE-2017-7679/,20170411,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-7679 (cve.mitre.org)
mod_mime can read one byte past the end of a buffer when sending a malicious Content-Type response header.",No,2015-11-15,2017-6-19,2017-6-19,ac48e5fad3c456813bebaa8b85ae111e5d7eb007,CHANGES,"mod_mime: fix quoted pair scanning
Submitted By: ylavic",https://github.com/apache/httpd/commit/ac48e5fad3c456813bebaa8b85ae111e5d7eb007,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-6-4,1,2,2,4,2,Local,0.026974253678765,1340,49677,Jim Jagielski
CVE-2017-7679,119,NA,Overflow,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, mod_mime can read one byte past the end of a buffer when sending a malicious Content-Type response header.",https://www.cvedetails.com/cve/CVE-2017-7679/,20170411,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-7679 (cve.mitre.org)
mod_mime can read one byte past the end of a buffer when sending a malicious Content-Type response header.",No,2015-11-15,2017-6-19,2017-6-19,ac48e5fad3c456813bebaa8b85ae111e5d7eb007,modules/http/mod_mime.c,"mod_mime: fix quoted pair scanning
Submitted By: ylavic",https://github.com/apache/httpd/commit/ac48e5fad3c456813bebaa8b85ae111e5d7eb007,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-6-4,1,2,4,4,2,Local,0.000964320154291,4,4148,William A. Rowe Jr
CVE-2007-6420,352,NA,Gain privileges CSRF,2008-1-11,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site request forgery (CSRF) vulnerability in the balancer-manager in mod_proxy_balancer for Apache HTTP Server 2.2.x allows remote attackers to gain privileges via unspecified vectors.,https://www.cvedetails.com/cve/CVE-2007-6420/,20071217,Yes. Fixed in Apache HTTP Server 2.2.9. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-6420 (cve.mitre.org)
mod_proxy_balancer: Prevent CSRF attacks against the balancer-manager interface.  [Joe Orton]",No,2007-10-12,2008-1-9,2008-6-14,ad41158e0ae128694b3fb4298bdb6b90bc3cb673,CHANGES,"Prevent CSRF attacks against the balancer-manager (CVE-2007-6420)
* modules/proxy/mod_proxy_balancer.c (balancer_init): New function. (balancer_handler): Place a nonce in the form output, and check that the submitted form data includes that nonce. (ap_proxy_balancer_register_hook): Register the new post_config hook.",https://github.com/apache/httpd/commit/ad41158e0ae128694b3fb4298bdb6b90bc3cb673,Joe Orton,notroj,,Red Hat,2008-5-30,7,4,4,43,0,Global,0.017624659085062,685,38866,Jim Jagielski
CVE-2007-6420,352,NA,Gain privileges CSRF,2008-1-11,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site request forgery (CSRF) vulnerability in the balancer-manager in mod_proxy_balancer for Apache HTTP Server 2.2.x allows remote attackers to gain privileges via unspecified vectors.,https://www.cvedetails.com/cve/CVE-2007-6420/,20071217,Yes. Fixed in Apache HTTP Server 2.2.9. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-6420 (cve.mitre.org)
mod_proxy_balancer: Prevent CSRF attacks against the balancer-manager interface.  [Joe Orton]",No,2007-10-12,2008-1-9,2008-6-14,ad41158e0ae128694b3fb4298bdb6b90bc3cb673,modules/proxy/mod_proxy_balancer.c,"Prevent CSRF attacks against the balancer-manager (CVE-2007-6420)
* modules/proxy/mod_proxy_balancer.c (balancer_init): New function. (balancer_handler): Place a nonce in the form output, and check that the submitted form data includes that nonce. (ap_proxy_balancer_register_hook): Register the new post_config hook.",https://github.com/apache/httpd/commit/ad41158e0ae128694b3fb4298bdb6b90bc3cb673,Joe Orton,notroj,,Red Hat,2008-5-30,7,39,39,43,0,Global,0.012806830309498,48,3748,Jim Jagielski
CVE-2012-0053,264,NA,+Info,2012-1-27,2018-1-17,4.3,None,Remote,Medium,Not required,Partial,None,None,"protocol.c in the Apache HTTP Server 2.2.x through 2.2.21 does not properly restrict header information during construction of Bad Request (aka 400) error documents, which allows remote attackers to obtain the values of HTTPOnly cookies via vectors involving a (1) long or (2) malformed header in conjunction with crafted web script.",https://www.cvedetails.com/cve/CVE-2012-0053/,20111207,Yes. Fixed in Apache HTTP Server 2.2.22: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2012-0053 (cve.mitre.org)
Fix an issue in error responses that could expose ""httpOnly"" cookies when no custom ErrorDocument is specified for status code 400. [Eric Covener]",No,2012-1-15,2012-1-23,2012-1-13,ae522645f034c56ed8784ba127b716447c55ba5b,server/protocol.c,"CVE-2012-0053: Fix an issue in error responses that could expose ""httpOnly"" cookies when no custom ErrorDocument is specified for status code 400",https://github.com/apache/httpd/commit/ae522645f034c56ed8784ba127b716447c55ba5b,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2012-1-23,7,12,24,12,12,Local,0.00499932441562,37,7401,Ryan Bloom
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,aed6334919065baf91d61818e6138fc21a732277,Apache.dsw,"Two more loadable modules on Win32, thank you Gunther!",https://github.com/apache/httpd/commit/aed6334919065baf91d61818e6138fc21a732277,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-1,17,44,49,308,5,Local,0.709493219129193,1988,2802,William A. Rowe Jr
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,aed6334919065baf91d61818e6138fc21a732277,Makefile.win,"Two more loadable modules on Win32, thank you Gunther!",https://github.com/apache/httpd/commit/aed6334919065baf91d61818e6138fc21a732277,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-1,17,6,6,308,5,Local,0.755045233124565,1085,1437,William A. Rowe Jr
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,aed6334919065baf91d61818e6138fc21a732277,modules/mappers/mod_vhost_alias.dsp,"Two more loadable modules on Win32, thank you Gunther!",https://github.com/apache/httpd/commit/aed6334919065baf91d61818e6138fc21a732277,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-1,17,128,128,308,5,Local,1,128,128,William A. Rowe Jr
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,aed6334919065baf91d61818e6138fc21a732277,modules/metadata/mod_unique_id.dsp,"Two more loadable modules on Win32, thank you Gunther!",https://github.com/apache/httpd/commit/aed6334919065baf91d61818e6138fc21a732277,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-1,17,128,128,308,5,Local,1,128,128,William A. Rowe Jr
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,aed6334919065baf91d61818e6138fc21a732277,os/win32/BaseAddr.ref,"Two more loadable modules on Win32, thank you Gunther!",https://github.com/apache/httpd/commit/aed6334919065baf91d61818e6138fc21a732277,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-10-1,17,2,2,308,5,Local,0.381578947368421,29,76,Bill Stoddard
CVE-2013-6438,20,NA,DoS,2014-3-18,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,"The dav_xml_get_cdata function in main/util.c in the mod_dav module in the Apache HTTP Server before 2.4.8 does not properly remove whitespace characters from CDATA sections, which allows remote attackers to cause a denial of service (daemon crash) via a crafted DAV WRITE request.",https://www.cvedetails.com/cve/CVE-2013-6438/,20131104,"Yes. Fixed in Apache HTTP Server 2.2.27, 2.4.9: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-6438 (cve.mitre.org)
mod_dav: Keep track of length of cdata properly when removing leading spaces. Eliminates a potential denial of service from specifically crafted DAV WRITE requests
[Amin Tora <Amin.Tora neustar.biz>]",No,2013-12-10,2014-3-17,2014-3-26,af739c4aba87b5d0b4ecf64d2a9b68c0420fcb10,modules/dav/main/util.c,"mod_dav: Keep track of length of cdata properly when removing leading spaces.
* modules/dav/main/util.c (dav_xml_get_cdata): reduce len variable when increasing cdata pointer.",https://github.com/apache/httpd/commit/af739c4aba87b5d0b4ecf64d2a9b68c0420fcb10,Ben Reser,breser,https://github.com/breser,Apache/CDK Global,2014-1-8,1,3,4,3,1,Local,0.001850917045263,11,5943,Greg Stein
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,afb6f27fa9179bff1a41bb902ddfb56c9bb1478d,server/scoreboard.c,"The scoreboard is no longer created while we can write to stderr, so call ap_log_error() to note problems allocating the scoreboard.
apr_shm_malloc() doesn't set any kind of error code, so don’t try to reference errno.
setup_shared() now returns an error code to its caller rather than exiting directly.  This isn't a complete fix, as ap_create_scoreboard() needs to do the same thing.  Currently, when we can't allocate the scoreboard we leave the mod_cgid daemon process stranded.",https://github.com/apache/httpd/commit/afb6f27fa9179bff1a41bb902ddfb56c9bb1478d,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-12-24,309,16,33,16,17,Local,0.0853765323993,195,2284,Ryan Bloom
CVE-2007-3847,,NA,DoS,2007-8-23,2017-9-28,5,None,Remote,Low,Not required,None,None,Partial,"The date handling code in modules/proxy/proxy_util.c (mod_proxy) in Apache 2.3.0, when using a threaded MPM, allows remote origin servers to cause a denial of service (caching forward proxy process crash) via crafted date headers that trigger a buffer over-read.",https://www.cvedetails.com/cve/CVE-2007-3847/,20070718,Yes. Fixed in Apache HTTP Server 2.2.6 and 2.0.61: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html ," *) SECURITY: CVE-2007-3847 (cve.mitre.org)
     mod_proxy: Prevent reading past the end of a buffer when parsing date-related headers.  PR 41144.
     [Davi Arnaut, Nick Kew]",No,,2006-12-10,2007-12-7,afc7b3d09fd01a12cafa3a5e3b9193b91b242afe,CHANGES,"Fix buffer overflow in date handling
PR 41144 (Davi Arnaut)",https://github.com/apache/httpd/commit/afc7b3d09fd01a12cafa3a5e3b9193b91b242afe,Nick Kew,,http://people.apache.org/~niq/,Webping,2007-8-1,1,3,3,24,69,Local,0.003842328903354,85,22122,Roy T. Fielding
CVE-2007-3847,,NA,DoS,2007-8-23,2017-9-28,5,None,Remote,Low,Not required,None,None,Partial,"The date handling code in modules/proxy/proxy_util.c (mod_proxy) in Apache 2.3.0, when using a threaded MPM, allows remote origin servers to cause a denial of service (caching forward proxy process crash) via crafted date headers that trigger a buffer over-read.",https://www.cvedetails.com/cve/CVE-2007-3847/,20070718,Yes. Fixed in Apache HTTP Server 2.2.6 and 2.0.61: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html ," *) SECURITY: CVE-2007-3847 (cve.mitre.org)
     mod_proxy: Prevent reading past the end of a buffer when parsing date-related headers.  PR 41144.
     [Davi Arnaut, Nick Kew]",No,,2006-12-10,2007-12-7,afc7b3d09fd01a12cafa3a5e3b9193b91b242afe,modules/proxy/proxy_util.c,"Fix buffer overflow in date handling
PR 41144 (Davi Arnaut)",https://github.com/apache/httpd/commit/afc7b3d09fd01a12cafa3a5e3b9193b91b242afe,Nick Kew,,http://people.apache.org/~niq/,Webping,2007-8-1,1,21,90,24,69,Local,0.060709053618517,1036,17065,Mladen Turk
CVE-2012-0031,399,NA,DoS,2012-1-18,2018-1-17,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"scoreboard.c in the Apache HTTP Server 2.2.21 and earlier might allow local users to cause a denial of service (daemon crash during shutdown) or possibly have unspecified other impact by modifying a certain type field within a scoreboard shared memory segment, leading to an invalid call to the free function.",https://www.cvedetails.com/cve/CVE-2012-0031/,20111207,Yes. Fixed in Apache HTTP Server 2.2.22: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2012-0031 (cve.mitre.org)
Fix scoreboard issue which could allow an unprivileged child process could cause the parent to crash at shutdown rather than terminate cleanly.  [Joe Orton]",No,2011-1-30,2012-1-11,2012-1-31,b0835c731a7d7f65b5d409f42b886fc8e3111bfc,include/ap_mmn.h,"SECURITY (CVE-2012-0031): Fix possible crash on shutdown if a child changes the sb_type field in the scoreboard.  Since unprivileged children should not be able to affect the parent in this way, this is treated as a Low severity security issue.
Thanks to ""halfdog"" <me halfdog.net> for reporting this issue.
* include/scoreboard.h (global_score): Remove sb_type field.
* include/ap_mmn.h: Bump MMN for above.
* server/scoreboard.c (ap_cleanup_scoreboard, ap_create_scoreboard): Use a static global to store store the scoreboard type.",https://github.com/apache/httpd/commit/b0835c731a7d7f65b5d409f42b886fc8e3111bfc,Joe Orton,notroj,,Red Hat,2012-1-11,1,2,3,5,4,Global,0.011536444677504,22,1907,Roy T. Fielding
CVE-2012-0031,399,NA,DoS,2012-1-18,2018-1-17,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"scoreboard.c in the Apache HTTP Server 2.2.21 and earlier might allow local users to cause a denial of service (daemon crash during shutdown) or possibly have unspecified other impact by modifying a certain type field within a scoreboard shared memory segment, leading to an invalid call to the free function.",https://www.cvedetails.com/cve/CVE-2012-0031/,20111207,Yes. Fixed in Apache HTTP Server 2.2.22: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2012-0031 (cve.mitre.org)
Fix scoreboard issue which could allow an unprivileged child process could cause the parent to crash at shutdown rather than terminate cleanly.  [Joe Orton]",No,2011-1-30,2012-1-11,2012-1-31,b0835c731a7d7f65b5d409f42b886fc8e3111bfc,include/scoreboard.h,"SECURITY (CVE-2012-0031): Fix possible crash on shutdown if a child changes the sb_type field in the scoreboard.  Since unprivileged children should not be able to affect the parent in this way, this is treated as a Low severity security issue.
Thanks to ""halfdog"" <me halfdog.net> for reporting this issue.
* include/scoreboard.h (global_score): Remove sb_type field.
* include/ap_mmn.h: Bump MMN for above.
* server/scoreboard.c (ap_cleanup_scoreboard, ap_create_scoreboard): Use a static global to store store the scoreboard type.",https://github.com/apache/httpd/commit/b0835c731a7d7f65b5d409f42b886fc8e3111bfc,Joe Orton,notroj,,Red Hat,2012-1-11,1,0,1,5,4,Global,0.00094696969697,1,1056,dgaudet
CVE-2012-0031,399,NA,DoS,2012-1-18,2018-1-17,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"scoreboard.c in the Apache HTTP Server 2.2.21 and earlier might allow local users to cause a denial of service (daemon crash during shutdown) or possibly have unspecified other impact by modifying a certain type field within a scoreboard shared memory segment, leading to an invalid call to the free function.",https://www.cvedetails.com/cve/CVE-2012-0031/,20111207,Yes. Fixed in Apache HTTP Server 2.2.22: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2012-0031 (cve.mitre.org)
Fix scoreboard issue which could allow an unprivileged child process could cause the parent to crash at shutdown rather than terminate cleanly.  [Joe Orton]",No,2011-1-30,2012-1-11,2012-1-31,b0835c731a7d7f65b5d409f42b886fc8e3111bfc,include/scoreboard.h,"SECURITY (CVE-2012-0031): Fix possible crash on shutdown if a child changes the sb_type field in the scoreboard.  Since unprivileged children should not be able to affect the parent in this way, this is treated as a Low severity security issue.
Thanks to ""halfdog"" <me halfdog.net> for reporting this issue.
* include/scoreboard.h (global_score): Remove sb_type field.
* include/ap_mmn.h: Bump MMN for above.
* server/scoreboard.c (ap_cleanup_scoreboard, ap_create_scoreboard): Use a static global to store store the scoreboard type.",https://github.com/apache/httpd/commit/b0835c731a7d7f65b5d409f42b886fc8e3111bfc,Joe Orton,notroj,,Red Hat,2012-1-11,1,0,1,5,4,Global,0.00094696969697,1,1056,dgaudet
CVE-2012-0031,399,NA,DoS,2012-1-18,2018-1-17,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"scoreboard.c in the Apache HTTP Server 2.2.21 and earlier might allow local users to cause a denial of service (daemon crash during shutdown) or possibly have unspecified other impact by modifying a certain type field within a scoreboard shared memory segment, leading to an invalid call to the free function.",https://www.cvedetails.com/cve/CVE-2012-0031/,20111207,Yes. Fixed in Apache HTTP Server 2.2.22: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2012-0031 (cve.mitre.org)
Fix scoreboard issue which could allow an unprivileged child process could cause the parent to crash at shutdown rather than terminate cleanly.  [Joe Orton]",No,2011-1-30,2012-1-11,2012-1-31,b0835c731a7d7f65b5d409f42b886fc8e3111bfc,include/scoreboard.h,"SECURITY (CVE-2012-0031): Fix possible crash on shutdown if a child changes the sb_type field in the scoreboard.  Since unprivileged children should not be able to affect the parent in this way, this is treated as a Low severity security issue.
Thanks to ""halfdog"" <me halfdog.net> for reporting this issue.
* include/scoreboard.h (global_score): Remove sb_type field.
* include/ap_mmn.h: Bump MMN for above.
* server/scoreboard.c (ap_cleanup_scoreboard, ap_create_scoreboard): Use a static global to store store the scoreboard type.",https://github.com/apache/httpd/commit/b0835c731a7d7f65b5d409f42b886fc8e3111bfc,Joe Orton,notroj,,Red Hat,2012-1-11,1,3,5,5,4,Global,0.00094696969697,1,1056,dgaudet
CVE-2012-0031,399,NA,DoS,2012-1-18,2018-1-17,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"scoreboard.c in the Apache HTTP Server 2.2.21 and earlier might allow local users to cause a denial of service (daemon crash during shutdown) or possibly have unspecified other impact by modifying a certain type field within a scoreboard shared memory segment, leading to an invalid call to the free function.",https://www.cvedetails.com/cve/CVE-2012-0031/,20111207,Yes. Fixed in Apache HTTP Server 2.2.22: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2012-0031 (cve.mitre.org)
Fix scoreboard issue which could allow an unprivileged child process could cause the parent to crash at shutdown rather than terminate cleanly.  [Joe Orton]",No,2011-1-30,2012-1-11,2012-1-31,b0835c731a7d7f65b5d409f42b886fc8e3111bfc,include/scoreboard.h,"SECURITY (CVE-2012-0031): Fix possible crash on shutdown if a child changes the sb_type field in the scoreboard.  Since unprivileged children should not be able to affect the parent in this way, this is treated as a Low severity security issue.
Thanks to ""halfdog"" <me halfdog.net> for reporting this issue.
* include/scoreboard.h (global_score): Remove sb_type field.
* include/ap_mmn.h: Bump MMN for above.
* server/scoreboard.c (ap_cleanup_scoreboard, ap_create_scoreboard): Use a static global to store store the scoreboard type.",https://github.com/apache/httpd/commit/b0835c731a7d7f65b5d409f42b886fc8e3111bfc,Joe Orton,notroj,,Red Hat,2012-1-11,1,3,5,5,4,Global,0.00094696969697,1,1056,dgaudet
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,b0bad2dabc2138e94f03c5966ad979a506450dda,modules/http/byterange_filter.c,"If the sum of all ranges in a request is not smaller than the file, fall back to 200.  This takes care of potential DoS issues from ranges like 0-100,1000-,0-100,1000-,..",https://github.com/apache/httpd/commit/b0bad2dabc2138e94f03c5966ad979a506450dda,Stefan Fritsch,,,GeNUA mbH,2011-8-26,13,8,9,8,1,Local,0.163174603174603,257,1575,Jim Jagielski
CVE-2011-3368,20,1,,2011-10-5,2018-1-8,5,None,Remote,Low,Not required,Partial,None,None,"The mod_proxy module in the Apache HTTP Server 1.3.x through 1.3.42, 2.0.x through 2.0.64, and 2.2.x through 2.2.21 does not properly interact with use of (1) RewriteRule and (2) ProxyPassMatch pattern matches for configuration of a reverse proxy, which allows remote attackers to send requests to intranet servers via a malformed URI containing an initial @ (at sign) character.",https://www.cvedetails.com/cve/CVE-2011-3368/,20110830,"Yes. Fixed in Apache HTTP Server 1.3, 2.2.22, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html
http://httpd.apache.org/security/vulnerabilities_13.html","*) SECURITY: CVE-2011-3368 (cve.mitre.org)
Reject requests where the request-URI does not match the HTTP specification, preventing unexpected expansion of target URLs in some reverse proxy configurations.  [Joe Orton]",No,2011-9-16,2011-10-5,2012-1-31,b10aeb17718f4cbb4412a7d8355c060517b61060,docs/manual/rewrite/flags.xml,"- add a security warning, and tweak the example, in light of CVE-2011-3368",https://github.com/apache/httpd/commit/b10aeb17718f4cbb4412a7d8355c060517b61060,Joe Orton,notroj,,Red Hat,2011-10-5,1,10,11,10,1,Local,0.012416427889207,13,1047,Richard Bowen
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,b10cd5fbb049078b2a8cee13a1ee5cba1561f9eb,CHANGES,"Fix processing of the TRACE method. Previously we passed bogus parms to form_header_field() and it overlaid some vhost structures, resulting in a segfault in check_hostalias(). [Greg Ames, Jeff Trawick]

Note: Not being familiar with the TRACE method I compared the 2.0 output with 1.3.9 output.  The only difference is that with 2.0 we get a Content-Length header field.",https://github.com/apache/httpd/commit/b10cd5fbb049078b2a8cee13a1ee5cba1561f9eb,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-5-17,16,6,6,16,42,Local,0.012668743509865,122,9630,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,b10cd5fbb049078b2a8cee13a1ee5cba1561f9eb,modules/http/http_protocol.c,"Fix processing of the TRACE method. Previously we passed bogus parms to form_header_field() and it overlaid some vhost structures, resulting in a segfault in check_hostalias(). [Greg Ames, Jeff Trawick]

Note: Not being familiar with the TRACE method I compared the 2.0 output with 1.3.9 output.  The only difference is that with 2.0 we get a Content-Length header field.",https://github.com/apache/httpd/commit/b10cd5fbb049078b2a8cee13a1ee5cba1561f9eb,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-5-17,16,9,13,16,42,Local,0.100874831763122,1499,14860,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,b10cd5fbb049078b2a8cee13a1ee5cba1561f9eb,STATUS,"Fix processing of the TRACE method. Previously we passed bogus parms to form_header_field() and it overlaid some vhost structures, resulting in a segfault in check_hostalias(). [Greg Ames, Jeff Trawick]

Note: Not being familiar with the TRACE method I compared the 2.0 output with 1.3.9 output.  The only difference is that with 2.0 we get a Content-Length header field.",https://github.com/apache/httpd/commit/b10cd5fbb049078b2a8cee13a1ee5cba1561f9eb,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-5-17,16,1,39,16,42,Local,0.100747597009612,283,2809,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,b14e8a73f113d69a82d4265206fddcdc69dc938d,modules/http/byterange_filter.c,Fix iteration over string,https://github.com/apache/httpd/commit/b14e8a73f113d69a82d4265206fddcdc69dc938d,Stefan Fritsch,,,GeNUA mbH,2011-8-28,13,3,6,3,3,Local,0.163625662154208,278,1699,Jim Jagielski
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,b24ab211643ced1f2db042f84518877982603cc4,include/scoreboard.h,tiny cleanup to remove bogus SCOREBOARD_SIZE define,https://github.com/apache/httpd/commit/b24ab211643ced1f2db042f84518877982603cc4,Jeff Trawick,trawick,https://github.com/trawick,Apache,2001-12-29,309,0,3,2,5,Local,0.082956259426848,55,663,dgaudet
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,b2bdfafaee87b1c709fb976f185d79bf53ab8af4,os/beos/beosd.c,"Get the daemon code working again for User/Group on BeOS, but make them no-op's until we get multi-user for beos… (yeah, right)",https://github.com/apache/httpd/commit/b2bdfafaee87b1c709fb976f185d79bf53ab8af4,David Reid,,,"BeOS MPM and APR code, party animal",2001-9-8,309,12,75,21,70,Local,0.307291666666667,177,576,dgaudet
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,b2bdfafaee87b1c709fb976f185d79bf53ab8af4,os/beos/beosd.h,"Get the daemon code working again for User/Group on BeOS, but make them no-op's until we get multi-user for beos… (yeah, right)",https://github.com/apache/httpd/commit/b2bdfafaee87b1c709fb976f185d79bf53ab8af4,David Reid,,,"BeOS MPM and APR code, party animal",2001-9-8,309,9,16,21,70,Local,0.072289156626506,18,249,dgaudet
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,b4201233e14b8208f2e932c350e8a1c2f6bcf9e2,modules/http/byterange_filter.c,count ranges by simply counting commas,https://github.com/apache/httpd/commit/b4201233e14b8208f2e932c350e8a1c2f6bcf9e2,Stefan Fritsch,,,GeNUA mbH,2011-8-26,13,8,19,8,11,Local,0.106643356643357,122,1144,Justin Erenkrantz
CVE-2014-0226,362,1,DOS Exec Code Overflow + Info,2014-7-20,2017-12-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Race condition in the mod_status module in the Apache HTTP Server before 2.4.10 allows remote attackers to cause a denial of service (heap-based buffer overflow), or possibly obtain sensitive credential information or execute arbitrary code, via a crafted request that triggers improper scoreboard handling within the status_handler function in modules/generators/mod_status.c and the lua_ap_scoreboard_worker function in modules/lua/lua_request.c.",https://www.cvedetails.com/cve/CVE-2014-0226/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0226 (cve.mitre.org)
Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  [Joe Orton, Eric Covener]",No,2014-5-30,2014-7-14,2014-9-3,b47236794b0209190934d019cab39c41e6e4c52b,include/ap_mmn.h,"SECURITY (CVE-2014-0226): Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this.
* include/scoreboard.h: Add ap_copy_scoreboard_worker.
* server/scoreboard.c (ap_copy_scoreboard_worker): New function.
* modules/generators/mod_status.c (status_handler): Use it.
* modules/lua/lua_request.c (lua_ap_scoreboard_worker): Likewise.
Reviewed by: trawick, jorton, covener, jim
Submitted by: jorton, covener",https://github.com/apache/httpd/commit/b47236794b0209190934d019cab39c41e6e4c52b,Joe Orton,notroj,,Red Hat,2014-7-14,1,2,3,47,8,Global,0.014025245441795,30,2139,Roy T. Fielding
CVE-2014-0226,362,1,DOS Exec Code Overflow + Info,2014-7-20,2017-12-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Race condition in the mod_status module in the Apache HTTP Server before 2.4.10 allows remote attackers to cause a denial of service (heap-based buffer overflow), or possibly obtain sensitive credential information or execute arbitrary code, via a crafted request that triggers improper scoreboard handling within the status_handler function in modules/generators/mod_status.c and the lua_ap_scoreboard_worker function in modules/lua/lua_request.c.",https://www.cvedetails.com/cve/CVE-2014-0226/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0226 (cve.mitre.org)
Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  [Joe Orton, Eric Covener]",No,2014-5-30,2014-7-14,2014-9-3,b47236794b0209190934d019cab39c41e6e4c52b,include/scoreboard.h,"SECURITY (CVE-2014-0226): Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this.
* include/scoreboard.h: Add ap_copy_scoreboard_worker.
* server/scoreboard.c (ap_copy_scoreboard_worker): New function.
* modules/generators/mod_status.c (status_handler): Use it.
* modules/lua/lua_request.c (lua_ap_scoreboard_worker): Likewise.
Reviewed by: trawick, jorton, covener, jim
Submitted by: jorton, covener",https://github.com/apache/httpd/commit/b47236794b0209190934d019cab39c41e6e4c52b,Joe Orton,notroj,,Red Hat,2014-7-14,1,17,17,47,8,Global,0.016042780748663,18,1122,dgaudet
CVE-2014-0226,362,1,DOS Exec Code Overflow + Info,2014-7-20,2017-12-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Race condition in the mod_status module in the Apache HTTP Server before 2.4.10 allows remote attackers to cause a denial of service (heap-based buffer overflow), or possibly obtain sensitive credential information or execute arbitrary code, via a crafted request that triggers improper scoreboard handling within the status_handler function in modules/generators/mod_status.c and the lua_ap_scoreboard_worker function in modules/lua/lua_request.c.",https://www.cvedetails.com/cve/CVE-2014-0226/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0226 (cve.mitre.org)
Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  [Joe Orton, Eric Covener]",No,2014-5-30,2014-7-14,2014-9-3,b47236794b0209190934d019cab39c41e6e4c52b,modules/generators/mod_status.c,"SECURITY (CVE-2014-0226): Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this.
* include/scoreboard.h: Add ap_copy_scoreboard_worker.
* server/scoreboard.c (ap_copy_scoreboard_worker): New function.
* modules/generators/mod_status.c (status_handler): Use it.
* modules/lua/lua_request.c (lua_ap_scoreboard_worker): Likewise.
Reviewed by: trawick, jorton, covener, jim
Submitted by: jorton, covener",https://github.com/apache/httpd/commit/b47236794b0209190934d019cab39c41e6e4c52b,Joe Orton,notroj,,Red Hat,2014-7-14,1,3,6,47,8,Global,0.006269030986925,35,5583,Jeff Trawick
CVE-2014-0226,362,1,DOS Exec Code Overflow + Info,2014-7-20,2017-12-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Race condition in the mod_status module in the Apache HTTP Server before 2.4.10 allows remote attackers to cause a denial of service (heap-based buffer overflow), or possibly obtain sensitive credential information or execute arbitrary code, via a crafted request that triggers improper scoreboard handling within the status_handler function in modules/generators/mod_status.c and the lua_ap_scoreboard_worker function in modules/lua/lua_request.c.",https://www.cvedetails.com/cve/CVE-2014-0226/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0226 (cve.mitre.org)
Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  [Joe Orton, Eric Covener]",No,2014-5-30,2014-7-14,2014-9-3,b47236794b0209190934d019cab39c41e6e4c52b,modules/lua/lua_request.c,"SECURITY (CVE-2014-0226): Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this.
* include/scoreboard.h: Add ap_copy_scoreboard_worker.
* server/scoreboard.c (ap_copy_scoreboard_worker): New function.
* modules/generators/mod_status.c (status_handler): Use it.
* modules/lua/lua_request.c (lua_ap_scoreboard_worker): Likewise.
Reviewed by: trawick, jorton, covener, jim
Submitted by: jorton, covener",https://github.com/apache/httpd/commit/b47236794b0209190934d019cab39c41e6e4c52b,Joe Orton,notroj,,Red Hat,2014-7-14,1,10,14,47,8,Global,0.005809294871795,29,4992,Daniel Gruno
CVE-2014-0226,362,1,DOS Exec Code Overflow + Info,2014-7-20,2017-12-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Race condition in the mod_status module in the Apache HTTP Server before 2.4.10 allows remote attackers to cause a denial of service (heap-based buffer overflow), or possibly obtain sensitive credential information or execute arbitrary code, via a crafted request that triggers improper scoreboard handling within the status_handler function in modules/generators/mod_status.c and the lua_ap_scoreboard_worker function in modules/lua/lua_request.c.",https://www.cvedetails.com/cve/CVE-2014-0226/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.10: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0226 (cve.mitre.org)
Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  [Joe Orton, Eric Covener]",No,2014-5-30,2014-7-14,2014-9-3,b47236794b0209190934d019cab39c41e6e4c52b,server/scoreboard.c,"SECURITY (CVE-2014-0226): Fix a race condition in scoreboard handling, which could lead to a heap buffer overflow.  Thanks to Marek Kroemeke working with HP's Zero Day Initiative for reporting this.
* include/scoreboard.h: Add ap_copy_scoreboard_worker.
* server/scoreboard.c (ap_copy_scoreboard_worker): New function.
* modules/generators/mod_status.c (status_handler): Use it.
* modules/lua/lua_request.c (lua_ap_scoreboard_worker): Likewise.
Reviewed by: trawick, jorton, covener, jim
Submitted by: jorton, covener",https://github.com/apache/httpd/commit/b47236794b0209190934d019cab39c41e6e4c52b,Joe Orton,notroj,,Red Hat,2014-7-14,1,15,15,47,8,Global,0.007348784624081,26,3538,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,b4df3a350bd9264da4c8e866a25cedc0fd731ae4,modules/http/byterange_filter.c,"Remove traces of byterange_ctx, it's not necessary anymore. Initialize some variables to avoid (false positive) warnings with gcc 4.6.1",https://github.com/apache/httpd/commit/b4df3a350bd9264da4c8e866a25cedc0fd731ae4,Stefan Fritsch,,,GeNUA mbH,2011-8-26,13,22,55,22,33,Local,0.155669442664958,243,1561,Jim Jagielski
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,b51c893983726b6c055b71845fe44126b375b6d5,server/scoreboard.c,"Moved the #endif of APR_HAS_SHARED_MEMORY to include a reference to the global variable ap_scoreboard_shm.
Since this variable was already being excluded by APR_HAS_SHARED_MEMORY at the beginning of the file.",https://github.com/apache/httpd/commit/b51c893983726b6c055b71845fe44126b375b6d5,Bradley Nicholes,,,Novell,2002-2-1,309,1,2,1,1,Local,0.003302752293578,9,2725,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,b52dfe781e06cb956c31f5db13623d36424f333b,modules/http/byterange_filter.c,* We don't need a copy of the original range as we don't change it. A pointer to it is sufficient,https://github.com/apache/httpd/commit/b52dfe781e06cb956c31f5db13623d36424f333b,Ruediger Pluem,,,,2011-8-29,13,3,6,3,3,Local,0.116184971098266,201,1730,Jim Jagielski
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,b5ec7c1e83f159b89102b053f4944dfe03aeb584,modules/http/byterange_filter.c,Unset Content-Length if we call ap_pass_brigade several times,https://github.com/apache/httpd/commit/b5ec7c1e83f159b89102b053f4944dfe03aeb584,Stefan Fritsch,,,GeNUA mbH,2011-8-29,13,7,8,7,1,Local,0.166085946573751,286,1722,Jim Jagielski
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,b673ae45e294f3226cd9df254e458f18153ef02f,docs/manual/mod/core.html,Marc's CSS patch!,https://github.com/apache/httpd/commit/b673ae45e294f3226cd9df254e458f18153ef02f,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-2-2,43,38,38,60,1,Global,0.040451432919097,319,7886,Ken Coar
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,b673ae45e294f3226cd9df254e458f18153ef02f,docs/manual/mod/mod_include.html,Marc's CSS patch!,https://github.com/apache/httpd/commit/b673ae45e294f3226cd9df254e458f18153ef02f,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2000-2-2,43,22,23,60,1,Global,0.022840119165839,23,1007,Ken Coar
CVE-2007-5000,79,NA,XSS,2007-12-3,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in the (1) mod_imap module in the Apache HTTP Server 1.3.0 through 1.3.39 and 2.0.35 through 2.0.61 and the (2) mod_imagemap module in the Apache HTTP Server 2.2.0 through 2.2.6 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.,https://www.cvedetails.com/cve/CVE-2007-5000/,20070920,"Yes. Fixed in Apache HTTP Server 2.2.8, 2.0.63, and 1.3.41: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","*) SECURITY: CVE-2007-5000 (cve.mitre.org)
mod_imagemap: Fix a cross-site scripting issue.  Reported by JPCERT. [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0.63]
[http://archive.apache.org/dist/httpd/CHANGES_1.3.41]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]
",No,2007-10-23,2007-12-11,2008-1-19,b7881ae804aa98ca91cc47616b41fb7ece9f7c70,modules/mappers/mod_imagemap.c,"Fix CVE-2007-5000:
* modules/mappers/mod_imagemap.c (menu_header): Fix cross-site-scripting issue by escaping the URI, and ensure that a charset parameter is sent in the content-type to prevent autodetection by broken browsers.
Reported by: JPCERT",https://github.com/apache/httpd/commit/b7881ae804aa98ca91cc47616b41fb7ece9f7c70,Joe Orton,notroj,,Red Hat,2007-12-11,1,7,11,7,4,Local,0.00785498489426,13,1655,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,b7df1544fad23520326a54fc6f2999fa3c1378fc,modules/http/byterange_filter.c,"* Do a better estimation on how elements we should allocate:
  Preallocate the number of ranges as number of elements as this works good for well behaving clients which we assume to be the most cases, but do cut this at the arbitrary number of 100 to avoid too large preallocations.",https://github.com/apache/httpd/commit/b7df1544fad23520326a54fc6f2999fa3c1378fc,Ruediger Pluem,,,,2011-8-28,13,19,27,19,8,Local,0.114404267931239,193,1687,Jim Jagielski
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,ba0100684757a8dba02d13357f34b22f5266411c,modules/http/byterange_filter.c,fix typo,https://github.com/apache/httpd/commit/ba0100684757a8dba02d13357f34b22f5266411c,Stefan Fritsch,,,GeNUA mbH,2011-8-27,13,4,8,4,4,Local,0.167929292929293,266,1584,Jim Jagielski
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,baab6a2a8d5b32977a5529adfddfa2f1215653b5,modules/http/byterange_filter.c,* Style police. No functional changes,https://github.com/apache/httpd/commit/baab6a2a8d5b32977a5529adfddfa2f1215653b5,Ruediger Pluem,pluem,,,2011-8-28,13,15,25,15,10,Local,0.092345078979344,152,1646,Jim Jagielski
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,CHANGES,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,7,7,151,7,Global,0.017603060654258,819,46526,Jim Jagielski
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,docs/manual/mod/core.xml,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,19,19,151,7,Global,0.042804237361123,497,11611,Joshua Slive
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,docs/manual/mod/mod_log_config.xml,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,8,8,151,7,Global,0.012360939431397,20,1618,Richard Bowen
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,include/ap_mmn.h,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,2,3,151,7,Global,0.044289044289044,95,2145,Roy T. Fielding
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,include/http_core.h,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,4,4,151,7,Global,0.008470588235294,18,2125,Stefan Fritsch
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,include/httpd.h,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,5,5,151,7,Global,0.003589375448672,25,6965,Ryan Bloom
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,modules/http/http_filters.c,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,50,55,151,7,Global,0.0192843866171,83,4304,Graham Leggett
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,modules/http/http_request.c,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,4,4,151,7,Global,0.002482811306341,13,5236,Roy T. Fielding
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,modules/loggers/mod_log_config.c,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,14,14,151,7,Global,0.017432273262662,74,4245,Roy T. Fielding
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,modules/proxy/mod_proxy_http.c,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,18,18,151,7,Global,0.009940357852883,120,12072,Graham Leggett
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,server/core.c,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,16,17,151,7,Global,0.009914552214467,152,15331,Ryan Bloom
CVE-2013-5704,264,NA,Bypass,2014-4-15,2017-1-6,5,None,Remote,Low,Not required,None,Partial,None,"The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass ""RequestHeader unset"" directives by placing a header in the trailer portion of data sent with chunked transfer coding. NOTE: the vendor states ""this is not a security issue in httpd as such.""",https://www.cvedetails.com/cve/CVE-2013-5704/,20130905,"Yes. Fixed in Apache HTTP Server 2.2.29, 2.4.12: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2013-5704 (cve.mitre.org)
core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]",No,2013-9-6,2013-10-19,2015-1-30,bd34b9d92894b7fc01810fc11a059fa30067e431,server/protocol.c,"*) SECURITY: CVE-2013-5704 (cve.mitre.org)
     core: HTTP trailers could be used to replace HTTP headers late during request processing, potentially undoing or otherwise confusing modules that examined or modified request headers earlier.  Adds ""MergeTrailers"" directive to restore legacy behavior.  
Submitted By: Edward Lu, Yann Ylavic, Joe Orton, Eric Covener
Committed By: covener",https://github.com/apache/httpd/commit/bd34b9d92894b7fc01810fc11a059fa30067e431,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2014-7-15,1,4,4,151,7,Global,0.005173501577287,41,7925,Ryan Bloom
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,be3944aa7f4e2d049afbbcc9f53ad7d508bd5f8e,CHANGES,"ap_finalize_sub_req_protocol() shouldn't send an EOS bucket if one was already sent.
mod_ext_filter performs some one-time processing when it sees EOS.
When it saw EOS more than once and a subsequent attempt to close a file failed, it issued the log message described in PR 9644.",https://github.com/apache/httpd/commit/be3944aa7f4e2d049afbbcc9f53ad7d508bd5f8e,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-6-10,29,3,3,7,1,Local,0.045509757875132,562,12349,Roy T. Fielding
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,be3944aa7f4e2d049afbbcc9f53ad7d508bd5f8e,server/protocol.c,"ap_finalize_sub_req_protocol() shouldn't send an EOS bucket if one was already sent.
mod_ext_filter performs some one-time processing when it sees EOS.
When it saw EOS more than once and a subsequent attempt to close a file failed, it issued the log message described in PR 9644.",https://github.com/apache/httpd/commit/be3944aa7f4e2d049afbbcc9f53ad7d508bd5f8e,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-6-10,29,4,5,7,1,Local,0.015176665876215,64,4217,Ryan Bloom
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,bf510de2db7a0c8c62f16f510f7709d30a6cba23,modules/http/http_protocol.c,Better document the error cases returned from get_chunk_size().,https://github.com/apache/httpd/commit/bf510de2db7a0c8c62f16f510f7709d30a6cba23,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-6-19,29,9,9,9,0,Local,0.003028531958982,57,18821,Ryan Bloom
CVE-2015-3183,20,NA,,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,Partial,None,"The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules/http/http_filters.c.",https://www.cvedetails.com/cve/CVE-2015-3183/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3183 (cve.mitre.org)
core: Fix chunk header parsing defect. Remove apr_brigade_flatten(), buffering and duplicated code from the HTTP_IN filter, parse chunks in a single pass with zero copy.
Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.  [Graham Leggett, Yann Ylavic]",No,2015-4-4,2015-6-9,2015-7-15,bf8baefa280545dbcedf6fcb2bbd5e550c811e7a,modules/http/http_filters.c,"Follow up to r1684513: allow spaces before and after chunk-size.
Slightly modified version of trawick's proposal.",https://github.com/apache/httpd/commit/bf8baefa280545dbcedf6fcb2bbd5e550c811e7a,Yann Ylavic,ylavic,https://github.com/ylavic,,2015-6-14,6,16,18,16,2,Local,0.013777777777778,62,4500,Graham Leggett
CVE-2004-1834,,NA,,2004-3-20,2017-10-10,2.1,None,Local,Low,Not required,Partial,None,None,"mod_disk_cache in Apache 2.0 through 2.0.49 stores client headers, including authentication information, on the hard disk, which could allow local users to gain sensitive information.",https://www.cvedetails.com/cve/CVE-2004-1834/,20050504,Yes. Fixed in Apache HTTP Server 2.0.53: http://httpd.apache.org/security/vulnerabilities_20.html ,The experimental mod_disk_cache module stored client authentication credentials for cached objects such as proxy authentication credentials and Basic Authentication passwords on disk.,No,2004-3-2,2004-3-20,2005-2-8,bfdad873c806ee88a39973ecf7e323c75c2ccccf,CHANGES,"When storing the response headers in mod_cache, omit Transfer-Encoding
and any other hop-by-hop headers that shouldn't be applied when the
response is later delivered from cache:
http://marc.theaimsgroup.com/?l=apache-httpd-dev&m=103727389213072
Diagnosed by: Estrade Matthieu <estrade-m@ifrance.com>",https://github.com/apache/httpd/commit/bfdad873c806ee88a39973ecf7e323c75c2ccccf,Brian Pane,,http://www.brianp.net/,,2002-11-17,1,4,4,35,3,Global,0.011918404767362,156,13089,Roy T. Fielding
CVE-2004-1834,,NA,,2004-3-20,2017-10-10,2.1,None,Local,Low,Not required,Partial,None,None,"mod_disk_cache in Apache 2.0 through 2.0.49 stores client headers, including authentication information, on the hard disk, which could allow local users to gain sensitive information.",https://www.cvedetails.com/cve/CVE-2004-1834/,20050504,Yes. Fixed in Apache HTTP Server 2.0.53: http://httpd.apache.org/security/vulnerabilities_20.html ,The experimental mod_disk_cache module stored client authentication credentials for cached objects such as proxy authentication credentials and Basic Authentication passwords on disk.,No,2004-3-2,2004-3-20,2005-2-8,bfdad873c806ee88a39973ecf7e323c75c2ccccf,modules/experimental/cache_util.c,"When storing the response headers in mod_cache, omit Transfer-Encoding
and any other hop-by-hop headers that shouldn't be applied when the
response is later delivered from cache:
http://marc.theaimsgroup.com/?l=apache-httpd-dev&m=103727389213072
Diagnosed by: Estrade Matthieu <estrade-m@ifrance.com>",https://github.com/apache/httpd/commit/bfdad873c806ee88a39973ecf7e323c75c2ccccf,Brian Pane,,http://www.brianp.net/,,2002-11-17,1,22,22,35,3,Global,0.148609779482263,155,1043,Bill Stoddard
CVE-2004-1834,,NA,,2004-3-20,2017-10-10,2.1,None,Local,Low,Not required,Partial,None,None,"mod_disk_cache in Apache 2.0 through 2.0.49 stores client headers, including authentication information, on the hard disk, which could allow local users to gain sensitive information.",https://www.cvedetails.com/cve/CVE-2004-1834/,20050504,Yes. Fixed in Apache HTTP Server 2.0.53: http://httpd.apache.org/security/vulnerabilities_20.html ,The experimental mod_disk_cache module stored client authentication credentials for cached objects such as proxy authentication credentials and Basic Authentication passwords on disk.,No,2004-3-2,2004-3-20,2005-2-8,bfdad873c806ee88a39973ecf7e323c75c2ccccf,modules/experimental/mod_cache.h,"When storing the response headers in mod_cache, omit Transfer-Encoding
and any other hop-by-hop headers that shouldn't be applied when the
response is later delivered from cache:
http://marc.theaimsgroup.com/?l=apache-httpd-dev&m=103727389213072
Diagnosed by: Estrade Matthieu <estrade-m@ifrance.com>",https://github.com/apache/httpd/commit/bfdad873c806ee88a39973ecf7e323c75c2ccccf,Brian Pane,,http://www.brianp.net/,,2002-11-17,1,5,5,35,3,Global,0.025356576862124,16,631,Bill Stoddard
CVE-2004-1834,,NA,,2004-3-20,2017-10-10,2.1,None,Local,Low,Not required,Partial,None,None,"mod_disk_cache in Apache 2.0 through 2.0.49 stores client headers, including authentication information, on the hard disk, which could allow local users to gain sensitive information.",https://www.cvedetails.com/cve/CVE-2004-1834/,20050504,Yes. Fixed in Apache HTTP Server 2.0.53: http://httpd.apache.org/security/vulnerabilities_20.html ,The experimental mod_disk_cache module stored client authentication credentials for cached objects such as proxy authentication credentials and Basic Authentication passwords on disk.,No,2004-3-2,2004-3-20,2005-2-8,bfdad873c806ee88a39973ecf7e323c75c2ccccf,modules/experimental/mod_disk_cache.c,"When storing the response headers in mod_cache, omit Transfer-Encoding
and any other hop-by-hop headers that shouldn't be applied when the
response is later delivered from cache:
http://marc.theaimsgroup.com/?l=apache-httpd-dev&m=103727389213072
Diagnosed by: Estrade Matthieu <estrade-m@ifrance.com>",https://github.com/apache/httpd/commit/bfdad873c806ee88a39973ecf7e323c75c2ccccf,Brian Pane,,http://www.brianp.net/,,2002-11-17,1,3,5,35,3,Global,0.00780487804878,16,2050,Bill Stoddard
CVE-2004-1834,,NA,,2004-3-20,2017-10-10,2.1,None,Local,Low,Not required,Partial,None,None,"mod_disk_cache in Apache 2.0 through 2.0.49 stores client headers, including authentication information, on the hard disk, which could allow local users to gain sensitive information.",https://www.cvedetails.com/cve/CVE-2004-1834/,20050504,Yes. Fixed in Apache HTTP Server 2.0.53: http://httpd.apache.org/security/vulnerabilities_20.html ,The experimental mod_disk_cache module stored client authentication credentials for cached objects such as proxy authentication credentials and Basic Authentication passwords on disk.,No,2004-3-2,2004-3-20,2005-2-8,bfdad873c806ee88a39973ecf7e323c75c2ccccf,modules/experimental/mod_mem_cache.c,"When storing the response headers in mod_cache, omit Transfer-Encoding
and any other hop-by-hop headers that shouldn't be applied when the
response is later delivered from cache:
http://marc.theaimsgroup.com/?l=apache-httpd-dev&m=103727389213072
Diagnosed by: Estrade Matthieu <estrade-m@ifrance.com>",https://github.com/apache/httpd/commit/bfdad873c806ee88a39973ecf7e323c75c2ccccf,Brian Pane,,http://www.brianp.net/,,2002-11-17,1,1,2,35,3,Global,0.011107254425547,32,2881,Bill Stoddard
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,c180db9225764c60d3ff842ef73b781c843736e5,CHANGES,"Add alternative fixes for CVE-2007-3304:
* configure.in: Check for getpgid.
* include/mpm_common.h (ap_mpm_safe_kill): New prototype.
* server/mpm_common.c (reclaim_one_pid): Ensure pid validity before calling apr_proc_wait(). (ap_mpm_safe_kill): New function.
* server/mpm/prefork/prefork.c, server/mpm/worker/worker.c, server/mpm/experimental/event/event.c: Use ap_mpm_safe_kill() on pids from the scoreboard, throughout.
* include/ap_mmn.h: Minor bump.",https://github.com/apache/httpd/commit/c180db9225764c60d3ff842ef73b781c843736e5,Joe Orton,notroj,,Red Hat,2007-6-29,13,4,4,99,21,Global,0.030588235294118,676,22100,Roy T. Fielding
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,c180db9225764c60d3ff842ef73b781c843736e5,configure.in,"Add alternative fixes for CVE-2007-3304:
* configure.in: Check for getpgid.
* include/mpm_common.h (ap_mpm_safe_kill): New prototype.
* server/mpm_common.c (reclaim_one_pid): Ensure pid validity before calling apr_proc_wait(). (ap_mpm_safe_kill): New function.
* server/mpm/prefork/prefork.c, server/mpm/worker/worker.c, server/mpm/experimental/event/event.c: Use ap_mpm_safe_kill() on pids from the scoreboard, throughout.
* include/ap_mmn.h: Minor bump.",https://github.com/apache/httpd/commit/c180db9225764c60d3ff842ef73b781c843736e5,Joe Orton,notroj,,Red Hat,2007-6-29,13,1,1,99,21,Global,0.096100278551532,207,2154,Ryan Bloom
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,c180db9225764c60d3ff842ef73b781c843736e5,include/ap_mmn.h,"Add alternative fixes for CVE-2007-3304:
* configure.in: Check for getpgid.
* include/mpm_common.h (ap_mpm_safe_kill): New prototype.
* server/mpm_common.c (reclaim_one_pid): Ensure pid validity before calling apr_proc_wait(). (ap_mpm_safe_kill): New function.
* server/mpm/prefork/prefork.c, server/mpm/worker/worker.c, server/mpm/experimental/event/event.c: Use ap_mpm_safe_kill() on pids from the scoreboard, throughout.
* include/ap_mmn.h: Minor bump.",https://github.com/apache/httpd/commit/c180db9225764c60d3ff842ef73b781c843736e5,Joe Orton,notroj,,Red Hat,2007-6-29,13,2,3,99,21,Global,0.012897678417885,15,1163,Roy T. Fielding
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,c180db9225764c60d3ff842ef73b781c843736e5,include/mpm_common.h,"Add alternative fixes for CVE-2007-3304:
* configure.in: Check for getpgid.
* include/mpm_common.h (ap_mpm_safe_kill): New prototype.
* server/mpm_common.c (reclaim_one_pid): Ensure pid validity before calling apr_proc_wait(). (ap_mpm_safe_kill): New function.
* server/mpm/prefork/prefork.c, server/mpm/worker/worker.c, server/mpm/experimental/event/event.c: Use ap_mpm_safe_kill() on pids from the scoreboard, throughout.
* include/ap_mmn.h: Minor bump.",https://github.com/apache/httpd/commit/c180db9225764c60d3ff842ef73b781c843736e5,Joe Orton,notroj,,Red Hat,2007-6-29,13,13,13,99,21,Global,0.03525641025641,22,624,Ryan Bloom
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,c180db9225764c60d3ff842ef73b781c843736e5,server/mpm_common.c,"Add alternative fixes for CVE-2007-3304:
* configure.in: Check for getpgid.
* include/mpm_common.h (ap_mpm_safe_kill): New prototype.
* server/mpm_common.c (reclaim_one_pid): Ensure pid validity before calling apr_proc_wait(). (ap_mpm_safe_kill): New function.
* server/mpm/prefork/prefork.c, server/mpm/worker/worker.c, server/mpm/experimental/event/event.c: Use ap_mpm_safe_kill() on pids from the scoreboard, throughout.
* include/ap_mmn.h: Minor bump.",https://github.com/apache/httpd/commit/c180db9225764c60d3ff842ef73b781c843736e5,Joe Orton,notroj,,Red Hat,2007-6-29,13,65,65,99,21,Global,0.050446255335662,130,2577,Jeff Trawick
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,c180db9225764c60d3ff842ef73b781c843736e5,server/mpm/experimental/event/event.c,"Add alternative fixes for CVE-2007-3304:
* configure.in: Check for getpgid.
* include/mpm_common.h (ap_mpm_safe_kill): New prototype.
* server/mpm_common.c (reclaim_one_pid): Ensure pid validity before calling apr_proc_wait(). (ap_mpm_safe_kill): New function.
* server/mpm/prefork/prefork.c, server/mpm/worker/worker.c, server/mpm/experimental/event/event.c: Use ap_mpm_safe_kill() on pids from the scoreboard, throughout.
* include/ap_mmn.h: Minor bump.",https://github.com/apache/httpd/commit/c180db9225764c60d3ff842ef73b781c843736e5,Joe Orton,notroj,,Red Hat,2007-6-29,13,4,10,99,21,Global,0.003954653308727,15,3793,Paul Querna
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,c180db9225764c60d3ff842ef73b781c843736e5,server/mpm/prefork/prefork.c,"Add alternative fixes for CVE-2007-3304:
* configure.in: Check for getpgid.
* include/mpm_common.h (ap_mpm_safe_kill): New prototype.
* server/mpm_common.c (reclaim_one_pid): Ensure pid validity before calling apr_proc_wait(). (ap_mpm_safe_kill): New function.
* server/mpm/prefork/prefork.c, server/mpm/worker/worker.c, server/mpm/experimental/event/event.c: Use ap_mpm_safe_kill() on pids from the scoreboard, throughout.
* include/ap_mmn.h: Minor bump.",https://github.com/apache/httpd/commit/c180db9225764c60d3ff842ef73b781c843736e5,Joe Orton,notroj,,Red Hat,2007-6-29,13,6,14,99,21,Global,0.006164264629276,71,11518,Jim Jagielski
CVE-2007-3304,,NA,DoS,2007-6-20,2017-10-10,4.7,None,Local,Medium,Not required,None,None,Complete,"Apache httpd 1.3.37, 2.0.59, and 2.2.4 with the Prefork MPM module, allows local users to cause a denial of service by modifying the worker_score and process_score arrays to reference an arbitrary process ID, which is sent a SIGUSR1 signal from the master process, aka ""SIGUSR1 killer.""",https://www.cvedetails.com/cve/CVE-2007-3304/,20070620,"Yes. Fixed in Apache HTTP Server 2.2.6, 2.0.61, and 1.3.39: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","Changes with Apache 1.3.39
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
Ensure that the parent process cannot be forced to kill non-child processes by checking scoreboard PID data with parent process
privately stored PID data. [Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_1.3]

Changes with Apache 2.0.61
*) SECURITY: CVE-2007-3304 (cve.mitre.org)
prefork, worker MPMs: Ensure that the parent process cannot be forced to kill processes outside its process group.
[Joe Orton, Jim Jagielski]
[http://archive.apache.org/dist/httpd/CHANGES_2.2]",No,2006-5-15,2007-6-19,2007-9-7,c180db9225764c60d3ff842ef73b781c843736e5,server/mpm/worker/worker.c,"Add alternative fixes for CVE-2007-3304:
* configure.in: Check for getpgid.
* include/mpm_common.h (ap_mpm_safe_kill): New prototype.
* server/mpm_common.c (reclaim_one_pid): Ensure pid validity before calling apr_proc_wait(). (ap_mpm_safe_kill): New function.
* server/mpm/prefork/prefork.c, server/mpm/worker/worker.c, server/mpm/experimental/event/event.c: Use ap_mpm_safe_kill() on pids from the scoreboard, throughout.
* include/ap_mmn.h: Minor bump.",https://github.com/apache/httpd/commit/c180db9225764c60d3ff842ef73b781c843736e5,Joe Orton,notroj,,Red Hat,2007-6-29,13,4,10,99,21,Global,0.00307145166505,19,6186,Ryan Bloom
CVE-2013-2249,,NA,,2013-7-23,2017-1-6,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"mod_session_dbd.c in the mod_session_dbd module in the Apache HTTP Server before 2.4.5 proceeds with save operations for a session without considering the dirty flag and the requirement for a new session ID, which has unspecified impact and remote attack vectors.",https://www.cvedetails.com/cve/CVE-2013-2249/,20130219,Yes. Fixed in Apache HTTP Server 2.4.6: https://httpd.apache.org/security/vulnerabilities_24.html ,"*) SECURITY: CVE-2013-2249 (cve.mitre.org)
mod_session_dbd: Make sure that dirty flag is respected when saving sessions, and ensure the session ID is changed each time the session changes. This changes the format of the updatesession SQL statement. Existing configurations must be changed.
     [Takashi Sato <takashi tks.st>, Graham Leggett]",No,2013-5-29,2013-7-22,2013-7-22,c21bf481e2fe886b616433f3b44cbdc61ae02b1c,docs/manual/mod/mod_session_dbd.xml,mod_session_dbd: Update the sql query for sessions updates.,https://github.com/apache/httpd/commit/c21bf481e2fe886b616433f3b44cbdc61ae02b1c,Graham Leggett,minfrin,https://github.com/minfrin,,2013-5-31,1,1,2,1,1,Local,0.804054054054054,357,444,Graham Leggett
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,c25fb1799bd6ed81acbcc5d3e732f8d699c23126,CHANGES,"All mod_autoindex query parsing is now quietly quashed with the IndexOption IgnoreClient. The IndexOption SuppressColumnSorting still drops the column sort <a href>’s for the column headers, but IgnoreClient is required to ignore these Query options entirely.
Introduced new mod_autoindex query argument parsing for F=[0|1|2] to allow the client to select plain, FancyIndexing or HTMLTable formatting, V=[0|1] to inhibit or enable version sorting, and P=pattern to return only specific files. The old Query Arguments were reorganized as C=f for sorting column ‘f’ (same N, D, S, or M as before), and O=A|D for ordering ascending or descending.  ",https://github.com/apache/httpd/commit/c25fb1799bd6ed81acbcc5d3e732f8d699c23126,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-7,4,14,14,251,86,Global,0.017816263561262,179,10047,Roy T. Fielding
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,c25fb1799bd6ed81acbcc5d3e732f8d699c23126,docs/manual/mod/mod_autoindex.html,"All mod_autoindex query parsing is now quietly quashed with the IndexOption IgnoreClient. The IndexOption SuppressColumnSorting still drops the column sort <a href>’s for the column headers, but IgnoreClient is required to ignore these Query options entirely.
Introduced new mod_autoindex query argument parsing for F=[0|1|2] to allow the client to select plain, FancyIndexing or HTMLTable formatting, V=[0|1] to inhibit or enable version sorting, and P=pattern to return only specific files. The old Query Arguments were reorganized as C=f for sorting column ‘f’ (same N, D, S, or M as before), and O=A|D for ordering ascending or descending.  ",https://github.com/apache/httpd/commit/c25fb1799bd6ed81acbcc5d3e732f8d699c23126,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-7,4,74,90,251,86,Global,0.200493015612161,488,2434,Ken Coar
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,c25fb1799bd6ed81acbcc5d3e732f8d699c23126,modules/generators/mod_autoindex.c,"All mod_autoindex query parsing is now quietly quashed with the IndexOption IgnoreClient. The IndexOption SuppressColumnSorting still drops the column sort <a href>’s for the column headers, but IgnoreClient is required to ignore these Query options entirely.
Introduced new mod_autoindex query argument parsing for F=[0|1|2] to allow the client to select plain, FancyIndexing or HTMLTable formatting, V=[0|1] to inhibit or enable version sorting, and P=pattern to return only specific files. The old Query Arguments were reorganized as C=f for sorting column ‘f’ (same N, D, S, or M as before), and O=A|D for ordering ascending or descending.  ",https://github.com/apache/httpd/commit/c25fb1799bd6ed81acbcc5d3e732f8d699c23126,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-7,4,163,233,251,86,Global,0.302631578947368,1058,3496,Roy T. Fielding
CVE-2011-3348,399,NA,DoS,2011-9-20,2017-12-28,4.3,None,Remote,Medium,Not required,None,None,Partial,"The mod_proxy_ajp module in the Apache HTTP Server before 2.2.21, when used with mod_proxy_balancer in certain configurations, allows remote attackers to cause a denial of service (temporary ""error state"" in the backend server) via a malformed HTTP request.",https://www.cvedetails.com/cve/CVE-2011-3348/,20110830,Yes. Fixed in Apache HTTP Server 2.2.21. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2011-3348 (cve.mitre.org)
mod_proxy_ajp: Respond with HTTP_NOT_IMPLEMENTED when the method is not recognized.  [Jean-Frederic Clere]",No,2011-9-7,2011-9-14,2011-9-14,c3219a5688eda5f8839224f5f0e843be7d821031,modules/proxy/mod_proxy_ajp.c,AJP_EBAD_METHOD is also a bad request so return HTTP_BAD_REQUEST,https://github.com/apache/httpd/commit/c3219a5688eda5f8839224f5f0e843be7d821031,Jean-Frederic Clere,,,,2011-9-8,1,1,2,1,1,Local,0.118443804034582,411,3470,William A. Rowe Jr
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,c4ec5c411850be4e45629cde155542fa27dd5de7,modules/http/mod_mime.c,"Subtle variation for security. If the mod_mime file has nothing specific to say about a given set of file extentions (and has only based the resolved fields on the default language, encoding and content type) then tell us we can ignore the result by leaving the exception list entirely undefined.  If mod_mime adds anything (a language, charset, or whatnot) then proceed to use the file in the Multiviews evaluation, otherwise mod_negotation will ignore the file found.
  This points out a need for a slightly twisted DefaultClientLanguage, as opposed to creating foo.html.html files.  Either that, or introduce a 'neutral' entity that the user can list (say, .default) for mod_mime to declare it as a fallback language/encoding/content-type/handler.",https://github.com/apache/httpd/commit/c4ec5c411850be4e45629cde155542fa27dd5de7,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-3,4,7,10,46,25,Global,0.168177240684794,334,1986,Roy T. Fielding
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,c4ec5c411850be4e45629cde155542fa27dd5de7,modules/mappers/mod_negotiation.c,"Subtle variation for security. If the mod_mime file has nothing specific to say about a given set of file extentions (and has only based the resolved fields on the default language, encoding and content type) then tell us we can ignore the result by leaving the exception list entirely undefined.  If mod_mime adds anything (a language, charset, or whatnot) then proceed to use the file in the Multiviews evaluation, otherwise mod_negotation will ignore the file found.
  This points out a need for a slightly twisted DefaultClientLanguage, as opposed to creating foo.html.html files.  Either that, or introduce a 'neutral' entity that the user can list (say, .default) for mod_mime to declare it as a fallback language/encoding/content-type/handler.",https://github.com/apache/httpd/commit/c4ec5c411850be4e45629cde155542fa27dd5de7,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-3,4,39,61,46,25,Global,0.059207094418362,227,3834,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,c5a97a06b4f442bc89c6131fca37d3fda1222421,modules/http/byterange_filter.c,"reverting. got feedback that maybe we don't want to merge 4-5,1-2 into 1-5",https://github.com/apache/httpd/commit/c5a97a06b4f442bc89c6131fca37d3fda1222421,Greg Ames,,,,2011-8-27,13,1,4,1,3,Local,0.006281407035176,10,1592,Jim Jagielski
CVE-2017-9788,20,NA,DoS +Info,2017-7-13,2018-1-4,6.4,None,Remote,Low,Not required,Partial,None,Partial,"In Apache httpd before 2.2.34 and 2.4.x before 2.4.27, the value placeholder in [Proxy-]Authorization headers of type 'Digest' was not initialized or reset before or between successive key=value assignments by mod_auth_digest. Providing an initial key with no '=' assignment could reflect the stale value of uninitialized pool memory used by the prior request, leading to leakage of potentially confidential information, and a segfault in other cases resulting in denial of service.",https://www.cvedetails.com/cve/CVE-2017-9788/,20170621,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.27: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-9788 (cve.mitre.org)
mod_auth_digest: Uninitialized memory reflection.  The value placeholder in [Proxy-]Authorization headers type 'Digest' was not initialized or reset before or between successive key=value assignments. [William Rowe]", No,2017-6-28,2017-7-11,2017-7-11,c5d3719133b9e5dab0d540c5aa03b2fdabc30395,modules/aaa/mod_auth_digest.c,Correct string scope to prevent duplicated values for subsequent tokens.,https://github.com/apache/httpd/commit/c5d3719133b9e5dab0d540c5aa03b2fdabc30395,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2017-7-5,11,2,4,2,2,Global,0.031522296258329,246,7804,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,c69e8953da7ba848b3cc4e8270123ac195539837,server/scoreboard.c,The source of some ills ... there is no reason to keep going if the scoreboard exists.  I suspect this should be a general cleanup as well [at the end of ap_create_scoreboard.]  But calling ap_run_pre_mpm with the process->pool should take care of a clobbered scoreboard shm on graceful restart.,https://github.com/apache/httpd/commit/c69e8953da7ba848b3cc4e8270123ac195539837,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-3-20,309,23,44,23,21,Local,0.098635886673662,282,2859,Ryan Bloom
CVE-2007-6422,399,NA,DoS,2008-1-8,2017-9-28,4,None,Remote,Low,Single system,None,None,Partial,"The balancer_handler function in mod_proxy_balancer in the Apache HTTP Server 2.2.0 through 2.2.6, when a threaded Multi-Processing Module is used, allows remote authenticated users to cause a denial of service (child process crash) via an invalid bb variable.",https://www.cvedetails.com/cve/CVE-2007-6422/,20071217,Yes. Fixed in Apache HTTP Server 2.2.8. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2007-6422 (cve.mitre.org)
Prevent crash in balancer manager if invalid balancer name is passed as parameter. Reported by SecurityReason. [Ruediger Pluem]",No,2007-12-12,2008-1-2,2008-1-19,c7752700bb27de1d0e1314cfa5b06bc6b5e398a1,CHANGES,* Added missing CVE number,https://github.com/apache/httpd/commit/c7752700bb27de1d0e1314cfa5b06bc6b5e398a1,Ruediger Pluem,,,,2007-12-29,2,2,3,2,1,Local,0.024392789126295,935,38331,Jim Jagielski
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,c7d1f475a84eadc6ff32e791f7ca6be5ae563bae,modules/generators/mod_cgi.c,"Log error message to the client without the path name.
",https://github.com/apache/httpd/commit/c7d1f475a84eadc6ff32e791f7ca6be5ae563bae,Bill Stoddard,,,IBM,2002-7-30,13,2,4,5,4,Local,0.125540025412961,494,3935,Ryan Bloom
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,c7d1f475a84eadc6ff32e791f7ca6be5ae563bae,modules/generators/mod_cgid.c,"Log error message to the client without the path name.
",https://github.com/apache/httpd/commit/c7d1f475a84eadc6ff32e791f7ca6be5ae563bae,Bill Stoddard,,,IBM,2002-7-30,13,3,5,5,4,Local,0.00616937745373,22,3566,Ryan Bloom
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,c9163b9bdf2c2c50851d3d23e446699ea0b309a9,modules/http/http_request.c,"Fix the case where we generate both a 401 and 413 and we go bonkers.
- If an error would drop the connection, we do not return the top-level error anymore as we will assume this new one takes precedence over the original error.  This also ensures that we will not read the input body (which is the point of returning these special error messages in the first place).
- The ap_discard_request_body return value in ap_die() must be checked to make sure we don't encounter this recursive case and print two errors.
Kudos to Jeff Trawick for his sample input which pointed this out.",https://github.com/apache/httpd/commit/c9163b9bdf2c2c50851d3d23e446699ea0b309a9,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-5-31,29,8,12,8,4,Local,0.022650818569186,101,4459,Roy T. Fielding
CVE-2016-0736,310,NA,,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,Partial,None,None,"In Apache HTTP Server versions 2.4.0 to 2.4.23, mod_session_crypto was encrypting its data/cookie using the configured ciphers with possibly either CBC or ECB modes of operation (AES256-CBC by default), hence no selectable or builtin authenticated encryption. This made it vulnerable to padding oracle attacks, particularly with CBC.",https://www.cvedetails.com/cve/CVE-2016-0736/,20151216,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-0736 (cve.mitre.org)
mod_session_crypto: Authenticate the session data/cookie with a MAC (SipHash) to prevent deciphering or tampering with a padding oracle attack.  [Yann Ylavic, Colm MacCarthaigh]", No,2016-1-20,2016-12-20,2016-12-20,c95d3c69e148af1a6730d43dc55a907c8f75e08b,modules/session/mod_session_crypto.c,mod_session_crypto: Authenticate the session data/cookie with a MAC (SipHash) to prevent deciphering or tampering with a padding oracle attack.,https://github.com/apache/httpd/commit/c95d3c69e148af1a6730d43dc55a907c8f75e08b,Yann Ylavic,ylavic,https://github.com/ylavic,,2016-12-6,77,192,228,192,36,Local,0.097602739726027,228,2336,Graham Leggett
CVE-2015-0228,20,NA,DoS,2015-3-7,2018-1-4,5,None,Remote,Low,Not required,None,None,Partial,The lua_websocket_read function in lua_request.c in the mod_lua module in the Apache HTTP Server through 2.4.12 allows remote attackers to cause a denial of service (child-process crash) by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function.,https://www.cvedetails.com/cve/CVE-2015-0228/,20141118,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-0228 (cve.mitre.org)
mod_lua: A maliciously crafted websockets PING after a script calls r:wsupgrade() can cause a child process crash. 
[Edward Lu <Chaosed0 gmail.com>]",No,2015-1-28,2015-2-4,2015-7-15,c9b63cebf3ca840989d0d02509eec121cbdf837b,CHANGES,"Fix bit-shifting of websockets frame fields that would yield wrong op codes when the FIN bit was set.  Results in PING not being recognized by mod_lua.  PR57524
Submitted By: Edward Lu
Committed By: covener",https://github.com/apache/httpd/commit/c9b63cebf3ca840989d0d02509eec121cbdf837b,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2015-2-4,1,4,4,16,5,Local,0.020443402259646,959,46910,Jim Jagielski
CVE-2015-0228,20,NA,DoS,2015-3-7,2018-1-4,5,None,Remote,Low,Not required,None,None,Partial,The lua_websocket_read function in lua_request.c in the mod_lua module in the Apache HTTP Server through 2.4.12 allows remote attackers to cause a denial of service (child-process crash) by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function.,https://www.cvedetails.com/cve/CVE-2015-0228/,20141118,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-0228 (cve.mitre.org)
mod_lua: A maliciously crafted websockets PING after a script calls r:wsupgrade() can cause a child process crash. 
[Edward Lu <Chaosed0 gmail.com>]",No,2015-1-28,2015-2-4,2015-7-15,c9b63cebf3ca840989d0d02509eec121cbdf837b,modules/lua/lua_request.c,"Fix bit-shifting of websockets frame fields that would yield wrong op codes when the FIN bit was set.  Results in PING not being recognized by mod_lua.  PR57524
Submitted By: Edward Lu
Committed By: covener",https://github.com/apache/httpd/commit/c9b63cebf3ca840989d0d02509eec121cbdf837b,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2015-2-4,1,12,17,16,5,Local,0.028061224489796,143,5096,Daniel Gruno
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,ca5a14603ebd2982727b8d2a7ea4e76de01fbf13,support/win32/wintty.c,"Clarify the wintty purpose and syntax. Still some todos: an option to just abort user feedback and close the window instantly upon loosing the stdin pipe, allow the stdin pipe to be tee'ed on win32, and still add some graceful error handling for a real-world deployment.",https://github.com/apache/httpd/commit/ca5a14603ebd2982727b8d2a7ea4e76de01fbf13,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-5-14,16,12,19,12,7,Local,1,347,347,William A. Rowe Jr
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,cbd008ff4bc5d52d3c553e7e122b22a4735dbdca,include/scoreboard.h,"Export ap_get_parent_scoreboard and ap_get_servers_scoreboard to be usable on Win32 and friends.
Submitted by:	Harrie Hazewinkel <harrie@covalent.net>
Reviewed by:	Aaron Bannert",https://github.com/apache/httpd/commit/cbd008ff4bc5d52d3c553e7e122b22a4735dbdca,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2001-12-7,309,2,4,4,4,Local,0.00625,4,640,dgaudet
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,cbd008ff4bc5d52d3c553e7e122b22a4735dbdca,server/scoreboard.c,"Export ap_get_parent_scoreboard and ap_get_servers_scoreboard to be usable on Win32 and friends.
Submitted by:	Harrie Hazewinkel <harrie@covalent.net>
Reviewed by:	Aaron Bannert",https://github.com/apache/httpd/commit/cbd008ff4bc5d52d3c553e7e122b22a4735dbdca,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2001-12-7,309,2,4,4,4,Local,0.001853568118628,4,2158,Ryan Bloom
CVE-2004-0113,,NA,DoS,2004-3-29,2017-10-9,5,None,Remote,Low,Not required,None,None,Partial,Memory leak in ssl_engine_io.c for mod_ssl in Apache 2 before 2.0.49 allows remote attackers to cause a denial of service (memory consumption) via plain HTTP requests to the SSL port of an SSL-enabled server.,https://www.cvedetails.com/cve/CVE-2004-0113/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0113 (cve.mitre.org)
     mod_ssl: Fix a memory leak in plain-HTTP-on-SSL-port handling.
     PR 27106.  [Joe Orton]

https://marc.info/?l=apache-cvs&m=107869699329638",No,,2004-2-20,2004-3-19,cd15b09daf32bccdda035d8a299cfb2e4248580a,modules/ssl/ssl_engine_io.c,"* modules/ssl/ssl_engine_io.c (ssl_io_filter_disable): Don't leak an SSL structure for each plain-HTTP-on-SSL-port request.
PR: 27106",https://github.com/apache/httpd/commit/cd15b09daf32bccdda035d8a299cfb2e4248580a,Joe Orton,notroj,,Red Hat,2004-2-25,5,1,1,1,0,Local,0.006252931061435,40,6397,William A. Rowe Jr
CVE-2015-3185,264,NA,Bypass,2015-7-20,2018-1-4,4.3,None,Remote,Medium,Not required,None,Partial,None,"The ap_some_auth_required function in server/request.c in the Apache HTTP Server 2.4.x before 2.4.14 does not consider that a Require directive may be associated with an authorization setting rather than an authentication setting, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging the presence of a module that relies on the 2.2 API behavior.",https://www.cvedetails.com/cve/CVE-2015-3185/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3185 (cve.mitre.org)
Replacement of ap_some_auth_required (unusable in Apache httpd 2.4) with new ap_some_authn_required and ap_force_authn hook.  [Ben Reser]",No,2013-8-5,2015-6-9,2015-7-15,cd2b7a26c776b0754fb98426a67804fd48118708,include/ap_mmn.h,"SECURITY: CVE-2015-3183 (cve.mitre.org)
Replacement of ap_some_auth_required (unusable in Apache httpd 2.4) with new ap_some_authn_required and ap_force_authn hook.
Submitted by: breser",https://github.com/apache/httpd/commit/cd2b7a26c776b0754fb98426a67804fd48118708,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2015-6-9,1,3,4,83,19,Global,0.140794223826715,312,2216,Roy T. Fielding
CVE-2015-3185,264,NA,Bypass,2015-7-20,2018-1-4,4.3,None,Remote,Medium,Not required,None,Partial,None,"The ap_some_auth_required function in server/request.c in the Apache HTTP Server 2.4.x before 2.4.14 does not consider that a Require directive may be associated with an authorization setting rather than an authentication setting, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging the presence of a module that relies on the 2.2 API behavior.",https://www.cvedetails.com/cve/CVE-2015-3185/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3185 (cve.mitre.org)
Replacement of ap_some_auth_required (unusable in Apache httpd 2.4) with new ap_some_authn_required and ap_force_authn hook.  [Ben Reser]",No,2013-8-5,2015-6-9,2015-7-15,cd2b7a26c776b0754fb98426a67804fd48118708,include/http_request.h,"SECURITY: CVE-2015-3183 (cve.mitre.org)
Replacement of ap_some_auth_required (unusable in Apache httpd 2.4) with new ap_some_authn_required and ap_force_authn hook.
Submitted by: breser",https://github.com/apache/httpd/commit/cd2b7a26c776b0754fb98426a67804fd48118708,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2015-6-9,1,24,24,83,19,Global,0.148365465213747,177,1193,Ryan Bloom
CVE-2015-3185,264,NA,Bypass,2015-7-20,2018-1-4,4.3,None,Remote,Medium,Not required,None,Partial,None,"The ap_some_auth_required function in server/request.c in the Apache HTTP Server 2.4.x before 2.4.14 does not consider that a Require directive may be associated with an authorization setting rather than an authentication setting, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging the presence of a module that relies on the 2.2 API behavior.",https://www.cvedetails.com/cve/CVE-2015-3185/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3185 (cve.mitre.org)
Replacement of ap_some_auth_required (unusable in Apache httpd 2.4) with new ap_some_authn_required and ap_force_authn hook.  [Ben Reser]",No,2013-8-5,2015-6-9,2015-7-15,cd2b7a26c776b0754fb98426a67804fd48118708,server/request.c,"SECURITY: CVE-2015-3183 (cve.mitre.org)
Replacement of ap_some_auth_required (unusable in Apache httpd 2.4) with new ap_some_authn_required and ap_force_authn hook.
Submitted by: breser",https://github.com/apache/httpd/commit/cd2b7a26c776b0754fb98426a67804fd48118708,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2015-6-9,1,56,74,83,19,Global,0.555567745474493,5064,9115,William A. Rowe Jr
CVE-2003-0192,,NA,,2003-8-18,2018-5-2,6.4,None,Remote,Low,Not required,None,Partial,Partial,"Apache 2 before 2.0.47, and certain versions of mod_ssl for Apache 1.3, do not properly handle ""certain sequences of per-directory renegotiations and the SSLCipherSuite directive being used to upgrade from a weak ciphersuite to a strong one,"" which could cause Apache to use the weak ciphersuite. 
A bug in the optional renegotiation code in mod_ssl included with Apache httpd can cause cipher suite restrictions to be ignored. This is triggered if optional renegotiation is used (SSLOptions +OptRenegotiate) along with verification of client certificates and a change to the cipher suite over the renegotiation.",https://www.cvedetails.com/cve/CVE-2003-0192/,20030401,Yes. Fixed in Apache HTTP Server 2.0.47: http://httpd.apache.org/security/vulnerabilities_20.html ,*) SECURITY [CAN-2003-0192]: Fixed a bug whereby certain sequences of per-directory renegotiations and the SSLCipherSuite directive being used to upgrade from a weak ciphersuite to a strong one could result in the weak ciphersuite being used in place of the strong one.  [Ben Laurie],No,2003-4-30,2003-7-9,2003-7-9,cd2c6d3a25ad8712c10d0b845010cccffca0f596,CHANGES,"Forward port patch for CAN-2003-0192 from 2.0.
SECURITY [CAN-2003-0192]: Fixed a bug whereby certain sequences of per-directory renegotiations and the SSLCipherSuite directive being used to upgrade from a weak ciphersuite to a strong one could result in the weak ciphersuite being used in place of the strong one.  [Ben Laurie]",https://github.com/apache/httpd/commit/cd2c6d3a25ad8712c10d0b845010cccffca0f596,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-7-9,1,6,6,7,1,Local,0.006105927552141,89,14576,Roy T. Fielding
CVE-2003-0192,,NA,,2003-8-18,2018-5-2,6.4,None,Remote,Low,Not required,None,Partial,Partial,"Apache 2 before 2.0.47, and certain versions of mod_ssl for Apache 1.3, do not properly handle ""certain sequences of per-directory renegotiations and the SSLCipherSuite directive being used to upgrade from a weak ciphersuite to a strong one,"" which could cause Apache to use the weak ciphersuite. 
A bug in the optional renegotiation code in mod_ssl included with Apache httpd can cause cipher suite restrictions to be ignored. This is triggered if optional renegotiation is used (SSLOptions +OptRenegotiate) along with verification of client certificates and a change to the cipher suite over the renegotiation.",https://www.cvedetails.com/cve/CVE-2003-0192/,20030401,Yes. Fixed in Apache HTTP Server 2.0.47: http://httpd.apache.org/security/vulnerabilities_20.html ,*) SECURITY [CAN-2003-0192]: Fixed a bug whereby certain sequences of per-directory renegotiations and the SSLCipherSuite directive being used to upgrade from a weak ciphersuite to a strong one could result in the weak ciphersuite being used in place of the strong one.  [Ben Laurie],No,2003-4-30,2003-7-9,2003-7-9,cd2c6d3a25ad8712c10d0b845010cccffca0f596,modules/ssl/ssl_engine_kernel.c,"Forward port patch for CAN-2003-0192 from 2.0.
SECURITY [CAN-2003-0192]: Fixed a bug whereby certain sequences of per-directory renegotiations and the SSLCipherSuite directive being used to upgrade from a weak ciphersuite to a strong one could result in the weak ciphersuite being used in place of the strong one.  [Ben Laurie]",https://github.com/apache/httpd/commit/cd2c6d3a25ad8712c10d0b845010cccffca0f596,Sander Striker,sstriker,https://github.com/sstriker,Apache,2003-7-9,1,1,2,7,1,Local,0.000356125356125,2,5616,Doug MacEachern
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,CHANGES,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,3,3,140,94,Global,0.023088979985532,1149,49764,Jim Jagielski
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,docs/log-message-tags/next-number,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,1,2,140,94,Global,0.065645514223195,30,457,Yann Ylavic
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/h2_conn.c,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,20,21,140,94,Global,0.744313395113732,1767,2374,Stefan Eissing
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/h2_conn.h,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,2,3,140,94,Global,0.64,128,200,Stefan Eissing
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/h2_mplx.c,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,18,37,140,94,Global,0.878730158730159,9688,11025,Stefan Eissing
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/h2_mplx.h,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,1,2,140,94,Global,0.641951219512195,658,1025,Stefan Eissing
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/h2_session.c,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,4,7,140,94,Global,0.864531582682754,9745,11272,Stefan Eissing
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/h2_stream.c,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,12,14,140,94,Global,0.921319292668389,4637,5033,Stefan Eissing
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/h2_switch.c,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,8,8,140,94,Global,0.951515151515152,314,330,Stefan Eissing
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/h2_util.c,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,55,118,140,94,Global,0.724409448818898,3128,4318,Stefan Eissing
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/h2_workers.c,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,4,7,140,94,Global,0.78328530259366,1359,1735,Stefan Eissing
CVE-2017-9789,416,NA,,2017-7-13,2017-11-13,5,None,Remote,Low,Not required,None,None,Partial,"When under stress, closing many connections, the HTTP/2 handling code in Apache httpd 2.4.26 would sometimes access memory after it has been freed, resulting in potentially erratic behaviour.",https://www.cvedetails.com/cve/CVE-2017-9789/,20170621,Yes. Fixed in Apache HTTP Server 2.4.27: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-9789 (cve.mitre.org)
mod_http2: Read after free. When under stress, closing many connections, the HTTP/2 handling code would sometimes access memory after it has been freed, resulting in potentially erratic behaviour. [Stefan Eissing]", No,2017-6-20,2017-7-11,2017-7-11,cd85eac963edb7d9d2d1cfd848de2b985ae0c489,modules/http2/mod_http2.c,"On the trunk: mod_http2: disable and give warning when mpm_prefork is encountered.  The server will continue to work, but HTTP/2 will no longer be negotiated.",https://github.com/apache/httpd/commit/cd85eac963edb7d9d2d1cfd848de2b985ae0c489,Stefan Eissing,,,greenbytes GmbH,2017-7-3,1,12,12,140,94,Global,0.619273301737757,392,633,Stefan Eissing
CVE-2014-0098,20,NA,DoS,2014-3-18,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,The log_cookie function in mod_log_config.c in the mod_log_config module in the Apache HTTP Server before 2.4.8 allows remote attackers to cause a denial of service (segmentation fault and daemon crash) via a crafted cookie that is not properly handled during truncation.,https://www.cvedetails.com/cve/CVE-2014-0098/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.27, 2.4.9: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0098 (cve.mitre.org)
Clean up cookie logging with fewer redundant string parsing passes. Log only cookies with a value assignment. Prevents segfaults when logging truncated cookies.
[William Rowe, Ruediger Pluem, Jim Jagielski]",No,2014-2-25,2014-3-17,2014-3-26,cda114a3c19c8f1f525eee7764818fea5a4a7c97,modules/loggers/mod_log_config.c,Revert r1574518 to get 2.2/2.4/2.x all back in sync for a single fix,https://github.com/apache/httpd/commit/cda114a3c19c8f1f525eee7764818fea5a4a7c97,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2014-3-7,6,2,5,2,3,Local,0.084136933461909,349,4148,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,modules/proxy/mod_proxy.c,"Fixes to proxy, after util-uri move, plus fixes to the .mak file.",https://github.com/apache/httpd/commit/ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,Victor J. Orlikowski,,,IBM,2001-5-22,16,3,6,38,38,Global,0.002161383285303,6,2776,Chuck Murcko
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,modules/proxy/mod_proxy.h,"Fixes to proxy, after util-uri move, plus fixes to the .mak file.",https://github.com/apache/httpd/commit/ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,Victor J. Orlikowski,,,IBM,2001-5-22,16,1,2,38,38,Global,0.001696352841391,2,1179,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,modules/proxy/mod_proxy.mak,"Fixes to proxy, after util-uri move, plus fixes to the .mak file.",https://github.com/apache/httpd/commit/ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,Victor J. Orlikowski,,,IBM,2001-5-22,16,20,40,38,38,Global,0.065252854812398,40,613,William A. Rowe Jr
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,modules/proxy/proxy_connect.c,"Fixes to proxy, after util-uri move, plus fixes to the .mak file.",https://github.com/apache/httpd/commit/ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,Victor J. Orlikowski,,,IBM,2001-5-22,16,4,8,38,38,Global,0.005759539236861,8,1389,Graham Leggett
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,modules/proxy/proxy_ftp.c,"Fixes to proxy, after util-uri move, plus fixes to the .mak file.",https://github.com/apache/httpd/commit/ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,Victor J. Orlikowski,,,IBM,2001-5-22,16,6,12,38,38,Global,0.002086811352254,15,7188,Graham Leggett
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,modules/proxy/proxy_http.c,"Fixes to proxy, after util-uri move, plus fixes to the .mak file.",https://github.com/apache/httpd/commit/ce5bd91d015ec482bbb4dae9a57ee853bf042fd1,Victor J. Orlikowski,,,IBM,2001-5-22,16,4,8,38,38,Global,0.00525240735337,18,3427,Graham Leggett
CVE-2003-0132,,NA,DoS,2003-4-11,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"A memory leak in Apache 2.0 through 2.0.44 allows remote attackers to cause a denial of service (memory consumption) via large chunks of linefeed characters, which causes Apache to allocate 80 bytes for each linefeed.",https://www.cvedetails.com/cve/CVE-2003-0132/,20030313,Yes. Fixed in Apache HTTP Server 2.0.45: http://httpd.apache.org/security/vulnerabilities_20.html,"Simplify and shorten the code path for scanning request headers.Simplify and shorten the code path for scanning request headers.
This is the scanning logic that was subject to an unlimited search for a non-blank line between requests.  These lines each consumed 80 bytes - until memory was exhausted in the DoS attack identified by David Endler
[http://archive.apache.org/dist/httpd/patches/apply_to_2.0.44/denial_of_service_fix.patch]",No,,2004-4-2,2004-4-2,cf9ea6f999c9e2403cffa84aae18c82afc17e561,server/protocol.c,"ap_get_mime_headers: tighten up the null termination of header line which is too long.  getline can return a smaller length that what it actually read in that case.
The check for len > limit_fieldsize isn't needed, but we do need to insure that getline actually allocated a buffer (and set len) in the case where the first socket input buffer is already bigger than the limit.",https://github.com/apache/httpd/commit/cf9ea6f999c9e2403cffa84aae18c82afc17e561,Greg Ames,,,,2002-12-11,351,2,7,2,5,Local,0.018112081823993,85,4693,Ryan Bloom
CVE-2017-15710,787,NA,DoS,2018-3-26,2018-6-2,5,None,Remote,Low,Not required,None,None,Partial,"In Apache httpd 2.0.23 to 2.0.65, 2.2.0 to 2.2.34, and 2.4.0 to 2.4.29, mod_authnz_ldap, if configured with AuthLDAPCharsetConfig, uses the Accept-Language header value to lookup the right charset encoding when verifying the user's credentials. If the header value is not present in the charset conversion table, a fallback mechanism is used to truncate it to a two characters value to allow a quick retry (for example, 'en-US' is truncated to 'en'). A header value of less than two characters forces an out of bound write of one NUL byte to a memory location that is not part of the string. In the worst case, quite unlikely, the process would crash which could be used as a Denial of Service attack. In the more likely case, this memory is already reserved for future use and the issue has no effect at all.",https://www.cvedetails.com/cve/CVE-2017-15710/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-15710 (cve.mitre.org)
Out of bound write in mod_authnz_ldap with AuthLDAPCharsetConfig enabled
[Eric Covener, Luca Toscano, Yann Ylavic]", No,2017-12-7,2018-3-21,2018-3-21,d040984639695c6b59e3c7e22b113913505574da,CHANGES,"mod_authnz_ldap: Fix language long names detection as short name.
Make sure the long name format is relevent before converting it.",https://github.com/apache/httpd/commit/d040984639695c6b59e3c7e22b113913505574da,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-15,1,3,3,10,3,Local,0.016972057712946,854,50318,Jim Jagielski
CVE-2017-15710,787,NA,DoS,2018-3-26,2018-6-2,5,None,Remote,Low,Not required,None,None,Partial,"In Apache httpd 2.0.23 to 2.0.65, 2.2.0 to 2.2.34, and 2.4.0 to 2.4.29, mod_authnz_ldap, if configured with AuthLDAPCharsetConfig, uses the Accept-Language header value to lookup the right charset encoding when verifying the user's credentials. If the header value is not present in the charset conversion table, a fallback mechanism is used to truncate it to a two characters value to allow a quick retry (for example, 'en-US' is truncated to 'en'). A header value of less than two characters forces an out of bound write of one NUL byte to a memory location that is not part of the string. In the worst case, quite unlikely, the process would crash which could be used as a Denial of Service attack. In the more likely case, this memory is already reserved for future use and the issue has no effect at all.",https://www.cvedetails.com/cve/CVE-2017-15710/,20171021,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2017-15710 (cve.mitre.org)
Out of bound write in mod_authnz_ldap with AuthLDAPCharsetConfig enabled
[Eric Covener, Luca Toscano, Yann Ylavic]", No,2017-12-7,2018-3-21,2018-3-21,d040984639695c6b59e3c7e22b113913505574da,modules/aaa/mod_authnz_ldap.c,"mod_authnz_ldap: Fix language long names detection as short name.
Make sure the long name format is relevent before converting it.",https://github.com/apache/httpd/commit/d040984639695c6b59e3c7e22b113913505574da,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-15,1,7,10,10,3,Local,0.001947040498442,10,5136,Bradley Nicholes
CVE-2004-0885,,NA,Bypass,2004-11-3,2017-10-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"The mod_ssl module in Apache 2.0.35 through 2.0.52, when using the ""SSLCipherSuite"" directive in directory or location context, allows remote clients to bypass intended restrictions by using any cipher suite that is allowed by the virtual host configuration.",https://www.cvedetails.com/cve/CVE-2004-0885/,20040922,Yes. Fixed in Apache HTTP Server 2.0.53: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CAN-2004-0885 (cve.mitre.org)
mod_ssl: Fix a bug which allowed an SSLCipherSuite setting to be bypassed during an SSL renegotiation.  PR 31505.  
     [Hartmut Keil <Hartmut.Keil adnovum.ch>, Joe Orton]",No,,2004-10-1,2005-2-8,d107d7d6af0fa59166ea547a09a3925fb74e498e,CHANGES,"Fix CAN-2004-0885:
* modules/ssl/ssl_engine_kernel.c (ssl_hook_Access): Ensure that a correct cipher suite has been negotiated, else deny access.
* modules/ssl/ssl_engine_init.c (ssl_init_ctx_protocol): With OpenSSL 0.9.7, prevent session resumption during a renegotiation to force the client to negotiate a new (and acceptable) cipher suite.
Submitted by: Hartmut Keil <Hartmut.Keil adnovum.ch>, Joe Orton",https://github.com/apache/httpd/commit/d107d7d6af0fa59166ea547a09a3925fb74e498e,Joe Orton,notroj,,Red Hat,2004-10-8,1,5,5,28,0,Local,0.016019549280478,295,18415,Roy T. Fielding
CVE-2004-0885,,NA,Bypass,2004-11-3,2017-10-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"The mod_ssl module in Apache 2.0.35 through 2.0.52, when using the ""SSLCipherSuite"" directive in directory or location context, allows remote clients to bypass intended restrictions by using any cipher suite that is allowed by the virtual host configuration.",https://www.cvedetails.com/cve/CVE-2004-0885/,20040922,Yes. Fixed in Apache HTTP Server 2.0.53: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CAN-2004-0885 (cve.mitre.org)
mod_ssl: Fix a bug which allowed an SSLCipherSuite setting to be bypassed during an SSL renegotiation.  PR 31505.  
     [Hartmut Keil <Hartmut.Keil adnovum.ch>, Joe Orton]",No,,2004-10-1,2005-2-8,d107d7d6af0fa59166ea547a09a3925fb74e498e,modules/ssl/ssl_engine_kernel.c,"Fix CAN-2004-0885:
* modules/ssl/ssl_engine_kernel.c (ssl_hook_Access): Ensure that a correct cipher suite has been negotiated, else deny access.
* modules/ssl/ssl_engine_init.c (ssl_init_ctx_protocol): With OpenSSL 0.9.7, prevent session resumption during a renegotiation to force the client to negotiate a new (and acceptable) cipher suite.
Submitted by: Hartmut Keil <Hartmut.Keil adnovum.ch>, Joe Orton",https://github.com/apache/httpd/commit/d107d7d6af0fa59166ea547a09a3925fb74e498e,Joe Orton,notroj,,Red Hat,2004-10-8,1,15,15,28,0,Local,0.008318890814558,48,5770,Doug MacEachern
CVE-2011-3607,189,NA,Overflow Gain privileges,2011-11-8,2018-1-8,4.4,User,Local,Medium,Not required,Partial,Partial,Partial,"Integer overflow in the ap_pregsub function in server/util.c in the Apache HTTP Server 2.0.x through 2.0.64 and 2.2.x through 2.2.21, when the mod_setenvif module is enabled, allows local users to gain privileges via a .htaccess file with a crafted SetEnvIf directive, in conjunction with a crafted HTTP request header, leading to a heap-based buffer overflow.",https://www.cvedetails.com/cve/CVE-2011-3607/,20110921,"Yes. Fixed in Apache HTTP Server 2.2.22, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html","*) SECURITY: CVE-2011-3607 (cve.mitre.org)
Fix integer overflow in ap_pregsub() which, when the mod_setenvif module is enabled, could allow local users to gain privileges via a .htaccess file. [Stefan Fritsch, Greg Ames]

       NOTE: it remains possible to exhaust all memory using a carefully crafted .htaccess rule, which will not be addressed in 2.0, enabling  processing of .htaccess files authored by untrusted users is the root of such security risks.  Upgrade to httpd 2.2.25 or later to limit this specific risk.",No,,,,d265c519032088ae939290c53f91207c115897b1,CHANGES,"Fix integer overflow in ap_pregsub. This can be triggered e.g. with mod_setenvif via a malicious .htaccess
CVE-2011-3607
http://www.halfdog.net/Security/2011/ApacheModSetEnvIfIntegerOverflow/",https://github.com/apache/httpd/commit/d265c519032088ae939290c53f91207c115897b1,Stefan Fritsch,,,GeNUA mbH,2011-11-7,1,4,4,6,0,Local,0.013857310389393,579,41783,Jim Jagielski
CVE-2011-3607,189,NA,Overflow Gain privileges,2011-11-8,2018-1-8,4.4,User,Local,Medium,Not required,Partial,Partial,Partial,"Integer overflow in the ap_pregsub function in server/util.c in the Apache HTTP Server 2.0.x through 2.0.64 and 2.2.x through 2.2.21, when the mod_setenvif module is enabled, allows local users to gain privileges via a .htaccess file with a crafted SetEnvIf directive, in conjunction with a crafted HTTP request header, leading to a heap-based buffer overflow.",https://www.cvedetails.com/cve/CVE-2011-3607/,20110921,"Yes. Fixed in Apache HTTP Server 2.2.22, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html","*) SECURITY: CVE-2011-3607 (cve.mitre.org)
Fix integer overflow in ap_pregsub() which, when the mod_setenvif module is enabled, could allow local users to gain privileges via a .htaccess file. [Stefan Fritsch, Greg Ames]

       NOTE: it remains possible to exhaust all memory using a carefully crafted .htaccess rule, which will not be addressed in 2.0, enabling  processing of .htaccess files authored by untrusted users is the root of such security risks.  Upgrade to httpd 2.2.25 or later to limit this specific risk.",No,,,,d265c519032088ae939290c53f91207c115897b1,server/util.c,"Fix integer overflow in ap_pregsub. This can be triggered e.g. with mod_setenvif via a malicious .htaccess
CVE-2011-3607
http://www.halfdog.net/Security/2011/ApacheModSetEnvIfIntegerOverflow/",https://github.com/apache/httpd/commit/d265c519032088ae939290c53f91207c115897b1,Stefan Fritsch,,,GeNUA mbH,2011-11-7,1,2,2,6,0,Local,0.105706021561925,804,7606,Roy T. Fielding
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,d2e992c473f64ca077f420b27930a1f081f8a6b2,CHANGES,"Rewrite ap_get_client_block to rely on assumptions that have been solidified after this code was originally written. Namely:
- AP_MODE_READBYTES will only return a brigade representing AT MOST bytes of data.  It can NOT return MORE than requested.
- APR_BLOCK_READ is respected - it is considered a design error of a filter if it returns without reading something.
- apr_brigade_flatten is available to do the heavy lifting of the copying into a flat buffer (as hinted at by the removed comment).
Tested with httpd-test.",https://github.com/apache/httpd/commit/d2e992c473f64ca077f420b27930a1f081f8a6b2,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-6-17,29,2,3,30,64,Local,0.023501006036217,292,12425,Roy T. Fielding
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,d2e992c473f64ca077f420b27930a1f081f8a6b2,modules/http/http_protocol.c,"Rewrite ap_get_client_block to rely on assumptions that have been solidified after this code was originally written. Namely:
- AP_MODE_READBYTES will only return a brigade representing AT MOST bytes of data.  It can NOT return MORE than requested.
- APR_BLOCK_READ is respected - it is considered a design error of a filter if it returns without reading something.
- apr_brigade_flatten is available to do the heavy lifting of the copying into a flat buffer (as hinted at by the removed comment).
Tested with httpd-test.",https://github.com/apache/httpd/commit/d2e992c473f64ca077f420b27930a1f081f8a6b2,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-6-17,29,28,91,30,64,Local,0.076590981771666,1437,18762,Ryan Bloom
CVE-2012-4557,399,NA,DoS,2012-11-30,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,"The mod_proxy_ajp module in the Apache HTTP Server 2.2.12 through 2.2.21 places a worker node into an error state upon detection of a long request-processing time, which allows remote attackers to cause a denial of service (worker consumption) via an expensive request.",https://www.cvedetails.com/cve/CVE-2012-4557/,20120821,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,*) mod_proxy_ajp: Try to prevent a single long request from marking a worker in error. [Jean-Frederic Clere],No,2012-10-11,2012-1-4,2012-1-31,d32156d4c7b6af0063593f3c727ca0ad7afad8af,modules/proxy/ajp_link.c,try to prevent a single long request marking a worker in error.,https://github.com/apache/httpd/commit/d32156d4c7b6af0063593f3c727ca0ad7afad8af,Jean-Frederic Clere,,,,2011-4-14,NA,1,2,10,1,Global,0.641148325358852,134,209,Jean-Frederic Clere
CVE-2012-4557,399,NA,DoS,2012-11-30,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,"The mod_proxy_ajp module in the Apache HTTP Server 2.2.12 through 2.2.21 places a worker node into an error state upon detection of a long request-processing time, which allows remote attackers to cause a denial of service (worker consumption) via an expensive request.",https://www.cvedetails.com/cve/CVE-2012-4557/,20120821,Yes. Fixed in Apache HTTP Server 2.2.22. http://httpd.apache.org/security/vulnerabilities_22.html ,*) mod_proxy_ajp: Try to prevent a single long request from marking a worker in error. [Jean-Frederic Clere],No,2012-10-11,2012-1-4,2012-1-31,d32156d4c7b6af0063593f3c727ca0ad7afad8af,modules/proxy/mod_proxy_ajp.c,try to prevent a single long request marking a worker in error.,https://github.com/apache/httpd/commit/d32156d4c7b6af0063593f3c727ca0ad7afad8af,Jean-Frederic Clere,,,,2011-4-14,NA,9,9,10,1,Global,0.119137780367026,409,3433,William A. Rowe Jr
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d41edaec98dda3dc6f8a939663692ea8c819dc03,server/mpm_common.c,Remove the MPM_SYNC_CHILD_TABLE macro since there is no longer a scoreboard file that needs to be synched.,https://github.com/apache/httpd/commit/d41edaec98dda3dc6f8a939663692ea8c819dc03,Paul J. Reder,,,IBM Corp.,2002-3-29,309,0,1,0,7,Local,0.003723008190618,5,1343,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d41edaec98dda3dc6f8a939663692ea8c819dc03,server/mpm/beos/mpm.h,Remove the MPM_SYNC_CHILD_TABLE macro since there is no longer a scoreboard file that needs to be synched.,https://github.com/apache/httpd/commit/d41edaec98dda3dc6f8a939663692ea8c819dc03,Paul J. Reder,,,IBM Corp.,2002-3-29,309,0,1,0,7,Local,0.008130081300813,1,123,David Reid
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d41edaec98dda3dc6f8a939663692ea8c819dc03,server/mpm/experimental/perchild/mpm.h,Remove the MPM_SYNC_CHILD_TABLE macro since there is no longer a scoreboard file that needs to be synched.,https://github.com/apache/httpd/commit/d41edaec98dda3dc6f8a939663692ea8c819dc03,Paul J. Reder,,,IBM Corp.,2002-3-29,309,0,1,0,7,Local,0.008695652173913,1,115,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d41edaec98dda3dc6f8a939663692ea8c819dc03,server/mpm/netware/mpm.h,Remove the MPM_SYNC_CHILD_TABLE macro since there is no longer a scoreboard file that needs to be synched.,https://github.com/apache/httpd/commit/d41edaec98dda3dc6f8a939663692ea8c819dc03,Paul J. Reder,,,IBM Corp.,2002-3-29,309,0,1,0,7,Local,0.009090909090909,1,110,Bradley Nicholes
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d41edaec98dda3dc6f8a939663692ea8c819dc03,server/mpm/perchild/mpm.h,Remove the MPM_SYNC_CHILD_TABLE macro since there is no longer a scoreboard file that needs to be synched.,https://github.com/apache/httpd/commit/d41edaec98dda3dc6f8a939663692ea8c819dc03,Paul J. Reder,,,IBM Corp.,2002-3-29,309,0,1,0,7,Local,0.008695652173913,1,115,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d41edaec98dda3dc6f8a939663692ea8c819dc03,server/mpm/prefork/mpm.h,Remove the MPM_SYNC_CHILD_TABLE macro since there is no longer a scoreboard file that needs to be synched.,https://github.com/apache/httpd/commit/d41edaec98dda3dc6f8a939663692ea8c819dc03,Paul J. Reder,,,IBM Corp.,2002-3-29,309,0,1,0,7,Local,0.009259259259259,1,108,Ryan Bloom
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,d5274f47dbf03cd0f533be4fedd1ec9ee588fcf0,server/mpm/winnt/mpm_winnt.c,"Refactor the ready_event so that it's scope is the absolute minimum necessary... we were leaking ready_event's.  Close it in the parent and child the moment it is no longer needed.
Also, fail more gracefully if the child process terminates before we ever receive the ready_event [should improve robustness significantly.]",https://github.com/apache/httpd/commit/d5274f47dbf03cd0f533be4fedd1ec9ee588fcf0,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-27,13,36,46,36,10,Global,0.233746451568234,3376,14443,Bill Stoddard
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,d52c6998d40e09918d6dc21e0bec95ab16d61e7f,modules/http/byterange_filter.c,fix new breakage introduced by r1161767,https://github.com/apache/httpd/commit/d52c6998d40e09918d6dc21e0bec95ab16d61e7f,Stefan Fritsch,,,GeNUA mbH,2011-8-26,13,1,5,1,4,Local,0.01256038647343,13,1035,Justin Erenkrantz
CVE-2003-1418,200,NA,+Info,2003-12-31,2017-10-19,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache HTTP Server 1.3.22 through 1.3.27 on OpenBSD allows remote attackers to obtain sensitive information via (1) the ETag header, which reveals the inode number, or (2) multipart MIME boundary, which reveals child process IDs (PID).",https://www.cvedetails.com/cve/CVE-2003-1418/,20071019,No,,,,,,d57bee112f5208e86d64284e512a61325604bc7d,modules/http/byterange_filter.c,* modules/http/byterange_filter.c (ap_byterange_filter): Don't reveal the pid in the boundary delimiter (part of CVE-2003-1418).,https://github.com/apache/httpd/commit/d57bee112f5208e86d64284e512a61325604bc7d,Joe Orton,notroj,,Red Hat,2011-9-5,1,1,2,1,1,Local,0.068730325288562,131,1906,Jim Jagielski
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,d58cae85c71b45e644c51b36f1cc0baadb4a3ef7,modules/http/mod_mime.c,"Solve the major underlying problem of content negotation by passing mod_negotiation the 'unresolved' parts of the path in a ->notes array ap-mime-exceptions-list.
  If mod_mime is given index.html.bad.en it will add index and bad to the list (presuming html and en are both defined.)
  mod_negotiation will decide if index and bad are it's fault (the user requested index.html.bad[.*]) or if it's a messed up file (say .old, .junk, or .bak).
  The next patch to allow any-order negotiation should check each of these list elements, so that asking for index.bad in the prior example would succeed.  Right now that request would fail because .html was recognized, so it's not in the exceptions list. This patch uses a simple strcmp to the given name.
  Also, this patch allows any mod_mime processed file to be served, even if the content type cannot be determined (think README.en). This is crippled by the client expect headers and omitting the default content type.
  PLEASE vet this code carefully.",https://github.com/apache/httpd/commit/d58cae85c71b45e644c51b36f1cc0baadb4a3ef7,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-3,4,27,48,58,22,Local,0.164050632911392,324,1975,Roy T. Fielding
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,d58cae85c71b45e644c51b36f1cc0baadb4a3ef7,modules/mappers/mod_negotiation.c,"Solve the major underlying problem of content negotation by passing mod_negotiation the 'unresolved' parts of the path in a ->notes array ap-mime-exceptions-list.
  If mod_mime is given index.html.bad.en it will add index and bad to the list (presuming html and en are both defined.)
  mod_negotiation will decide if index and bad are it's fault (the user requested index.html.bad[.*]) or if it's a messed up file (say .old, .junk, or .bak).
  The next patch to allow any-order negotiation should check each of these list elements, so that asking for index.bad in the prior example would succeed.  Right now that request would fail because .html was recognized, so it's not in the exceptions list. This patch uses a simple strcmp to the given name.
  Also, this patch allows any mod_mime processed file to be served, even if the content type cannot be determined (think README.en). This is crippled by the client expect headers and omitting the default content type.
  PLEASE vet this code carefully.",https://github.com/apache/httpd/commit/d58cae85c71b45e644c51b36f1cc0baadb4a3ef7,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-3,4,31,32,58,22,Global,0.043996819507024,166,3773,Roy T. Fielding
CVE-2013-1862,310,NA,Exec Code,2013-6-10,2017-9-18,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"mod_rewrite.c in the mod_rewrite module in the Apache HTTP Server 2.2.x before 2.2.25 writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to execute arbitrary commands via an HTTP request containing an escape sequence for a terminal emulator.",https://www.cvedetails.com/cve/CVE-2013-1862/,20130219,Yes. Fixed in Apache HTTP Server 2.2.25. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2013-1862 (cve.mitre.org)
mod_rewrite: Ensure that client data written to the RewriteLog is escaped to prevent terminal escape sequences from entering the log file.  [Eric Covener, Jeff Trawick, Joe Orton]",No,2013-3-13,2013-4-19,2013-7-22,d5c34b1b2309a049ee1f8d399e3c206436fcd366,modules/loggers/mod_log_config.c,"Fix crash in mod_log_config when logging request end time for a failed request (LogFormat contains %{end}t).
The request_config for mod_log_config might not be initialized. PR 54828.",https://github.com/apache/httpd/commit/d5c34b1b2309a049ee1f8d399e3c206436fcd366,Rainer Jung,,,kippdata,2013-4-14,19,4,4,4,0,Local,0.035282745287579,146,4138,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,d67ff829fdd30846aeb50c849271a5955a8d4324,include/util_uri.h,Moved to the apr-util library.,https://github.com/apache/httpd/commit/d67ff829fdd30846aeb50c849271a5955a8d4324,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,0,207,0,948,Global,0.625776397515528,403,644,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,d67ff829fdd30846aeb50c849271a5955a8d4324,server/gen_uri_delims.c,Moved to the apr-util library.,https://github.com/apache/httpd/commit/d67ff829fdd30846aeb50c849271a5955a8d4324,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,0,89,0,948,Global,0.978260869565217,180,184,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,d67ff829fdd30846aeb50c849271a5955a8d4324,server/gen_uri_delims.dsp,Moved to the apr-util library.,https://github.com/apache/httpd/commit/d67ff829fdd30846aeb50c849271a5955a8d4324,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,0,90,0,948,Global,0.621019108280255,195,314,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,d67ff829fdd30846aeb50c849271a5955a8d4324,server/gen_uri_delims.mak,Moved to the apr-util library.,https://github.com/apache/httpd/commit/d67ff829fdd30846aeb50c849271a5955a8d4324,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,0,203,0,948,Global,0.359929078014184,203,564,William A. Rowe Jr
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,d67ff829fdd30846aeb50c849271a5955a8d4324,server/util_uri.c,Moved to the apr-util library.,https://github.com/apache/httpd/commit/d67ff829fdd30846aeb50c849271a5955a8d4324,Roy T. Fielding,royfielding,https://github.com/royfielding,Adobe,2001-5-22,16,0,359,0,948,Global,0.69579945799458,1027,1476,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d6a5e79902966077a36706d4ea9cb851d80c3976,CHANGES,"Fix a mod_cgid problem that left daemon processes stranded in some server restart scenarios.
It relied on getting SIGHUP to die, but it wasn't careful about establishing the SIGHUP handling it needed so after apachectl restart, SIGHUP was ignored since the new cgid daemon process inherited a signal(SIGHUP,SIG_IGN) done by the MPM during its restart logic.",https://github.com/apache/httpd/commit/d6a5e79902966077a36706d4ea9cb851d80c3976,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-3-22,309,3,3,17,2,Local,0.037387964148528,438,11715,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d6a5e79902966077a36706d4ea9cb851d80c3976,modules/generators/mod_cgid.c,"Fix a mod_cgid problem that left daemon processes stranded in some server restart scenarios.
It relied on getting SIGHUP to die, but it wasn't careful about establishing the SIGHUP handling it needed so after apachectl restart, SIGHUP was ignored since the new cgid daemon process inherited a signal(SIGHUP,SIG_IGN) done by the MPM during its restart logic.",https://github.com/apache/httpd/commit/d6a5e79902966077a36706d4ea9cb851d80c3976,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-3-22,309,14,16,17,2,Local,0.187712256869404,608,3239,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d6c175e9cd984b183dfc1673101e122e7db925b0,modules/mappers/mod_rewrite.c,"Fix mod_rewrite hang when APR uses SysV Semaphores. Before we were silently failing when locking/unlocking the mutex, since httpd child processes didn't have permissions to access the root-created semaphore.

PR: 8143",https://github.com/apache/httpd/commit/d6c175e9cd984b183dfc1673101e122e7db925b0,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-5-6,309,26,32,27,7,Global,0.048432353299988,397,8197,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d6c175e9cd984b183dfc1673101e122e7db925b0,modules/mappers/mod_rewrite.h,"Fix mod_rewrite hang when APR uses SysV Semaphores. Before we were silently failing when locking/unlocking the mutex, since httpd child processes didn't have permissions to access the root-created semaphore.

PR: 8143",https://github.com/apache/httpd/commit/d6c175e9cd984b183dfc1673101e122e7db925b0,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-5-6,309,1,2,27,7,Global,0.005687203791469,6,1055,Roy T. Fielding
CVE-2005-1268,,NA,DoS Overflow,2005-8-5,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Off-by-one error in the mod_ssl Certificate Revocation List (CRL) verification callback in Apache, when configured to use a CRL, allows remote attackers to cause a denial of service (child process crash) via a CRL that causes a buffer overflow of one null byte.",https://www.cvedetails.com/cve/CVE-2005-1268/,20050425,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-1268 (cve.mitre.org)
mod_ssl: Fix off-by-one overflow whilst printing CRL information at ""LogLevel debug"" which could be triggered if configured to use a ""malicious"" CRL.  PR 35081.  [Marc Stern <mstern csc.com>]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-6-8,2005-10-14,d6d4ae452d2fa3555026653e7e3b7f799fcaf474,CHANGES,"* modules/ssl/ssl_engine_kernel.c (ssl_callback_SSLVerify_CRL): Fix off-by-one.
PR: 35081
Submitted by: Marc Stern <mstern csc.com>",https://github.com/apache/httpd/commit/d6d4ae452d2fa3555026653e7e3b7f799fcaf474,Joe Orton,notroj,,Red Hat,2005-6-3,1,5,5,6,1,Local,0.028863624565229,556,19263,Roy T. Fielding
CVE-2005-1268,,NA,DoS Overflow,2005-8-5,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Off-by-one error in the mod_ssl Certificate Revocation List (CRL) verification callback in Apache, when configured to use a CRL, allows remote attackers to cause a denial of service (child process crash) via a CRL that causes a buffer overflow of one null byte.",https://www.cvedetails.com/cve/CVE-2005-1268/,20050425,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2005-1268 (cve.mitre.org)
mod_ssl: Fix off-by-one overflow whilst printing CRL information at ""LogLevel debug"" which could be triggered if configured to use a ""malicious"" CRL.  PR 35081.  [Marc Stern <mstern csc.com>]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-6-8,2005-10-14,d6d4ae452d2fa3555026653e7e3b7f799fcaf474,modules/ssl/ssl_engine_kernel.c,"* modules/ssl/ssl_engine_kernel.c (ssl_callback_SSLVerify_CRL): Fix off-by-one.
PR: 35081
Submitted by: Marc Stern <mstern csc.com>",https://github.com/apache/httpd/commit/d6d4ae452d2fa3555026653e7e3b7f799fcaf474,Joe Orton,notroj,,Red Hat,2005-6-3,1,1,2,6,1,Local,0.026395939086294,156,5910,Doug MacEachern
CVE-2017-3167,287,NA,Bypass,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.",https://www.cvedetails.com/cve/CVE-2017-3167/,20161205,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-3167 (cve.mitre.org)
Use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.", No,2017-2-6,2017-6-19,2017-7-11,d71cb9410f498589a8c1cd03b727bc0d12d4f296,CHANGES,"core: deprecate and replace ap_get_basic_auth_pw
  *) core: Deprecate ap_get_basic_auth_pw() and add  ap_get_basic_auth_components(). 
Submitted By: Emmanuel Dreyfus <manu netbsd.org>, Jacob Champion, Eric Covener",https://github.com/apache/httpd/commit/d71cb9410f498589a8c1cd03b727bc0d12d4f296,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-5-26,27,4,4,93,5,Global,0.026660759952478,1324,49661,Jim Jagielski
CVE-2017-3167,287,NA,Bypass,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.",https://www.cvedetails.com/cve/CVE-2017-3167/,20161205,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-3167 (cve.mitre.org)
Use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.", No,2017-2-6,2017-6-19,2017-7-11,d71cb9410f498589a8c1cd03b727bc0d12d4f296,include/ap_mmn.h,"core: deprecate and replace ap_get_basic_auth_pw
  *) core: Deprecate ap_get_basic_auth_pw() and add  ap_get_basic_auth_components(). 
Submitted By: Emmanuel Dreyfus <manu netbsd.org>, Jacob Champion, Eric Covener",https://github.com/apache/httpd/commit/d71cb9410f498589a8c1cd03b727bc0d12d4f296,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-5-26,27,3,4,93,5,Global,0.048321048321048,118,2442,William A. Rowe Jr
CVE-2017-3167,287,NA,Bypass,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.",https://www.cvedetails.com/cve/CVE-2017-3167/,20161205,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-3167 (cve.mitre.org)
Use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.", No,2017-2-6,2017-6-19,2017-7-11,d71cb9410f498589a8c1cd03b727bc0d12d4f296,include/http_protocol.h,"core: deprecate and replace ap_get_basic_auth_pw
  *) core: Deprecate ap_get_basic_auth_pw() and add  ap_get_basic_auth_components(). 
Submitted By: Emmanuel Dreyfus <manu netbsd.org>, Jacob Champion, Eric Covener",https://github.com/apache/httpd/commit/d71cb9410f498589a8c1cd03b727bc0d12d4f296,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-5-26,27,24,25,93,5,Global,0.014291719209752,34,2379,Ryan Bloom
CVE-2017-3167,287,NA,Bypass,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.",https://www.cvedetails.com/cve/CVE-2017-3167/,20161205,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-3167 (cve.mitre.org)
Use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.", No,2017-2-6,2017-6-19,2017-7-11,d71cb9410f498589a8c1cd03b727bc0d12d4f296,server/protocol.c,"core: deprecate and replace ap_get_basic_auth_pw
  *) core: Deprecate ap_get_basic_auth_pw() and add  ap_get_basic_auth_components(). 
Submitted By: Emmanuel Dreyfus <manu netbsd.org>, Jacob Champion, Eric Covener",https://github.com/apache/httpd/commit/d71cb9410f498589a8c1cd03b727bc0d12d4f296,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-5-26,27,48,48,93,5,Global,0.011182401466545,122,10910,Ryan Bloom
CVE-2017-3167,287,NA,Bypass,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.",https://www.cvedetails.com/cve/CVE-2017-3167/,20161205,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-3167 (cve.mitre.org)
Use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.", No,2017-2-6,2017-6-19,2017-7-11,d71cb9410f498589a8c1cd03b727bc0d12d4f296,server/request.c,"core: deprecate and replace ap_get_basic_auth_pw
  *) core: Deprecate ap_get_basic_auth_pw() and add  ap_get_basic_auth_components(). 
Submitted By: Emmanuel Dreyfus <manu netbsd.org>, Jacob Champion, Eric Covener",https://github.com/apache/httpd/commit/d71cb9410f498589a8c1cd03b727bc0d12d4f296,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-5-26,27,14,17,93,5,Global,0.006312861117055,59,9346,William A. Rowe Jr
CVE-2003-0020,,NA,,2003-3-18,2017-10-9,5,None,Remote,Low,Not required,None,Partial,None,"Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.",https://www.cvedetails.com/cve/CVE-2003-0020/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49 and 1.3.31 http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"SECURITY: CVE-2003-0020 (cve.mitre.org)
     Escape arbitrary data before writing into the errorlog. Unescaped
     errorlogs are still possible using the compile time switch
     ""-DAP_UNSAFE_ERROR_LOG_UNESCAPED"".  [Geoffrey Young, André Malo]",No,,2003-2-24,2004-4-19,d809953456d5b0cf6e1014246145a31a978451b5,CHANGES,use the UNSAFE designation for unescaped errorlogs,https://github.com/apache/httpd/commit/d809953456d5b0cf6e1014246145a31a978451b5,Andre Malo,,,,2004-1-12,58,1,2,5,5,Global,0.037471141893092,633,16893,Roy T. Fielding
CVE-2003-0020,,NA,,2003-3-18,2017-10-9,5,None,Remote,Low,Not required,None,Partial,None,"Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.",https://www.cvedetails.com/cve/CVE-2003-0020/,20040901,Yes. Fixed in Apache HTTP Server 2.0.49 and 1.3.31 http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"SECURITY: CVE-2003-0020 (cve.mitre.org)
     Escape arbitrary data before writing into the errorlog. Unescaped
     errorlogs are still possible using the compile time switch
     ""-DAP_UNSAFE_ERROR_LOG_UNESCAPED"".  [Geoffrey Young, André Malo]",No,,2003-2-24,2004-4-19,d809953456d5b0cf6e1014246145a31a978451b5,server/log.c,use the UNSAFE designation for unescaped errorlogs,https://github.com/apache/httpd/commit/d809953456d5b0cf6e1014246145a31a978451b5,Andre Malo,,,,2004-1-12,58,4,8,5,5,Global,0.013872491145218,47,3388,Roy T. Fielding
CVE-2004-0174,,NA,DoS,2004-5-4,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Apache 1.4.x before 1.3.30, and 2.0.x before 2.0.49, when using multiple listening sockets on certain platforms, allows remote attackers to cause a denial of service (blocked new connections) via a ""short-lived connection on a rarely-accessed listening socket.""",https://www.cvedetails.com/cve/CVE-2004-0174/,20040225,"Yes. Fixed in Apache HTTP Server 2.0.49, and 1.3.31: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html","SECURITY: CAN-2004-0174 (cve.mitre.org)
Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket.
With Apache 2.x there is no performance concern about enabling the logic for platforms which don't need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]",No ,2004-2-25,2004-3-18,2004-5-12,d8163c79fe5741c06e5843cff830b026e8fe3fb7,CHANGES,"*) SECURITY: CAN-2004-0174 (cve.mitre.org)
     Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket. With Apache 2.x there is no performance concern about enabling the logic for platforms which don’t need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]
(already in 2.0.49, propagating to mirrors now)",https://github.com/apache/httpd/commit/d8163c79fe5741c06e5843cff830b026e8fe3fb7,Jeff Trawick,trawick,https://github.com/trawick,Apache,2004-3-19,1,9,9,52,3,Global,0.077946108476928,1348,17294,Roy T. Fielding
CVE-2004-0174,,NA,DoS,2004-5-4,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Apache 1.4.x before 1.3.30, and 2.0.x before 2.0.49, when using multiple listening sockets on certain platforms, allows remote attackers to cause a denial of service (blocked new connections) via a ""short-lived connection on a rarely-accessed listening socket.""",https://www.cvedetails.com/cve/CVE-2004-0174/,20040225,"Yes. Fixed in Apache HTTP Server 2.0.49, and 1.3.31: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html","SECURITY: CAN-2004-0174 (cve.mitre.org)
Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket.
With Apache 2.x there is no performance concern about enabling the logic for platforms which don't need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]",No ,2004-2-25,2004-3-18,2004-5-12,d8163c79fe5741c06e5843cff830b026e8fe3fb7,configure.in,"*) SECURITY: CAN-2004-0174 (cve.mitre.org)
     Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket. With Apache 2.x there is no performance concern about enabling the logic for platforms which don’t need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]
(already in 2.0.49, propagating to mirrors now)",https://github.com/apache/httpd/commit/d8163c79fe5741c06e5843cff830b026e8fe3fb7,Jeff Trawick,trawick,https://github.com/trawick,Apache,2004-3-19,1,7,7,52,3,Global,0.132593766508188,251,1893,Ryan Bloom
CVE-2004-0174,,NA,DoS,2004-5-4,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Apache 1.4.x before 1.3.30, and 2.0.x before 2.0.49, when using multiple listening sockets on certain platforms, allows remote attackers to cause a denial of service (blocked new connections) via a ""short-lived connection on a rarely-accessed listening socket.""",https://www.cvedetails.com/cve/CVE-2004-0174/,20040225,"Yes. Fixed in Apache HTTP Server 2.0.49, and 1.3.31: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html","SECURITY: CAN-2004-0174 (cve.mitre.org)
Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket.
With Apache 2.x there is no performance concern about enabling the logic for platforms which don't need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]",No ,2004-2-25,2004-3-18,2004-5-12,d8163c79fe5741c06e5843cff830b026e8fe3fb7,include/ap_config.h,"*) SECURITY: CAN-2004-0174 (cve.mitre.org)
     Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket. With Apache 2.x there is no performance concern about enabling the logic for platforms which don’t need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]
(already in 2.0.49, propagating to mirrors now)",https://github.com/apache/httpd/commit/d8163c79fe5741c06e5843cff830b026e8fe3fb7,Jeff Trawick,trawick,https://github.com/trawick,Apache,2004-3-19,1,3,3,52,3,Global,0.016884661117717,71,4205,Ryan Bloom
CVE-2004-0174,,NA,DoS,2004-5-4,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Apache 1.4.x before 1.3.30, and 2.0.x before 2.0.49, when using multiple listening sockets on certain platforms, allows remote attackers to cause a denial of service (blocked new connections) via a ""short-lived connection on a rarely-accessed listening socket.""",https://www.cvedetails.com/cve/CVE-2004-0174/,20040225,"Yes. Fixed in Apache HTTP Server 2.0.49, and 1.3.31: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html","SECURITY: CAN-2004-0174 (cve.mitre.org)
Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket.
With Apache 2.x there is no performance concern about enabling the logic for platforms which don't need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]",No ,2004-2-25,2004-3-18,2004-5-12,d8163c79fe5741c06e5843cff830b026e8fe3fb7,os/unix/unixd.c,"*) SECURITY: CAN-2004-0174 (cve.mitre.org)
     Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket. With Apache 2.x there is no performance concern about enabling the logic for platforms which don’t need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]
(already in 2.0.49, propagating to mirrors now)",https://github.com/apache/httpd/commit/d8163c79fe5741c06e5843cff830b026e8fe3fb7,Jeff Trawick,trawick,https://github.com/trawick,Apache,2004-3-19,1,13,13,52,3,Global,0.16147859922179,249,1542,Ryan Bloom
CVE-2004-0174,,NA,DoS,2004-5-4,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Apache 1.4.x before 1.3.30, and 2.0.x before 2.0.49, when using multiple listening sockets on certain platforms, allows remote attackers to cause a denial of service (blocked new connections) via a ""short-lived connection on a rarely-accessed listening socket.""",https://www.cvedetails.com/cve/CVE-2004-0174/,20040225,"Yes. Fixed in Apache HTTP Server 2.0.49, and 1.3.31: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html","SECURITY: CAN-2004-0174 (cve.mitre.org)
Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket.
With Apache 2.x there is no performance concern about enabling the logic for platforms which don't need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]",No ,2004-2-25,2004-3-18,2004-5-12,d8163c79fe5741c06e5843cff830b026e8fe3fb7,server/listen.c,"*) SECURITY: CAN-2004-0174 (cve.mitre.org)
     Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket. With Apache 2.x there is no performance concern about enabling the logic for platforms which don’t need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]
(already in 2.0.49, propagating to mirrors now)",https://github.com/apache/httpd/commit/d8163c79fe5741c06e5843cff830b026e8fe3fb7,Jeff Trawick,trawick,https://github.com/trawick,Apache,2004-3-19,1,20,20,52,3,Global,0.216821409066084,397,1831,Jeff Trawick
CVE-2004-0174,,NA,DoS,2004-5-4,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"Apache 1.4.x before 1.3.30, and 2.0.x before 2.0.49, when using multiple listening sockets on certain platforms, allows remote attackers to cause a denial of service (blocked new connections) via a ""short-lived connection on a rarely-accessed listening socket.""",https://www.cvedetails.com/cve/CVE-2004-0174/,20040225,"Yes. Fixed in Apache HTTP Server 2.0.49, and 1.3.31: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html","SECURITY: CAN-2004-0174 (cve.mitre.org)
Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket.
With Apache 2.x there is no performance concern about enabling the logic for platforms which don't need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]",No ,2004-2-25,2004-3-18,2004-5-12,d8163c79fe5741c06e5843cff830b026e8fe3fb7,server/mpm/netware/mpm_netware.c,"*) SECURITY: CAN-2004-0174 (cve.mitre.org)
     Fix starvation issue on listening sockets where a short-lived connection on a rarely-accessed listening socket will cause a child to hold the accept mutex and block out new connections until another connection arrives on that rarely-accessed listening socket. With Apache 2.x there is no performance concern about enabling the logic for platforms which don’t need it, so it is enabled everywhere except for Win32.  [Jeff Trawick]
(already in 2.0.49, propagating to mirrors now)",https://github.com/apache/httpd/commit/d8163c79fe5741c06e5843cff830b026e8fe3fb7,Jeff Trawick,trawick,https://github.com/trawick,Apache,2004-3-19,1,0,3,52,3,Global,0.030884808013356,111,3594,Bradley Nicholes
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d82a51a82f7bafe36d747cd821ecf8e46b3413de,CHANGES,"worker MPM: Don't create a listener thread until we have a worker thread.  Otherwise, in situations where we'll have to wait a while to take over scoreboard slots from a previous generation, we'll be accepting connections we can’t process yet.
Don't let the listener thread clobber the scoreboard entry of the first worker thread.",https://github.com/apache/httpd/commit/d82a51a82f7bafe36d747cd821ecf8e46b3413de,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-4-3,309,5,5,49,33,Local,0.038360572444746,453,11809,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,d82a51a82f7bafe36d747cd821ecf8e46b3413de,server/mpm/worker/worker.c,"worker MPM: Don't create a listener thread until we have a worker thread.  Otherwise, in situations where we'll have to wait a while to take over scoreboard slots from a previous generation, we'll be accepting connections we can’t process yet.
Don't let the listener thread clobber the scoreboard entry of the first worker thread.",https://github.com/apache/httpd/commit/d82a51a82f7bafe36d747cd821ecf8e46b3413de,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-4-3,309,44,77,49,33,Local,0.200942972608891,895,4454,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,d862fad9e6d033151af137bef6b91b7c327c5cf2,include/ap_mmn.h,"New optional flag to enforce <CR><LF> line delimiters in ap_[r]getline, created by overloading 'int fold' (1 or 0) as 'int flags', with the same value 1 for AP_GETLINE_FOLD (which httpd doesn't use), and a new value 2 for AP_GETLINE_CRLF
Enforce CRLF when HttpProtocolOptions Strict is in force. Correctly introduces a new t/TEST fail.",https://github.com/apache/httpd/commit/d862fad9e6d033151af137bef6b91b7c327c5cf2,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-30,60,2,3,28,11,Global,0.14817880794702,358,2416,William A. Rowe Jr
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,d862fad9e6d033151af137bef6b91b7c327c5cf2,include/http_protocol.h,"New optional flag to enforce <CR><LF> line delimiters in ap_[r]getline, created by overloading 'int fold' (1 or 0) as 'int flags', with the same value 1 for AP_GETLINE_FOLD (which httpd doesn't use), and a new value 2 for AP_GETLINE_CRLF
Enforce CRLF when HttpProtocolOptions Strict is in force. Correctly introduces a new t/TEST fail.",https://github.com/apache/httpd/commit/d862fad9e6d033151af137bef6b91b7c327c5cf2,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-30,60,12,17,28,11,Global,0.077678190354247,182,2343,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,d862fad9e6d033151af137bef6b91b7c327c5cf2,server/protocol.c,"New optional flag to enforce <CR><LF> line delimiters in ap_[r]getline, created by overloading 'int fold' (1 or 0) as 'int flags', with the same value 1 for AP_GETLINE_FOLD (which httpd doesn't use), and a new value 2 for AP_GETLINE_CRLF
Enforce CRLF when HttpProtocolOptions Strict is in force. Correctly introduces a new t/TEST fail.",https://github.com/apache/httpd/commit/d862fad9e6d033151af137bef6b91b7c327c5cf2,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-30,60,14,19,28,11,Global,0.211152416356877,2272,10760,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,d8637f777e56441749307c2bdad743ae8b0b9d46,modules/http/byterange_filter.c,Remove some unused code that was included in r1162131 by accident or merge error.,https://github.com/apache/httpd/commit/d8637f777e56441749307c2bdad743ae8b0b9d46,Stefan Fritsch,,,GeNUA mbH,2011-8-29,13,1,7,1,6,Local,0.168681635002879,293,1737,Jim Jagielski
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,d8e059b391e584af957300d59bff37f16d47644f,CHANGES,Properly detect overflow when reading the hex chunk lines.,https://github.com/apache/httpd/commit/d8e059b391e584af957300d59bff37f16d47644f,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-5-29,29,3,3,12,3,Local,0.014607475110168,179,12254,Roy T. Fielding
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,d8e059b391e584af957300d59bff37f16d47644f,modules/http/http_protocol.c,Properly detect overflow when reading the hex chunk lines.,https://github.com/apache/httpd/commit/d8e059b391e584af957300d59bff37f16d47644f,Aaron Bannert,abannert,https://github.com/abannert,Amazon Web Services/Apache,2002-5-29,29,9,12,12,3,Local,0.002109134173382,39,18491,Ryan Bloom
CVE-2004-0488,,NA,Exec Code Overflow,2004-7-7,2017-10-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Stack-based buffer overflow in the ssl_util_uuencode_binary function in ssl_util.c for Apache mod_ssl, when mod_ssl is configured to trust the issuing CA, may allow remote attackers to execute arbitrary code via a client certificate with a long subject DN.",https://www.cvedetails.com/cve/CVE-2004-0488/,20040524,Yes. Fixed in Apache HTTP Server 2.0.50: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0488 (cve.mitre.org)
mod_ssl: Fix a buffer overflow in the FakeBasicAuth code for a (trusted) client certificate subject DN which exceeds 6K in length.
     [Joe Orton]",No ,,2004-5-17,2004-6-1,d8f71ba6b7c20cad59faa66c1a9bc93f947e651f,modules/ssl/ssl_engine_kernel.c,"* modules/ssl/ssl_engine_kernel.c (ssl_hook_UserCheck): Fix buffer overflow in FakeBasicAuth code if client's subject DN exceeds 6K in length (CVE CAN-2004-0488), switch to using apr-util base64 encoder functions.",https://github.com/apache/httpd/commit/d8f71ba6b7c20cad59faa66c1a9bc93f947e651f,Joe Orton,notroj,,Red Hat,2004-5-25,1,8,15,8,7,Global,0.003310681303363,19,5739,Doug MacEachern
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,d916656513ffb95bfd16cfaff8d824d440c5d327,modules/http/byterange_filter.c,Fold in Stefan's initial PoC for fixing memory issues with ranges by keeping orig brigade untouched and avoiding 1byte brigades (related to CVE-2011-3192),https://github.com/apache/httpd/commit/d916656513ffb95bfd16cfaff8d824d440c5d327,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-25,13,102,133,102,31,Local,0.1991643454039,143,718,Justin Erenkrantz
CVE-2010-1452,,NA,DoS,2010-7-28,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,The (1) mod_cache and (2) mod_dav modules in the Apache HTTP Server 2.2.x before 2.2.16 allow remote attackers to cause a denial of service (process crash) via a request that lacks a path.,https://www.cvedetails.com/cve/CVE-2010-1452/,20100415,Yes. Fixed in Apache HTTP Server 2.2.16: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-1452 (cve.mitre.org)
mod_dav, mod_cache: Fix Handling of requests without a path segment.
PR: 49246 [Mark Drayton, Jeff Trawick]",No,2010-5-4,2010-7-25,2010-7-25,da187a4ba99eee56ed78cb05f17bb2621f619baf,CHANGES,"CVE-2010-1452: Fix handling of missing path segments in the parsed URI structure. If a specially crafted request was sent, it is possible to crash mod_dav,  mod_cache or mod_session, as they accessed a field that is set to NULL by the URI parser, assuming that it always put in a valid string.
PR: 49246
Submitted by: Mark Drayton
Patch by: Jeff Trawick",https://github.com/apache/httpd/commit/da187a4ba99eee56ed78cb05f17bb2621f619baf,Paul Querna,pquerna,https://github.com/pquerna,Rackspace,2010-7-21,1,4,4,11,6,Global,0.007012865150505,284,40497,Jim Jagielski
CVE-2010-1452,,NA,DoS,2010-7-28,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,The (1) mod_cache and (2) mod_dav modules in the Apache HTTP Server 2.2.x before 2.2.16 allow remote attackers to cause a denial of service (process crash) via a request that lacks a path.,https://www.cvedetails.com/cve/CVE-2010-1452/,20100415,Yes. Fixed in Apache HTTP Server 2.2.16: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-1452 (cve.mitre.org)
mod_dav, mod_cache: Fix Handling of requests without a path segment.
PR: 49246 [Mark Drayton, Jeff Trawick]",No,2010-5-4,2010-7-25,2010-7-25,da187a4ba99eee56ed78cb05f17bb2621f619baf,include/httpd.h,"CVE-2010-1452: Fix handling of missing path segments in the parsed URI structure. If a specially crafted request was sent, it is possible to crash mod_dav,  mod_cache or mod_session, as they accessed a field that is set to NULL by the URI parser, assuming that it always put in a valid string.
PR: 49246
Submitted by: Mark Drayton
Patch by: Jeff Trawick",https://github.com/apache/httpd/commit/da187a4ba99eee56ed78cb05f17bb2621f619baf,Paul Querna,pquerna,https://github.com/pquerna,Rackspace,2010-7-21,1,1,2,11,6,Global,0.009721985331741,57,5863,Ryan Bloom
CVE-2010-1452,,NA,DoS,2010-7-28,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,The (1) mod_cache and (2) mod_dav modules in the Apache HTTP Server 2.2.x before 2.2.16 allow remote attackers to cause a denial of service (process crash) via a request that lacks a path.,https://www.cvedetails.com/cve/CVE-2010-1452/,20100415,Yes. Fixed in Apache HTTP Server 2.2.16: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-1452 (cve.mitre.org)
mod_dav, mod_cache: Fix Handling of requests without a path segment.
PR: 49246 [Mark Drayton, Jeff Trawick]",No,2010-5-4,2010-7-25,2010-7-25,da187a4ba99eee56ed78cb05f17bb2621f619baf,modules/cache/cache_storage.c,"CVE-2010-1452: Fix handling of missing path segments in the parsed URI structure. If a specially crafted request was sent, it is possible to crash mod_dav,  mod_cache or mod_session, as they accessed a field that is set to NULL by the URI parser, assuming that it always put in a valid string.
PR: 49246
Submitted by: Mark Drayton
Patch by: Jeff Trawick",https://github.com/apache/httpd/commit/da187a4ba99eee56ed78cb05f17bb2621f619baf,Paul Querna,pquerna,https://github.com/pquerna,Rackspace,2010-7-21,1,2,4,11,6,Global,0.003924133420536,6,1529,Bill Stoddard
CVE-2010-1452,,NA,DoS,2010-7-28,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,The (1) mod_cache and (2) mod_dav modules in the Apache HTTP Server 2.2.x before 2.2.16 allow remote attackers to cause a denial of service (process crash) via a request that lacks a path.,https://www.cvedetails.com/cve/CVE-2010-1452/,20100415,Yes. Fixed in Apache HTTP Server 2.2.16: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-1452 (cve.mitre.org)
mod_dav, mod_cache: Fix Handling of requests without a path segment.
PR: 49246 [Mark Drayton, Jeff Trawick]",No,2010-5-4,2010-7-25,2010-7-25,da187a4ba99eee56ed78cb05f17bb2621f619baf,modules/dav/main/util.c,"CVE-2010-1452: Fix handling of missing path segments in the parsed URI structure. If a specially crafted request was sent, it is possible to crash mod_dav,  mod_cache or mod_session, as they accessed a field that is set to NULL by the URI parser, assuming that it always put in a valid string.
PR: 49246
Submitted by: Mark Drayton
Patch by: Jeff Trawick",https://github.com/apache/httpd/commit/da187a4ba99eee56ed78cb05f17bb2621f619baf,Paul Querna,pquerna,https://github.com/pquerna,Rackspace,2010-7-21,1,2,3,11,6,Global,0.000510030601836,3,5882,Greg Stein
CVE-2010-1452,,NA,DoS,2010-7-28,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,The (1) mod_cache and (2) mod_dav modules in the Apache HTTP Server 2.2.x before 2.2.16 allow remote attackers to cause a denial of service (process crash) via a request that lacks a path.,https://www.cvedetails.com/cve/CVE-2010-1452/,20100415,Yes. Fixed in Apache HTTP Server 2.2.16: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-1452 (cve.mitre.org)
mod_dav, mod_cache: Fix Handling of requests without a path segment.
PR: 49246 [Mark Drayton, Jeff Trawick]",No,2010-5-4,2010-7-25,2010-7-25,da187a4ba99eee56ed78cb05f17bb2621f619baf,modules/session/mod_session.c,"CVE-2010-1452: Fix handling of missing path segments in the parsed URI structure. If a specially crafted request was sent, it is possible to crash mod_dav,  mod_cache or mod_session, as they accessed a field that is set to NULL by the URI parser, assuming that it always put in a valid string.
PR: 49246
Submitted by: Mark Drayton
Patch by: Jeff Trawick",https://github.com/apache/httpd/commit/da187a4ba99eee56ed78cb05f17bb2621f619baf,Paul Querna,pquerna,https://github.com/pquerna,Rackspace,2010-7-21,1,2,4,11,6,Global,0.00180234304596,6,3329,Ruediger Pluem
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,da4eb1610c4b3f94a6240c529152c396b75f87cf,modules/http/byterange_filter.c,* We need to use > instead of >= as if end64 is the first byte of the next bucket we need to memorize this one and not the one before.,https://github.com/apache/httpd/commit/da4eb1610c4b3f94a6240c529152c396b75f87cf,Ruediger Pluem,,,,2011-8-25,13,1,2,1,1,Local,0.134989200863931,125,926,Justin Erenkrantz
CVE-2016-2161,20,NA,,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,None,Partial,"In Apache HTTP Server versions 2.4.0 to 2.4.23, malicious input to mod_auth_digest can cause the server to crash, and each instance continues to crash even for subsequently valid requests",https://www.cvedetails.com/cve/CVE-2016-2161/,20160129,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-2161 (cve.mitre.org)
mod_auth_digest: Prevent segfaults during client entry allocation when the shared memory space is exhausted.
[Maksim Malyutin <m.malyutin dsec.ru>, Eric Covener, Jacob Champion]", No,2016-7-11,2016-12-20,2016-12-20,daf894098e3c26177f8a2a0eaade21498bcc96c0,docs/log-message-tags/next-number,Follow up to r1772919: update APLOGNO().,https://github.com/apache/httpd/commit/daf894098e3c26177f8a2a0eaade21498bcc96c0,Yann Ylavic,ylavic,https://github.com/ylavic,,2017-2-20,77,1,2,2,2,Global,0.228438228438228,98,429,Yann Ylavic
CVE-2016-2161,20,NA,,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,None,Partial,"In Apache HTTP Server versions 2.4.0 to 2.4.23, malicious input to mod_auth_digest can cause the server to crash, and each instance continues to crash even for subsequently valid requests",https://www.cvedetails.com/cve/CVE-2016-2161/,20160129,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-2161 (cve.mitre.org)
mod_auth_digest: Prevent segfaults during client entry allocation when the shared memory space is exhausted.
[Maksim Malyutin <m.malyutin dsec.ru>, Eric Covener, Jacob Champion]", No,2016-7-11,2016-12-20,2016-12-20,daf894098e3c26177f8a2a0eaade21498bcc96c0,modules/aaa/mod_auth_digest.c,Follow up to r1772919: update APLOGNO().,https://github.com/apache/httpd/commit/daf894098e3c26177f8a2a0eaade21498bcc96c0,Yann Ylavic,ylavic,https://github.com/ylavic,,2017-2-20,77,1,2,2,2,Global,0.005641025641026,44,7800,Roy T. Fielding
CVE-2010-0434,200,NA,+Info,2010-3-5,2017-9-18,4.3,None,Remote,Medium,Not required,Partial,None,None,"The ap_read_request function in server/protocol.c in the Apache HTTP Server 2.2.x before 2.2.15, when a multithreaded MPM is used, does not properly handle headers in subrequests in certain circumstances involving a parent request that has a body, which might allow remote attackers to obtain sensitive information via a crafted request that triggers access to memory locations associated with an earlier request.",https://www.cvedetails.com/cve/CVE-2010-0434/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-0434 (cve.mitre.org)
Ensure each subrequest has a shallow copy of headers_in so that the parent request headers are not corrupted.  Elimiates a problematic optimization in the case of no request body.  PR 48359
[Jake Scott, William Rowe, Ruediger Pluem]",No,,2009-12-9,2010-3-5,db949f4477c2fcba58a3d4232a26227c60767f25,CHANGES,"* Ensure that the new table values are allocated from the pool of the main request as they might be added to the header tables of the main request.
  Otherwise these values might become invalid once the subrequest and its pool gets destroyed.
PR: 48359
Submitted by: rpluem, niq
Reviewed by: niq",https://github.com/apache/httpd/commit/db949f4477c2fcba58a3d4232a26227c60767f25,Ruediger Pluem,,,,2009-12-10,84,3,3,19,10,Global,0.033157460428596,1326,39991,Jim Jagielski
CVE-2010-0434,200,NA,+Info,2010-3-5,2017-9-18,4.3,None,Remote,Medium,Not required,Partial,None,None,"The ap_read_request function in server/protocol.c in the Apache HTTP Server 2.2.x before 2.2.15, when a multithreaded MPM is used, does not properly handle headers in subrequests in certain circumstances involving a parent request that has a body, which might allow remote attackers to obtain sensitive information via a crafted request that triggers access to memory locations associated with an earlier request.",https://www.cvedetails.com/cve/CVE-2010-0434/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15: http://httpd.apache.org/security/vulnerabilities_22.html,"*) SECURITY: CVE-2010-0434 (cve.mitre.org)
Ensure each subrequest has a shallow copy of headers_in so that the parent request headers are not corrupted.  Elimiates a problematic optimization in the case of no request body.  PR 48359
[Jake Scott, William Rowe, Ruediger Pluem]",No,,2009-12-9,2010-3-5,db949f4477c2fcba58a3d4232a26227c60767f25,modules/metadata/mod_headers.c,"* Ensure that the new table values are allocated from the pool of the main request as they might be added to the header tables of the main request.
  Otherwise these values might become invalid once the subrequest and its pool gets destroyed.
PR: 48359
Submitted by: rpluem, niq
Reviewed by: niq",https://github.com/apache/httpd/commit/db949f4477c2fcba58a3d4232a26227c60767f25,Ruediger Pluem,,,,2009-12-10,84,16,26,19,10,Global,0.032149712092131,67,2084,Bill Stoddard
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,CMakeLists.txt,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,1,2,885,535,Global,0.002004008016032,4,1996,Jeff Trawick
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/config2.m4,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,3,4,885,535,Global,0.740437158469945,271,366,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_conn_io.c,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,10,10,885,535,Global,0.70464504820333,804,1141,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_conn_io.h,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,1,1,885,535,Global,0.631578947368421,96,152,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_mplx.c,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,70,334,885,535,Global,0.712428734321551,3124,4385,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_mplx.h,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,35,64,885,535,Global,0.452488687782805,300,663,Jim Jagielski
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_ngn_shed.c,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,333,333,885,535,Global,1,333,333,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_ngn_shed.h,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,64,64,885,535,Global,1,64,64,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_proxy_session.c,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,170,282,885,535,Global,0.94796828543112,1913,2018,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_request.c,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,3,3,885,535,Global,0.807017543859649,782,969,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_session.c,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,5,16,885,535,Global,0.792726769911504,5733,7232,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_task_output.c,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,70,106,885,535,Global,0.557416267942584,233,418,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_task_output.h,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,7,9,885,535,Global,0.285714285714286,26,91,Jim Jagielski
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_task.c,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,23,27,885,535,Global,0.539556962025316,682,1264,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_task.h,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,3,5,885,535,Global,0.516209476309227,207,401,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/h2_version.h,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,2,4,885,535,Global,0.715686274509804,146,204,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/mod_http2.h,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,7,28,885,535,Global,0.416267942583732,87,209,asf-sync-process
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/mod_proxy_http2.c,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,68,110,885,535,Global,0.549766718506998,707,1286,Stefan Eissing
CVE-2016-1546,399,NA,DoS,2016-7-6,2018-6-2,4.3,None,Remote,Medium,Not required,None,None,Partial,"The Apache HTTP Server 2.4.17 and 2.4.18, when mod_http2 is enabled, does not limit the number of simultaneous stream workers for a single HTTP/2 connection, which allows remote attackers to cause a denial of service (stream-processing outage) via modified flow-control windows.",https://www.cvedetails.com/cve/CVE-2016-1546/,20160107,Yes. Fixed in Apache HTTP Server 2.4.20: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-1546 (cve.mitre.org)
     mod_http2: restricting number of concurrent stream workers per connection if client is slow.",No,2016-2-2,2016-4-11,2016-4-11,dd438a889b22957f83b5491ef8f840146eac0d72,modules/http2/NWGNUmod_http2,mod_http2: support for several different request engines per connection,https://github.com/apache/httpd/commit/dd438a889b22957f83b5491ef8f840146eac0d72,Stefan Eissing,,,greenbytes GmbH,2016-3-5,1,1,1,885,535,Global,0.997260273972603,364,365,Stefan Eissing
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,dd5a5b409b80b82741ad7cd8e5be18fd1bf1a721,modules/mappers/mod_rewrite.c,don't try to set permissions on the rewrite_log_lock unless it is a SysV sem,https://github.com/apache/httpd/commit/dd5a5b409b80b82741ad7cd8e5be18fd1bf1a721,Greg Ames,,,,2002-5-20,309,1,2,1,1,Local,0.000243575691146,2,8211,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,de45d5b5d30a421459503338e3261a8815621772,modules/http/byterange_filter.c,remove obsolete macro,https://github.com/apache/httpd/commit/de45d5b5d30a421459503338e3261a8815621772,Stefan Fritsch,,,GeNUA mbH,2011-8-27,13,0,1,0,1,Local,0.163705583756345,258,1576,Jim Jagielski
CVE-2018-1303,125,NA,DoS,2018-3-26,2018-6-2,5,None,Remote,Low,Not required,None,None,Partial,"A specially crafted HTTP request header could have crashed the Apache HTTP Server prior to version 2.4.30 due to an out of bound read while preparing data to be cached in shared memory. It could be used as a Denial of Service attack against users of mod_cache_socache. The vulnerability is considered as low risk since mod_cache_socache is not widely used, mod_cache_disk is not concerned by this vulnerability.",https://www.cvedetails.com/cve/CVE-2018-1303/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2018-1303 (cve.mitre.org)
mod_cache_socache: Fix request headers parsing to avoid a possible crash with specially crafted input data. [Ruediger Pluem]", No,2018-1-23,2018-3-21,2018-3-21,de548cfc56f2547176bed83637a91d187239b221,modules/cache/mod_cache_socache.c,Save a few cycles.,https://github.com/apache/httpd/commit/de548cfc56f2547176bed83637a91d187239b221,Christophe Jaillet,,,,2018-2-19,5,2,4,2,2,Local,0.014184397163121,26,1833,Graham Leggett
CVE-2002-0840,,NA,XSS,2002-10-11,2017-10-9,6.8,User,Remote,Medium,Not required,Partial,Partial,Partial,"Cross-site scripting (XSS) vulnerability in the default error page of Apache 2.0 before 2.0.43, and 1.3.x up to 1.3.26, when UseCanonicalName is ""Off"" and support for wildcard DNS is present, allows remote attackers to execute script as other web page visitors via the Host: header, a different vulnerability than CAN-2002-1157.",https://www.cvedetails.com/cve/CVE-2002-0840/,20040901,Yes. Fixed in Apache HTTP Server 2.0.43 and 1.3.27: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"low: Error page XSS using wildcard DNS (CVE-2002-0840)
Cross-site scripting (XSS) vulnerability in the default error page of Apache 2.0 before 2.0.43, and 1.3.x up to 1.3.26, when UseCanonicalName is ""Off"" and support for wildcard DNS is present, allows remote attackers to execute script as other web page visitors via the Host: header.",No,2002-9-20,2002-10-2,2002-10-3,deaeb1407a553fcfe9a0c8158cad8a780c52139d,CHANGES,"*) SECURITY: [CAN-2002-0840] HTML-escape the address produced by ap_server_signature() against this cross-site scripting vulnerability exposed by the directive 'UseCanonicalName Off’. Also HTML-escape the SERVER_NAME environment variable for CGI and SSI requests.  It's safe to escape as only the '<', '>', and '&' characters are affected, which won't appear in a valid hostname. Reported by Matthew Murphy <mattmurphy@kc.rr.com>.
     [Brian Pane]",https://github.com/apache/httpd/commit/deaeb1407a553fcfe9a0c8158cad8a780c52139d,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-10-2,1,11,13,18,5,Local,0.044883720930233,579,12900,Roy T. Fielding
CVE-2002-0840,,NA,XSS,2002-10-11,2017-10-9,6.8,User,Remote,Medium,Not required,Partial,Partial,Partial,"Cross-site scripting (XSS) vulnerability in the default error page of Apache 2.0 before 2.0.43, and 1.3.x up to 1.3.26, when UseCanonicalName is ""Off"" and support for wildcard DNS is present, allows remote attackers to execute script as other web page visitors via the Host: header, a different vulnerability than CAN-2002-1157.",https://www.cvedetails.com/cve/CVE-2002-0840/,20040901,Yes. Fixed in Apache HTTP Server 2.0.43 and 1.3.27: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"low: Error page XSS using wildcard DNS (CVE-2002-0840)
Cross-site scripting (XSS) vulnerability in the default error page of Apache 2.0 before 2.0.43, and 1.3.x up to 1.3.26, when UseCanonicalName is ""Off"" and support for wildcard DNS is present, allows remote attackers to execute script as other web page visitors via the Host: header.",No,2002-9-20,2002-10-2,2002-10-3,deaeb1407a553fcfe9a0c8158cad8a780c52139d,server/core.c,"*) SECURITY: [CAN-2002-0840] HTML-escape the address produced by ap_server_signature() against this cross-site scripting vulnerability exposed by the directive 'UseCanonicalName Off’. Also HTML-escape the SERVER_NAME environment variable for CGI and SSI requests.  It's safe to escape as only the '<', '>', and '&' characters are affected, which won't appear in a valid hostname. Reported by Matthew Murphy <mattmurphy@kc.rr.com>.
     [Brian Pane]",https://github.com/apache/httpd/commit/deaeb1407a553fcfe9a0c8158cad8a780c52139d,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-10-2,1,5,7,18,5,Local,0.14667458432304,1235,8420,Ryan Bloom
CVE-2002-0840,,NA,XSS,2002-10-11,2017-10-9,6.8,User,Remote,Medium,Not required,Partial,Partial,Partial,"Cross-site scripting (XSS) vulnerability in the default error page of Apache 2.0 before 2.0.43, and 1.3.x up to 1.3.26, when UseCanonicalName is ""Off"" and support for wildcard DNS is present, allows remote attackers to execute script as other web page visitors via the Host: header, a different vulnerability than CAN-2002-1157.",https://www.cvedetails.com/cve/CVE-2002-0840/,20040901,Yes. Fixed in Apache HTTP Server 2.0.43 and 1.3.27: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"low: Error page XSS using wildcard DNS (CVE-2002-0840)
Cross-site scripting (XSS) vulnerability in the default error page of Apache 2.0 before 2.0.43, and 1.3.x up to 1.3.26, when UseCanonicalName is ""Off"" and support for wildcard DNS is present, allows remote attackers to execute script as other web page visitors via the Host: header.",No,2002-9-20,2002-10-2,2002-10-3,deaeb1407a553fcfe9a0c8158cad8a780c52139d,server/util_script.c,"*) SECURITY: [CAN-2002-0840] HTML-escape the address produced by ap_server_signature() against this cross-site scripting vulnerability exposed by the directive 'UseCanonicalName Off’. Also HTML-escape the SERVER_NAME environment variable for CGI and SSI requests.  It's safe to escape as only the '<', '>', and '&' characters are affected, which won't appear in a valid hostname. Reported by Matthew Murphy <mattmurphy@kc.rr.com>.
     [Brian Pane]",https://github.com/apache/httpd/commit/deaeb1407a553fcfe9a0c8158cad8a780c52139d,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-10-2,1,2,3,18,5,Local,0.056756756756757,147,2590,Roy T. Fielding
CVE-2018-1312,287,NA,,2018-3-26,2018-6-2,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"In Apache httpd 2.2.0 to 2.4.29, when generating an HTTP Digest authentication challenge, the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed. In a cluster of servers using a common Digest authentication configuration, HTTP requests could be replayed across servers by an attacker without detection.",https://www.cvedetails.com/cve/CVE-2018-1312/,20170621,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2018-1312 (cve.mitre.org)
mod_auth_digest: Fix generation of nonce values to prevent replay attacks across servers using a common Digest domain. This change may cause problems if used with round robin load balancers. PR 54637. [Stefan Fritsch]", No,2013-3-5,2018-3-21,2018-3-21,deaf7677c7f374a4d6a860866871230da034e3ec,CHANGES,Describe mod_auth_digest changes more accurately,https://github.com/apache/httpd/commit/deaf7677c7f374a4d6a860866871230da034e3ec,Stefan Fritsch,,,GeNUA mbH,2013-6-15,4,4,7,4,3,Local,0.018892105088716,855,45257,Jim Jagielski
CVE-2004-0809,,NA,DoS,2004-9-16,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,The mod_dav module in Apache 2.0.50 and earlier allows remote attackers to cause a denial of service (child process crash) via a certain sequence of LOCK requests for a location that allows WebDAV authoring access.,https://www.cvedetails.com/cve/CVE-2004-0809/,20040825,Yes. Fixed in Apache HTTP Server 2.0.51: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0809 (cve.mitre.org) 
mod_dav_fs: Fix a segfault in the handling of an indirect lock refresh.  PR 31183.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2004-9-12,2004-9-15,e190dce6b27eb3b10386eb479ad217cc92230097,modules/dav/fs/lock.c,"* modules/dav/fs/lock.c (dav_fs_refresh_locks): Fix SEGV on refresh of indirect lock.

PR: 31183",https://github.com/apache/httpd/commit/e190dce6b27eb3b10386eb479ad217cc92230097,Joe Orton,notroj,,Red Hat,2004-9-13,1,6,12,6,6,Local,0.007532956685499,16,2124,Greg Stein
CVE-2000-1205,79,NA,Exec Code XSS,2000-2-1,2017-7-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross site scripting vulnerabilities in Apache 1.3.0 through 1.3.11 allow remote attackers to execute script as other web site visitors via (1) the printenv CGI (printenv.pl), which does not encode its output, (2) pages generated by the ap_send_error_response function such as a default 404, which does not add an explicit charset, or (3) various messages that are generated by certain Apache modules or core code. NOTE: the printenv issue might still exist for web browsers that can render text/plain content types as HTML, such as Internet Explorer, but CVE regards this as a design limitation of those browsers, not Apache. The printenv.pl/acuparam vector, discloser on 20070724, is one such variant.",https://www.cvedetails.com/cve/CVE-2000-1205/,20020501,Yes. Fixed in Apache HTTP Server 1.3.12: http://httpd.apache.org/security/vulnerabilities_13.html,"Apache was vulnerable to cross site scripting issues. It was shown that malicious HTML tags can be embedded in client web requests if the server or script handling the request does not carefully encode all information displayed to the user. Using these vulnerabilities attackers could, for example, obtain copies of your private cookies used to authenticate you to other sites.",No,,,2000-2-25,e28d9b8d1d660ee7fa77ee00cdebe208b046fce6,docs/manual/mod/directives.html,"Add missing AddCharset directive.
PR:
Obtained from:
Submitted by:
Reviewed by:",https://github.com/apache/httpd/commit/e28d9b8d1d660ee7fa77ee00cdebe208b046fce6,Marc Slemko,,,,2000-1-31,43,1,1,1,0,Local,0.010115606936416,7,692,Ken Coar
CVE-2004-0747,,NA,Overflow Gain privileges,2004-10-20,2017-10-10,4.6,User,Local,Low,Not required,Partial,Partial,Partial,Buffer overflow in Apache 2.0.50 and earlier allows local users to gain apache privileges via a .htaccess file that causes the overflow during expansion of environment variables.,https://www.cvedetails.com/cve/CVE-2004-0747/,20040726,Yes. Fixed in Apache HTTP Server 2.0.51: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0747 (cve.mitre.org)
Fix buffer overflow in expansion of environment variables in configuration file parsing.  [AndrÃ© Malo]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,2004-8-5,2004-9-15,2004-9-15,e29f8e261960e178d08c4e0a2f82058c0835e512,server/util.c,"* server/util.c (ap_resolve_env): Rewrite to avoid buffer overflows.
Submitted by: Andr Malo
Reviewed by: jorton, mjc",https://github.com/apache/httpd/commit/e29f8e261960e178d08c4e0a2f82058c0835e512,Joe Orton,notroj,,Red Hat,2004-9-15,1,81,84,81,33,Global,0.019348268839104,114,5892,Roy T. Fielding
CVE-2006-3747,189,NA,DoS Exec Code,2006-7-28,2017-7-19,7.6,Admin,Remote,High,Not required,Complete,Complete,Complete,"Off-by-one error in the ldap scheme handling in the Rewrite module (mod_rewrite) in Apache 1.3 from 1.3.28, 2.0.46 and other versions before 2.0.59, and 2.2, when RewriteEngine is enabled, allows remote attackers to cause a denial of service (application crash) and possibly execute arbitrary code via crafted URLs that are not properly handled using certain rewrite rules.",https://www.cvedetails.com/cve/CVE-2006-3747/,20060720,"Yes. Fixed in Apache HTTP Server 2.2.3, 2.0.59, and 1.3.37: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","*) SECURITY: CVE-2006-3747 (cve.mitre.org)
     mod_rewrite: Fix an off-by-one security problem in the ldap scheme handling.  For some RewriteRules this could lead to a pointer being written out of bounds.  Reported by Mark Dowd of McAfee. [Mark Cox]",No,2006-7-21,2006-7-27,2006-7-27,e2a9028db5b079e01eb6b9ac06299bd06dd59574,CHANGES,"SECURITY: CVE-2006-3747 (cve.mitre.org)
mod_rewrite: Fix an off-by-one security problem in the ldap scheme handling.  For some RewriteRules this could lead to a pointer being written out of bounds.  Reported by Mark Dowd of McAfee.
Ack: trawick, lars, jorton, wrowe, benl",https://github.com/apache/httpd/commit/e2a9028db5b079e01eb6b9ac06299bd06dd59574,Mark J. Cox,iamamoose,https://github.com/iamamoose,"Red Hat, Apache Security, OpenSSL Security",2006-7-27,115,6,6,7,1,Local,0.008706701807229,185,21248,Roy T. Fielding
CVE-2006-3747,189,NA,DoS Exec Code,2006-7-28,2017-7-19,7.6,Admin,Remote,High,Not required,Complete,Complete,Complete,"Off-by-one error in the ldap scheme handling in the Rewrite module (mod_rewrite) in Apache 1.3 from 1.3.28, 2.0.46 and other versions before 2.0.59, and 2.2, when RewriteEngine is enabled, allows remote attackers to cause a denial of service (application crash) and possibly execute arbitrary code via crafted URLs that are not properly handled using certain rewrite rules.",https://www.cvedetails.com/cve/CVE-2006-3747/,20060720,"Yes. Fixed in Apache HTTP Server 2.2.3, 2.0.59, and 1.3.37: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ","*) SECURITY: CVE-2006-3747 (cve.mitre.org)
     mod_rewrite: Fix an off-by-one security problem in the ldap scheme handling.  For some RewriteRules this could lead to a pointer being written out of bounds.  Reported by Mark Dowd of McAfee. [Mark Cox]",No,2006-7-21,2006-7-27,2006-7-27,e2a9028db5b079e01eb6b9ac06299bd06dd59574,modules/mappers/mod_rewrite.c,"SECURITY: CVE-2006-3747 (cve.mitre.org)
mod_rewrite: Fix an off-by-one security problem in the ldap scheme handling.  For some RewriteRules this could lead to a pointer being written out of bounds.  Reported by Mark Dowd of McAfee.
Ack: trawick, lars, jorton, wrowe, benl",https://github.com/apache/httpd/commit/e2a9028db5b079e01eb6b9ac06299bd06dd59574,Mark J. Cox,iamamoose,https://github.com/iamamoose,"Red Hat, Apache Security, OpenSSL Security",2006-7-27,115,1,2,7,1,Local,8.82184288297825E-05,2,22671,Andre Malo
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,e41e2934829f34242c0edc8d2cb020dd04624efe,support/win32/wintty.c,"Q. ""Why can't I watch my server's activity?"" A. You can.
  This is a little tool I dreamed up while fighting a ton of battles on several fronts.  It demonstrates that reliable piped logs on win32 still need work, that we launch log processes far too many times, and generally gives admins more blinky lights on win32.  But it's too practial of an example to leave on my hard drive gathering dust.

  Note that the support/win32 will be used for really non-unix/non-portable applications.  Perhaps something similiar would be useful all the way  around, and perhaps some of this code can get into the apr core.  But for  this moment, it serves a purpose for beta development.",https://github.com/apache/httpd/commit/e41e2934829f34242c0edc8d2cb020dd04624efe,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-5-14,16,328,328,418,0,Global,1,328,328,William A. Rowe Jr
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,e41e2934829f34242c0edc8d2cb020dd04624efe,support/win32/wintty.dsp,"Q. ""Why can't I watch my server's activity?"" A. You can.
  This is a little tool I dreamed up while fighting a ton of battles on several fronts.  It demonstrates that reliable piped logs on win32 still need work, that we launch log processes far too many times, and generally gives admins more blinky lights on win32.  But it's too practial of an example to leave on my hard drive gathering dust.

  Note that the support/win32 will be used for really non-unix/non-portable applications.  Perhaps something similiar would be useful all the way  around, and perhaps some of this code can get into the apr core.  But for  this moment, it serves a purpose for beta development.",https://github.com/apache/httpd/commit/e41e2934829f34242c0edc8d2cb020dd04624efe,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-5-14,16,90,90,418,0,Global,1,90,90,William A. Rowe Jr
CVE-2015-3183,20,NA,,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,Partial,None,"The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules/http/http_filters.c.",https://www.cvedetails.com/cve/CVE-2015-3183/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3183 (cve.mitre.org)
core: Fix chunk header parsing defect. Remove apr_brigade_flatten(), buffering and duplicated code from the HTTP_IN filter, parse chunks in a single pass with zero copy.
Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.  [Graham Leggett, Yann Ylavic]",No,2015-4-4,2015-6-9,2015-7-15,e427c41257957b57036d5a549b260b6185d1dd73,CHANGES,"Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.
Submitted by: Yann Ylavic",https://github.com/apache/httpd/commit/e427c41257957b57036d5a549b260b6185d1dd73#diff-095564e677ebcbd51e2b69e03f02bc9d,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2015-6-9,6,3,3,87,48,Global,0.056807382847972,2690,47353,Jim Jagielski
CVE-2015-3183,20,NA,,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,Partial,None,"The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules/http/http_filters.c.",https://www.cvedetails.com/cve/CVE-2015-3183/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3183 (cve.mitre.org)
core: Fix chunk header parsing defect. Remove apr_brigade_flatten(), buffering and duplicated code from the HTTP_IN filter, parse chunks in a single pass with zero copy.
Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.  [Graham Leggett, Yann Ylavic]",No,2015-4-4,2015-6-9,2015-7-15,e427c41257957b57036d5a549b260b6185d1dd73,docs/log-message-tags/next-number,"Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.
Submitted by: Yann Ylavic",https://github.com/apache/httpd/commit/e427c41257957b57036d5a549b260b6185d1dd73#diff-095564e677ebcbd51e2b69e03f02bc9d,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2015-6-9,6,1,2,87,48,Global,0.020477815699659,6,293,Jim Jagielski
CVE-2015-3183,20,NA,,2015-7-20,2018-1-4,5,None,Remote,Low,Not required,None,Partial,None,"The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules/http/http_filters.c.",https://www.cvedetails.com/cve/CVE-2015-3183/,20150410,Yes. Fixed in Apache HTTP Server 2.4.16: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2015-3183 (cve.mitre.org)
core: Fix chunk header parsing defect. Remove apr_brigade_flatten(), buffering and duplicated code from the HTTP_IN filter, parse chunks in a single pass with zero copy.
Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.  [Graham Leggett, Yann Ylavic]",No,2015-4-4,2015-6-9,2015-7-15,e427c41257957b57036d5a549b260b6185d1dd73,modules/http/http_filters.c,"Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext authorized characters.
Submitted by: Yann Ylavic",https://github.com/apache/httpd/commit/e427c41257957b57036d5a549b260b6185d1dd73#diff-095564e677ebcbd51e2b69e03f02bc9d,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2015-6-9,6,83,130,87,48,Global,0.051150323877597,229,4477,Graham Leggett
CVE-2004-0748,,NA,DoS,2004-10-20,2018-5-2,5,None,Remote,Low,Not required,None,None,Partial,mod_ssl in Apache 2.0.50 and earlier allows remote attackers to cause a denial of service (CPU consumption) by aborting an SSL connection in a way that causes an Apache child process to enter an infinite loop.,https://www.cvedetails.com/cve/CVE-2004-0748/,20040726,Yes. Fixed in Apache HTTP Server 2.0.51: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0748 (cve.mitre.org)
mod_ssl: Fix a potential infinite loop.  PR 29964.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2004-7-7,2004-9-15,e491a00a0101ef123ad85c1288d76449b3f78f82,CHANGES,"* modules/ssl/ssl_engine_io.c (ssl_io_input_read): Fix potential infinite loop in ssl_io_input_getline if connection is aborted without inctx->rc being set.
PR: 29964",https://github.com/apache/httpd/commit/e491a00a0101ef123ad85c1288d76449b3f78f82,Joe Orton,notroj,,Red Hat,2004-8-11,1,4,5,8,1,Local,0.010447346485135,188,17995,Roy T. Fielding
CVE-2004-0748,,NA,DoS,2004-10-20,2018-5-2,5,None,Remote,Low,Not required,None,None,Partial,mod_ssl in Apache 2.0.50 and earlier allows remote attackers to cause a denial of service (CPU consumption) by aborting an SSL connection in a way that causes an Apache child process to enter an infinite loop.,https://www.cvedetails.com/cve/CVE-2004-0748/,20040726,Yes. Fixed in Apache HTTP Server 2.0.51: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2004-0748 (cve.mitre.org)
mod_ssl: Fix a potential infinite loop.  PR 29964.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2004-7-7,2004-9-15,e491a00a0101ef123ad85c1288d76449b3f78f82,modules/ssl/ssl_engine_io.c,"* modules/ssl/ssl_engine_io.c (ssl_io_input_read): Fix potential infinite loop in ssl_io_input_getline if connection is aborted without inctx->rc being set.
PR: 29964",https://github.com/apache/httpd/commit/e491a00a0101ef123ad85c1288d76449b3f78f82,Joe Orton,notroj,,Red Hat,2004-8-11,1,4,4,8,1,Local,0.011853448275862,77,6496,William A. Rowe Jr
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,e5861de44452c64dfe48fd48cd48fedf73df1530,CHANGES,bump SECURITY issue to top of in-development 2.3.15 section.,https://github.com/apache/httpd/commit/e5861de44452c64dfe48fd48cd48fedf73df1530,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2011-9-6,13,6,12,6,6,Local,0.008342576071756,346,41474,Jim Jagielski
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,e62dee76dc7d7104acada86fb7bebe8996b77fcd,docs/manual/mod/core.xml,"Rename LenientWhitespace to UnsafeWhitespace and change StrictWhitespace to the default behavior, after discussion with fielding et al about the purpose of section 3.5. Update the documentation to clarify this.
This patch removes whitespace considerations from the Strict|Unsafe toggle and consolidates them all in the StrictWhitespace|UnsafeWhitespace toggle.  Added a bunch of logic comments to read_request_line parsing. Dropped the badwhitespace list for an all-or-nothing toggle in rrl. Leading space before the method is optimized to be evaluated only once.
Toggled the request from HTTP/0.9 to HTTP/1.0 for more BAD_REQUEST cases.
Moved s/[\n\v\f\r]/ / cleanup logic earlier in the cycle, to operate on each individual line read, and catch bad whitespace errors earlier. This changes the obs-fold to more efficiently condense whitespace and forces concatinatination with a single SP, always. Overrides are not necessary since obs-fold is clearly deprecated.",https://github.com/apache/httpd/commit/e62dee76dc7d7104acada86fb7bebe8996b77fcd,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-25,60,22,44,121,83,Global,0.033257151863819,422,12689,Joshua Slive
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,e62dee76dc7d7104acada86fb7bebe8996b77fcd,include/http_core.h,"Rename LenientWhitespace to UnsafeWhitespace and change StrictWhitespace to the default behavior, after discussion with fielding et al about the purpose of section 3.5. Update the documentation to clarify this.
This patch removes whitespace considerations from the Strict|Unsafe toggle and consolidates them all in the StrictWhitespace|UnsafeWhitespace toggle.  Added a bunch of logic comments to read_request_line parsing. Dropped the badwhitespace list for an all-or-nothing toggle in rrl. Leading space before the method is optimized to be evaluated only once.
Toggled the request from HTTP/0.9 to HTTP/1.0 for more BAD_REQUEST cases.
Moved s/[\n\v\f\r]/ / cleanup logic earlier in the cycle, to operate on each individual line read, and catch bad whitespace errors earlier. This changes the obs-fold to more efficiently condense whitespace and forces concatinatination with a single SP, always. Overrides are not necessary since obs-fold is clearly deprecated.",https://github.com/apache/httpd/commit/e62dee76dc7d7104acada86fb7bebe8996b77fcd,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-25,60,1,2,121,83,Global,0.141698676909945,332,2343,Stefan Fritsch
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,e62dee76dc7d7104acada86fb7bebe8996b77fcd,server/core.c,"Rename LenientWhitespace to UnsafeWhitespace and change StrictWhitespace to the default behavior, after discussion with fielding et al about the purpose of section 3.5. Update the documentation to clarify this.
This patch removes whitespace considerations from the Strict|Unsafe toggle and consolidates them all in the StrictWhitespace|UnsafeWhitespace toggle.  Added a bunch of logic comments to read_request_line parsing. Dropped the badwhitespace list for an all-or-nothing toggle in rrl. Leading space before the method is optimized to be evaluated only once.
Toggled the request from HTTP/0.9 to HTTP/1.0 for more BAD_REQUEST cases.
Moved s/[\n\v\f\r]/ / cleanup logic earlier in the cycle, to operate on each individual line read, and catch bad whitespace errors earlier. This changes the obs-fold to more efficiently condense whitespace and forces concatinatination with a single SP, always. Overrides are not necessary since obs-fold is clearly deprecated.",https://github.com/apache/httpd/commit/e62dee76dc7d7104acada86fb7bebe8996b77fcd,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-25,60,8,16,121,83,Global,0.155254869940511,2662,17146,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,e62dee76dc7d7104acada86fb7bebe8996b77fcd,server/protocol.c,"Rename LenientWhitespace to UnsafeWhitespace and change StrictWhitespace to the default behavior, after discussion with fielding et al about the purpose of section 3.5. Update the documentation to clarify this.
This patch removes whitespace considerations from the Strict|Unsafe toggle and consolidates them all in the StrictWhitespace|UnsafeWhitespace toggle.  Added a bunch of logic comments to read_request_line parsing. Dropped the badwhitespace list for an all-or-nothing toggle in rrl. Leading space before the method is optimized to be evaluated only once.
Toggled the request from HTTP/0.9 to HTTP/1.0 for more BAD_REQUEST cases.
Moved s/[\n\v\f\r]/ / cleanup logic earlier in the cycle, to operate on each individual line read, and catch bad whitespace errors earlier. This changes the obs-fold to more efficiently condense whitespace and forces concatinatination with a single SP, always. Overrides are not necessary since obs-fold is clearly deprecated.",https://github.com/apache/httpd/commit/e62dee76dc7d7104acada86fb7bebe8996b77fcd,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-25,60,90,142,121,83,Global,0.194916058047994,2055,10543,Ryan Bloom
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,e68fc705833b5c3d5b129341247681b925579fa9,CHANGES,"Allow ap_discard_request_body to be called multiple times in the same request.  Essentially, ap_http_filter keeps track of whether it has sent an EOS bucket up the stack, if so, it will only ever send an EOS bucket for this request.

Submitted by:	Ryan Bloom, Justin Erenkrantz, Greg Stein",https://github.com/apache/httpd/commit/e68fc705833b5c3d5b129341247681b925579fa9,Ryan Bloom,,,,2002-6-4,29,6,6,22,5,Local,0.063241749309055,778,12302,Roy T. Fielding
CVE-2002-0392,Not defined,NA,DoS Exec Code,2002-7-3,2008-9-10,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache 1.3 through 1.3.24, and Apache 2.0 through 2.0.36, allows remote attackers to cause a denial of service and possibly execute arbitrary code via a chunk-encoded HTTP request that causes Apache to use an incorrect size.",https://www.cvedetails.com/cve/CVE-2002-0392/,20030402,Yes. Fixed in Apache HTTP Server 2.0.37 and 1.3.26: http://httpd.apache.org/security/vulnerabilities_20.html http://httpd.apache.org/security/vulnerabilities_13.html ,"critical: Apache Chunked encoding vulnerability (CVE-2002-0392)
Malicious requests can cause various effects ranging from a relatively harmless increase in system resources through to denial of service attacks and in some cases the ability to execute arbitrary remote code.",No,2002-5-27,2002-6-17,2002-6-18,e68fc705833b5c3d5b129341247681b925579fa9,modules/http/http_protocol.c,"Allow ap_discard_request_body to be called multiple times in the same request.  Essentially, ap_http_filter keeps track of whether it has sent an EOS bucket up the stack, if so, it will only ever send an EOS bucket for this request.

Submitted by:	Ryan Bloom, Justin Erenkrantz, Greg Stein",https://github.com/apache/httpd/commit/e68fc705833b5c3d5b129341247681b925579fa9,Ryan Bloom,,,,2002-6-4,29,16,21,22,5,Local,0.319395303956256,5958,18654,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,e6a325360820732d69261a237f0215f7841ca984,modules/ssl/ssl_engine_mutex.c,"Apply same patch (nee hack) to mod_ssl as was done to mod_rewrite to get cross-process mutex permissions working.
This is waiting for a proper APR interface, but this does not mean that we should remain broken in the meantime.",https://github.com/apache/httpd/commit/e6a325360820732d69261a237f0215f7841ca984,Justin Erenkrantz,,https://github.com/jerenkrantz,MLB (membro apache dal 2005 al 2010),2002-5-13,309,15,15,15,0,Local,0.026589595375723,23,865,Ralf S. Engelschall
CVE-2002-0843,,NA,DOS Exec Code Overflow,2002-10-11,2016-10-17,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Buffer overflows in the ApacheBench benchmark support program (ab.c) in Apache before 1.3.27, and Apache 2.x before 2.0.43, allow a malicious web server to cause a denial of service and possibly execute arbitrary code via a long response.",https://www.cvedetails.com/cve/CVE-2002-0843/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Buffer overflows in ab utility (CVE-2002-0843)
Buffer overflows in the benchmarking utility ab could be exploited if ab is run against a malicious server 
[Reported to security team: 2002-9-23]
[Issue public: 2002-10-3]
[Update Released: 2002-10-3]",No,2002-9-23,2002-10-3,2002-10-3,e6cb949501003c112cfcec7c60b0ce3fa0e79d96,support/ab.c,Eliminated some fixed-size buffers that didn't have proper overflow checks,https://github.com/apache/httpd/commit/e6cb949501003c112cfcec7c60b0ce3fa0e79d96,Brian Pane,,http://www.brianp.net/,,2002-9-1,1,19,44,19,25,Local,0.023571428571429,165,7000,Dirk-Willem van Gulik
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,e81a6c15ef69a370d66eae11cee3cfbf8aa93dde,modules/generators/mod_cgi.c,Here's the declaration for all to share. Don't expect many to use it.,https://github.com/apache/httpd/commit/e81a6c15ef69a370d66eae11cee3cfbf8aa93dde,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-18,17,1,18,80,17,Global,0.103482920294709,309,2986,Ryan Bloom
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,e81a6c15ef69a370d66eae11cee3cfbf8aa93dde,modules/generators/mod_cgi.h,Here's the declaration for all to share. Don't expect many to use it.,https://github.com/apache/httpd/commit/e81a6c15ef69a370d66eae11cee3cfbf8aa93dde,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-18,17,79,79,80,17,Global,1,79,79,William A. Rowe Jr
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,e862e89cecf7b9bd1accdaaf724371538191c783,server/util_script.c,"PATHEXT is a critial Win32 cmd.exe variable that declares _which_ extensions are given command-name status (such as .exe,.bat,.com,.cmd etc.)",https://github.com/apache/httpd/commit/e862e89cecf7b9bd1accdaaf724371538191c783,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-24,17,3,3,3,0,Local,0.057283142389525,140,2444,Roy T. Fielding
CVE-2010-0425,,NA,Exec Code,2010-3-5,2017-9-18,10,None,Remote,Low,Not required,Complete,Complete,Complete,"modules/arch/win32/mod_isapi.c in mod_isapi in the Apache HTTP Server 2.0.37 through 2.0.63, 2.2.0 through 2.2.14, and 2.3.x before 2.3.7, when running on Windows, does not ensure that request processing is complete before calling isapi_unload for an ISAPI .dll module, which allows remote attackers to execute arbitrary code via unspecified vectors related to a crafted request, a reset packet, and ""orphaned callback pointers.""",https://www.cvedetails.com/cve/CVE-2010-0425/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15 and 2.0.64: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2010-0425 (cve.mitre.org)
     mod_isapi: Do not unload an isapi .dll module until the request
     processing is completed, avoiding orphaned callback pointers.
     [Brett Gervasoni <brettg senseofsecurity.com>, Jeff Trawick]",Yes,2010-2-9,2010-3-2,2010-3-5,e9602aecc484ce45779b1051987c826037d5ff29,CHANGES,"SECURITY: CVE-2010-0425 (cve.mitre.org)
mod_isapi: Do not unload an isapi .dll module until the request processing is completed, avoiding orphaned callback pointers.
Submitted by: Brett Gervasoni <brettg senseofsecurity.com>, trawick
Reviewed by: trawick, wrowe",https://github.com/apache/httpd/commit/e9602aecc484ce45779b1051987c826037d5ff29,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2010-3-2,1,6,7,6,3,Local,0.064873338973772,2607,40186,Jim Jagielski
CVE-2010-0425,,NA,Exec Code,2010-3-5,2017-9-18,10,None,Remote,Low,Not required,Complete,Complete,Complete,"modules/arch/win32/mod_isapi.c in mod_isapi in the Apache HTTP Server 2.0.37 through 2.0.63, 2.2.0 through 2.2.14, and 2.3.x before 2.3.7, when running on Windows, does not ensure that request processing is complete before calling isapi_unload for an ISAPI .dll module, which allows remote attackers to execute arbitrary code via unspecified vectors related to a crafted request, a reset packet, and ""orphaned callback pointers.""",https://www.cvedetails.com/cve/CVE-2010-0425/,20100127,Yes. Fixed in Apache HTTP Server 2.2.15 and 2.0.64: http://httpd.apache.org/security/vulnerabilities_22.html http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CVE-2010-0425 (cve.mitre.org)
     mod_isapi: Do not unload an isapi .dll module until the request
     processing is completed, avoiding orphaned callback pointers.
     [Brett Gervasoni <brettg senseofsecurity.com>, Jeff Trawick]",Yes,2010-2-9,2010-3-2,2010-3-5,e9602aecc484ce45779b1051987c826037d5ff29,modules/arch/win32/mod_isapi.c,"SECURITY: CVE-2010-0425 (cve.mitre.org)
mod_isapi: Do not unload an isapi .dll module until the request processing is completed, avoiding orphaned callback pointers.
Submitted by: Brett Gervasoni <brettg senseofsecurity.com>, trawick
Reviewed by: trawick, wrowe",https://github.com/apache/httpd/commit/e9602aecc484ce45779b1051987c826037d5ff29,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2010-3-2,1,0,2,6,3,Local,0.762119113573407,6603,8664,William A. Rowe Jr
CVE-2006-3918,,NA,XSS,2006-7-27,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"http_protocol.c in (1) IBM HTTP Server 6.0 before 6.0.2.13 and 6.1 before 6.1.0.1, and (2) Apache HTTP Server 1.3 before 1.3.35, 2.0 before 2.0.58, and 2.2 before 2.2.2, does not sanitize the Expect header from an HTTP request when it is reflected back in an error message, which might allow cross-site scripting (XSS) style attacks using web client components that can send arbitrary headers in requests, as demonstrated using a Flash SWF file.",https://www.cvedetails.com/cve/CVE-2006-3918/,20060727,Yes. Fixed in Apache HTTP Server 1.3.35: http://httpd.apache.org/security/vulnerabilities_13.html ,"*) SECURITY: CVE-2006-3918 (cve.mitre.org)
HTML-escape the Expect error message.  Only a security issue if an attacker can influence the Expect header a victim will send to a target site (it's known that some versions of Flash can do this)
Reported by Thiago Zaninotti <thiango nstalker.com>.  [Mark Cox]",No,,2006-5-8,2006-5-1,e97839d65937a514a222d2fee56c5c13f9d7653f,CHANGES,"Thiago Zaninotti reported to security@apache.org on 20060410 a possible cross-site scripting flaw because the Expect header error message isn’t escaped.  We couldn't find a way that this could be used by an attacker however, as they can't influence the Expect header a victim will send to a target site.  Thiago agreed and we're therefore not treating this as a security flaw, but it is a bug that ought to get fixed.  I'll add to  STATUS for 1.3/2.0/2.2 shortly for acks.",https://github.com/apache/httpd/commit/e97839d65937a514a222d2fee56c5c13f9d7653f,Mark J. Cox,iamamoose,https://github.com/iamamoose,"Red Hat, Apache Security, OpenSSL Security",2006-4-18,NA,5,5,6,1,Local,0.008553952021409,179,20926,Roy T. Fielding
CVE-2006-3918,,NA,XSS,2006-7-27,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"http_protocol.c in (1) IBM HTTP Server 6.0 before 6.0.2.13 and 6.1 before 6.1.0.1, and (2) Apache HTTP Server 1.3 before 1.3.35, 2.0 before 2.0.58, and 2.2 before 2.2.2, does not sanitize the Expect header from an HTTP request when it is reflected back in an error message, which might allow cross-site scripting (XSS) style attacks using web client components that can send arbitrary headers in requests, as demonstrated using a Flash SWF file.",https://www.cvedetails.com/cve/CVE-2006-3918/,20060727,Yes. Fixed in Apache HTTP Server 1.3.35: http://httpd.apache.org/security/vulnerabilities_13.html ,"*) SECURITY: CVE-2006-3918 (cve.mitre.org)
HTML-escape the Expect error message.  Only a security issue if an attacker can influence the Expect header a victim will send to a target site (it's known that some versions of Flash can do this)
Reported by Thiago Zaninotti <thiango nstalker.com>.  [Mark Cox]",No,,2006-5-8,2006-5-1,e97839d65937a514a222d2fee56c5c13f9d7653f,modules/http/http_protocol.c,"Thiago Zaninotti reported to security@apache.org on 20060410 a possible cross-site scripting flaw because the Expect header error message isn’t escaped.  We couldn't find a way that this could be used by an attacker however, as they can't influence the Expect header a victim will send to a target site.  Thiago agreed and we're therefore not treating this as a security flaw, but it is a bug that ought to get fixed.  I'll add to  STATUS for 1.3/2.0/2.2 shortly for acks.",https://github.com/apache/httpd/commit/e97839d65937a514a222d2fee56c5c13f9d7653f,Mark J. Cox,iamamoose,https://github.com/iamamoose,"Red Hat, Apache Security, OpenSSL Security",2006-4-18,NA,1,2,6,1,Local,9.40733772342427E-05,2,21260,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,ea75efdffffd8f126d3395f07ca82c42811f5137,modules/http/byterange_filter.c,More casting help...,https://github.com/apache/httpd/commit/ea75efdffffd8f126d3395f07ca82c42811f5137,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-25,13,23,34,23,11,Local,0.252141982864137,206,817,Justin Erenkrantz
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,eb99a690dcf43cf1254a8cf21c541d835a8ef3d5,server/protocol.c,"Correct the parser construction for several optimizations, based on the fact that bad whitespace shall not be permitted or corrected in any operating mode, while preserving the  ability to extract bad method/uri/proto for later reporting and diagnostics.
This change causes badwhitespace in the request line or any request field line to always fail, and not honor the setting of the HttpProtocolOptions Unsafe option. Mult SP characters or trailing SP characters in the request line are still permitted in Unsafe mode. Adjusted several error message emits to match these changes.",https://github.com/apache/httpd/commit/eb99a690dcf43cf1254a8cf21c541d835a8ef3d5,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-29,60,40,94,40,54,Local,0.209757005865376,2253,10741,Ryan Bloom
CVE-2016-0736,310,NA,,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,Partial,None,None,"In Apache HTTP Server versions 2.4.0 to 2.4.23, mod_session_crypto was encrypting its data/cookie using the configured ciphers with possibly either CBC or ECB modes of operation (AES256-CBC by default), hence no selectable or builtin authenticated encryption. This made it vulnerable to padding oracle attacks, particularly with CBC.",https://www.cvedetails.com/cve/CVE-2016-0736/,20151216,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-0736 (cve.mitre.org)
mod_session_crypto: Authenticate the session data/cookie with a MAC (SipHash) to prevent deciphering or tampering with a padding oracle attack.  [Yann Ylavic, Colm MacCarthaigh]", No,2016-1-20,2016-12-20,2016-12-20,ebf4cf2f62d8bc7b8c0cce017a6b8674c8d5fada,docs/log-message-tags/next-number,Follow up to r1772812: update APLOGNO().,https://github.com/apache/httpd/commit/ebf4cf2f62d8bc7b8c0cce017a6b8674c8d5fada,Yann Ylavic,ylavic,https://github.com/ylavic,,2017-2-20,77,1,2,3,3,Global,0.224824355971897,96,427,Yann Ylavic
CVE-2016-0736,310,NA,,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,Partial,None,None,"In Apache HTTP Server versions 2.4.0 to 2.4.23, mod_session_crypto was encrypting its data/cookie using the configured ciphers with possibly either CBC or ECB modes of operation (AES256-CBC by default), hence no selectable or builtin authenticated encryption. This made it vulnerable to padding oracle attacks, particularly with CBC.",https://www.cvedetails.com/cve/CVE-2016-0736/,20151216,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-0736 (cve.mitre.org)
mod_session_crypto: Authenticate the session data/cookie with a MAC (SipHash) to prevent deciphering or tampering with a padding oracle attack.  [Yann Ylavic, Colm MacCarthaigh]", No,2016-1-20,2016-12-20,2016-12-20,ebf4cf2f62d8bc7b8c0cce017a6b8674c8d5fada,modules/session/mod_session_crypto.c,Follow up to r1772812: update APLOGNO().,https://github.com/apache/httpd/commit/ebf4cf2f62d8bc7b8c0cce017a6b8674c8d5fada,Yann Ylavic,ylavic,https://github.com/ylavic,,2017-2-20,77,2,4,3,3,Global,0.099145299145299,232,2340,Graham Leggett
CVE-2018-1303,125,NA,DoS,2018-3-26,2018-6-2,5,None,Remote,Low,Not required,None,None,Partial,"A specially crafted HTTP request header could have crashed the Apache HTTP Server prior to version 2.4.30 due to an out of bound read while preparing data to be cached in shared memory. It could be used as a Denial of Service attack against users of mod_cache_socache. The vulnerability is considered as low risk since mod_cache_socache is not widely used, mod_cache_disk is not concerned by this vulnerability.",https://www.cvedetails.com/cve/CVE-2018-1303/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2018-1303 (cve.mitre.org)
mod_cache_socache: Fix request headers parsing to avoid a possible crash with specially crafted input data. [Ruediger Pluem]", No,2018-1-23,2018-3-21,2018-3-21,ec03cc707f817897aa3328a29e924d96f124c6ac,CHANGES,mod_cache_socache: Fix caching of empty headers up to carriage return.,https://github.com/apache/httpd/commit/ec03cc707f817897aa3328a29e924d96f124c6ac,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-15,5,3,3,5,1,Local,0.01708926158493,860,50324,Jim Jagielski
CVE-2018-1303,125,NA,DoS,2018-3-26,2018-6-2,5,None,Remote,Low,Not required,None,None,Partial,"A specially crafted HTTP request header could have crashed the Apache HTTP Server prior to version 2.4.30 due to an out of bound read while preparing data to be cached in shared memory. It could be used as a Denial of Service attack against users of mod_cache_socache. The vulnerability is considered as low risk since mod_cache_socache is not widely used, mod_cache_disk is not concerned by this vulnerability.",https://www.cvedetails.com/cve/CVE-2018-1303/,20171207,Yes. Fixed in Apache HTTP Server 2.4.33: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2018-1303 (cve.mitre.org)
mod_cache_socache: Fix request headers parsing to avoid a possible crash with specially crafted input data. [Ruediger Pluem]", No,2018-1-23,2018-3-21,2018-3-21,ec03cc707f817897aa3328a29e924d96f124c6ac,modules/cache/mod_cache_socache.c,mod_cache_socache: Fix caching of empty headers up to carriage return.,https://github.com/apache/httpd/commit/ec03cc707f817897aa3328a29e924d96f124c6ac,Yann Ylavic,ylavic,https://github.com/ylavic,,2018-2-15,5,2,3,5,1,Local,0.041006014215418,75,1829,Graham Leggett
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,ee42a492a1e150c65206af084f49ee85bd33bdc4,CHANGES,"Remove the Win32 script-processing exception from mod_cgi, and roll build_command_line/build_argv_list into a unified, overrideable ap_cgi_build_command optional function.

   Eliminates a ton of Win32 cruft from core.c for registry parsing. Win32 (through the default handler, and newest changes to the apr_proc_create fn) continues to serve .bat/.exe files.  This is in preparation for adding modules/arch/win32/mod_win32 for scripts.

   Please review the mod_cgi.c behavior very carefully.",https://github.com/apache/httpd/commit/ee42a492a1e150c65206af084f49ee85bd33bdc4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-17,17,4,4,59,414,Global,0.026472280836371,276,10426,Roy T. Fielding
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,ee42a492a1e150c65206af084f49ee85bd33bdc4,include/http_core.h,"Remove the Win32 script-processing exception from mod_cgi, and roll build_command_line/build_argv_list into a unified, overrideable ap_cgi_build_command optional function.

   Eliminates a ton of Win32 cruft from core.c for registry parsing. Win32 (through the default handler, and newest changes to the apr_proc_create fn) continues to serve .bat/.exe files.  This is in preparation for adding modules/arch/win32/mod_win32 for scripts.

   Please review the mod_cgi.c behavior very carefully.",https://github.com/apache/httpd/commit/ee42a492a1e150c65206af084f49ee85bd33bdc4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-17,17,0,19,59,414,Global,0.137130801687764,130,948,Roy T. Fielding
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,ee42a492a1e150c65206af084f49ee85bd33bdc4,modules/generators/mod_cgi.c,"Remove the Win32 script-processing exception from mod_cgi, and roll build_command_line/build_argv_list into a unified, overrideable ap_cgi_build_command optional function.

   Eliminates a ton of Win32 cruft from core.c for registry parsing. Win32 (through the default handler, and newest changes to the apr_proc_create fn) continues to serve .bat/.exe files.  This is in preparation for adding modules/arch/win32/mod_win32 for scripts.

   Please review the mod_cgi.c behavior very carefully.",https://github.com/apache/httpd/commit/ee42a492a1e150c65206af084f49ee85bd33bdc4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-17,17,52,129,59,414,Global,0.098045822102426,291,2968,Ryan Bloom
CVE-2001-0729,Not defined,NA,Bypass,2001-10-30,2012-10-22,5,None,Remote,Low,Not required,None,None,Partial,Apache 1.3.20 on Windows servers allows remote attackers to bypass the default index page and list directory contents via a URL with a large number of / (slash) characters.,https://www.cvedetails.com/cve/CVE-2001-0729/,20011008,Yes. Fixed in Apache HTTP Server 1.3.22: http://httpd.apache.org/security/vulnerabilities_13.html,A vulnerability was found in the Win32 port of Apache 1.3.20. A client submitting a very long URI could cause a directory listing to be returned rather than the default index page. ,No,2001-9-18,2001-9-28,2001-10-12,ee42a492a1e150c65206af084f49ee85bd33bdc4,server/core.c,"Remove the Win32 script-processing exception from mod_cgi, and roll build_command_line/build_argv_list into a unified, overrideable ap_cgi_build_command optional function.

   Eliminates a ton of Win32 cruft from core.c for registry parsing. Win32 (through the default handler, and newest changes to the apr_proc_create fn) continues to serve .bat/.exe files.  This is in preparation for adding modules/arch/win32/mod_win32 for scripts.

   Please review the mod_cgi.c behavior very carefully.",https://github.com/apache/httpd/commit/ee42a492a1e150c65206af084f49ee85bd33bdc4,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-9-17,17,3,321,59,414,Global,0.190284307141258,850,4467,Ryan Bloom
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,ef8c0695050b55e18ee731aea7e0393074f992be,modules/http/byterange_filter.c,* Remove duplicate condition,https://github.com/apache/httpd/commit/ef8c0695050b55e18ee731aea7e0393074f992be,Ruediger Pluem,,,,2011-8-25,13,2,4,2,2,Local,0.045977011494253,36,783,Justin Erenkrantz
CVE-2012-3502,200,NA,+Info,2012-8-22,2013-4-18,4.3,None,Remote,Medium,Not required,Partial,None,None,"The proxy functionality in (1) mod_proxy_ajp.c in the mod_proxy_ajp module and (2) mod_proxy_http.c in the mod_proxy_http module in the Apache HTTP Server 2.4.x before 2.4.3 does not properly determine the situations that require closing a back-end connection, which allows remote attackers to obtain sensitive information in opportunistic circumstances by reading a response that was intended for a different client.",https://www.cvedetails.com/cve/CVE-2012-3502/,20120614,Yes. Fixed in Apache HTTP Server 2.4.3: https://httpd.apache.org/security/vulnerabilities_24.html," *) SECURITY: CVE-2012-3502  (cve.mitre.org)
mod_proxy_ajp, mod_proxy_http: Fix an issue in back end connection closing which could lead to privacy issues due to a response mixup. PR 53727. [Rainer Jung]",No,,2012-8-16,2012-8-21,ef9d7be0ee48b4cad7abdbb3d710d7966093973c,modules/proxy/mod_proxy_ajp.c,Optimize bit field operations in mod_proxy.,https://github.com/apache/httpd/commit/ef9d7be0ee48b4cad7abdbb3d710d7966093973c,Rainer Jung,,,kippdata,2012-8-16,1,13,26,24,23,Global,0.00976253298153,37,3790,William A. Rowe Jr
CVE-2012-3502,200,NA,+Info,2012-8-22,2013-4-18,4.3,None,Remote,Medium,Not required,Partial,None,None,"The proxy functionality in (1) mod_proxy_ajp.c in the mod_proxy_ajp module and (2) mod_proxy_http.c in the mod_proxy_http module in the Apache HTTP Server 2.4.x before 2.4.3 does not properly determine the situations that require closing a back-end connection, which allows remote attackers to obtain sensitive information in opportunistic circumstances by reading a response that was intended for a different client.",https://www.cvedetails.com/cve/CVE-2012-3502/,20120614,Yes. Fixed in Apache HTTP Server 2.4.3: https://httpd.apache.org/security/vulnerabilities_24.html," *) SECURITY: CVE-2012-3502  (cve.mitre.org)
mod_proxy_ajp, mod_proxy_http: Fix an issue in back end connection closing which could lead to privacy issues due to a response mixup. PR 53727. [Rainer Jung]",No,,2012-8-16,2012-8-21,ef9d7be0ee48b4cad7abdbb3d710d7966093973c,modules/proxy/mod_proxy_http.c,Optimize bit field operations in mod_proxy.,https://github.com/apache/httpd/commit/ef9d7be0ee48b4cad7abdbb3d710d7966093973c,Rainer Jung,,,kippdata,2012-8-16,1,11,21,24,23,Global,0.002361998075409,27,11431,Graham Leggett
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,efb1027020d05457de18a901fc488582c663f083,modules/http/byterange_filter.c,"merge some more adjacent ranges such as a-n,n+1-b, and refactor/reduce the tests on the start/end positions.",https://github.com/apache/httpd/commit/efb1027020d05457de18a901fc488582c663f083,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2011-8-27,13,13,29,13,16,Local,0.017890191239975,29,1621,Jim Jagielski
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,f053104613a4c9e8813fc91cc1e136cd6c1b2612,docs/manual/mod/core.xml,"Perform correct, strict parsing of the request line, handling the http protocol tag, url and method appropriately, and attempting  to extract values even in the presence of unusual whitespace in keeping with section 3.5, prior to responding with whatever error reply is needed. Conforms to RFC7230 in all respects, the section 3.5 optional behavior can be disabled by the user with a new HttpProtocolOptions StrictWhitespace flag. In all cases, the_request is regenerated from the parsed components with exactly two space characters.
Shift sf's 'strict' method check from the Strict behavior because it violates forward proxy logic, adding a new RegisteredMethods flag, as it will certainly be useful to some.",https://github.com/apache/httpd/commit/f053104613a4c9e8813fc91cc1e136cd6c1b2612,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-18,60,29,31,275,113,Global,0.024570610687023,309,12576,Joshua Slive
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,f053104613a4c9e8813fc91cc1e136cd6c1b2612,include/ap_mmn.h,"Perform correct, strict parsing of the request line, handling the http protocol tag, url and method appropriately, and attempting  to extract values even in the presence of unusual whitespace in keeping with section 3.5, prior to responding with whatever error reply is needed. Conforms to RFC7230 in all respects, the section 3.5 optional behavior can be disabled by the user with a new HttpProtocolOptions StrictWhitespace flag. In all cases, the_request is regenerated from the parsed components with exactly two space characters.
Shift sf's 'strict' method check from the Strict behavior because it violates forward proxy logic, adding a new RegisteredMethods flag, as it will certainly be useful to some.",https://github.com/apache/httpd/commit/f053104613a4c9e8813fc91cc1e136cd6c1b2612,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-18,60,4,6,275,113,Global,0.146058091286307,352,2410,William A. Rowe Jr
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,f053104613a4c9e8813fc91cc1e136cd6c1b2612,include/http_core.h,"Perform correct, strict parsing of the request line, handling the http protocol tag, url and method appropriately, and attempting  to extract values even in the presence of unusual whitespace in keeping with section 3.5, prior to responding with whatever error reply is needed. Conforms to RFC7230 in all respects, the section 3.5 optional behavior can be disabled by the user with a new HttpProtocolOptions StrictWhitespace flag. In all cases, the_request is regenerated from the parsed components with exactly two space characters.
Shift sf's 'strict' method check from the Strict behavior because it violates forward proxy logic, adding a new RegisteredMethods flag, as it will certainly be useful to some.",https://github.com/apache/httpd/commit/f053104613a4c9e8813fc91cc1e136cd6c1b2612,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-18,60,10,10,275,113,Global,0.139126712328767,325,2336,Stefan Fritsch
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,f053104613a4c9e8813fc91cc1e136cd6c1b2612,server/core.c,"Perform correct, strict parsing of the request line, handling the http protocol tag, url and method appropriately, and attempting  to extract values even in the presence of unusual whitespace in keeping with section 3.5, prior to responding with whatever error reply is needed. Conforms to RFC7230 in all respects, the section 3.5 optional behavior can be disabled by the user with a new HttpProtocolOptions StrictWhitespace flag. In all cases, the_request is regenerated from the parsed components with exactly two space characters.
Shift sf's 'strict' method check from the Strict behavior because it violates forward proxy logic, adding a new RegisteredMethods flag, as it will certainly be useful to some.",https://github.com/apache/httpd/commit/f053104613a4c9e8813fc91cc1e136cd6c1b2612,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-18,60,37,55,275,113,Global,0.153576437587658,2628,17112,Ryan Bloom
CVE-2016-8743,19,NA,Http response splitting,2017-7-27,2018-4-24,5,None,Remote,Low,Not required,None,Partial,None,"Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",https://www.cvedetails.com/cve/CVE-2016-8743/,20161018,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-8743 (cve.mitre.org)
Enforce HTTP request grammar corresponding to RFC7230 for request lines and request headers, to prevent response splitting and cache pollution by malicious clients or downstream proxies. [William Rowe, Stefan Fritsch]", No,2016-2-10,2016-12-20,2017-1-13,f053104613a4c9e8813fc91cc1e136cd6c1b2612,server/protocol.c,"Perform correct, strict parsing of the request line, handling the http protocol tag, url and method appropriately, and attempting  to extract values even in the presence of unusual whitespace in keeping with section 3.5, prior to responding with whatever error reply is needed. Conforms to RFC7230 in all respects, the section 3.5 optional behavior can be disabled by the user with a new HttpProtocolOptions StrictWhitespace flag. In all cases, the_request is regenerated from the parsed components with exactly two space characters.
Shift sf's 'strict' method check from the Strict behavior because it violates forward proxy logic, adding a new RegisteredMethods flag, as it will certainly be useful to some.",https://github.com/apache/httpd/commit/f053104613a4c9e8813fc91cc1e136cd6c1b2612,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-8-18,60,195,286,275,113,Global,0.174501216545012,1793,10275,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f173ce9a8898b6ac62f366dd530b81d8e5bcf20d,server/config.c,More changes based on Ian's patch.,https://github.com/apache/httpd/commit/f173ce9a8898b6ac62f366dd530b81d8e5bcf20d,Victor J. Orlikowski,,,IBM,2001-5-11,16,8,14,8,6,Local,0.003501860363318,16,4569,Roy T. Fielding
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,f23e48e3747ce0da6cba16e2884a248077ea3c87,modules/experimental/mod_cache.dsp,Missing version tags [noted while rolling win32 binaries.],https://github.com/apache/httpd/commit/f23e48e3747ce0da6cba16e2884a248077ea3c87,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,30,35,115,27,Local,0.296428571428571,83,280,Bill Stoddard
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,f23e48e3747ce0da6cba16e2884a248077ea3c87,modules/experimental/mod_charset_lite.dsp,Missing version tags [noted while rolling win32 binaries.],https://github.com/apache/httpd/commit/f23e48e3747ce0da6cba16e2884a248077ea3c87,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,29,29,115,27,Local,1,124,124,William A. Rowe Jr
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,f23e48e3747ce0da6cba16e2884a248077ea3c87,modules/experimental/mod_disk_cache.dsp,Missing version tags [noted while rolling win32 binaries.],https://github.com/apache/httpd/commit/f23e48e3747ce0da6cba16e2884a248077ea3c87,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,28,39,115,27,Local,0.308988764044944,55,178,Bill Stoddard
CVE-2003-0017,,NA,,2003-2-7,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 before 2.0.44 on Windows platforms allows remote attackers to obtain certain files via an HTTP request that ends in certain illegal characters such as "">"", which causes a different filename to be processed and served.",https://www.cvedetails.com/cve/CVE-2003-0017/,20040901,Yes. Fixed in Apache HTTP Server 2.0.44: http://httpd.apache.org/security/vulnerabilities_20.html,On Windows platforms Apache could be forced to serve unexpected files by appending illegal characters such as '<' to the request URL,No,2002-11-15,2003-1-20,2003-1-20,f23e48e3747ce0da6cba16e2884a248077ea3c87,modules/experimental/mod_mem_cache.dsp,Missing version tags [noted while rolling win32 binaries.],https://github.com/apache/httpd/commit/f23e48e3747ce0da6cba16e2884a248077ea3c87,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2003-1-20,1,28,39,115,27,Local,0.311111111111111,56,180,Ian Holsman
CVE-2004-0942,,NA,DoS,2005-2-9,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,Apache webserver 2.0.52 and earlier allows remote attackers to cause a denial of service (CPU consumption) via an HTTP GET request with a MIME header containing multiple lines with a large number of space characters.,https://www.cvedetails.com/cve/CVE-2004-0942/,20041012,Yes. Fixed in Apache HTTP Server 2.0.53: http://httpd.apache.org/security/vulnerabilities_20.html ,"*) SECURITY: CAN-2004-0942 (cve.mitre.org)
     Fix for memory consumption DoS in handling of MIME folded request headers.  [Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,2004-10-28,2004-11-1,2005-2-8,f2ef1c9ece9deeb8cc22a7e7ab1415374d9283f2,server/protocol.c,"Fix for memory consumption DoS, CVE CAN-2004-0942:
* server/protocol.c (ap_rgetline_core): Don't trim trailing whitespace
from the buffer here.
(ap_get_mime_headers_core): Trim trailing whitespace here, after
reading a complete field including continuation lines.  Also simplify
code to remove whitespace between field-name and colon.

Reviewed by: Andr Malo, Bill Stoddard",https://github.com/apache/httpd/commit/f2ef1c9ece9deeb8cc22a7e7ab1415374d9283f2,Joe Orton,notroj,,Red Hat,2004-11-4,2,22,69,22,47,Local,0.067787319568792,371,5473,Ryan Bloom
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,f2f45e3007c2a68a2ad4e36ae599c1020353ed4f,server/mpm/beos/beos.c,Change the beos mpm to use the new pools creation call to try and improve performance a little.  Tidy up a comment.,https://github.com/apache/httpd/commit/f2f45e3007c2a68a2ad4e36ae599c1020353ed4f,David Reid,,,"BeOS MPM and APR code, party animal",2001-12-14,309,5,9,5,4,Local,0.779952076677316,1953,2504,David Reid
CVE-2006-4110,,NA,Bypass,2006-8-14,2017-7-19,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache 2.2.2, when running on Windows, allows remote attackers to read source code of CGI programs via a request that contains uppercase (or alternate case) characters that bypass the case-sensitive ScriptAlias directive, but allow access to the file on case-insensitive file systems.",https://www.cvedetails.com/cve/CVE-2006-4110/,20060814,No. It is DISPUTED,,No,,,,f324d1f0caf950ec6c24a8f3e2cac93d7074b632,docs/manual/mod/mod_alias.html.en,"Make it clear that url-path is always case-sensitive. Provide an example of using a regex to make it case-insensitive. Make it clear that ScriptAlias is only used when you want BOTH mapping and script-designation.
Partially in response to the disputed vulnerability:
http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4110",https://github.com/apache/httpd/commit/f324d1f0caf950ec6c24a8f3e2cac93d7074b632,Joshua Slive,,http://www.slive.ca,,2006-8-20,1,46,56,92,20,Local,0.400339270568278,472,1179,Joshua Slive
CVE-2006-4110,,NA,Bypass,2006-8-14,2017-7-19,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache 2.2.2, when running on Windows, allows remote attackers to read source code of CGI programs via a request that contains uppercase (or alternate case) characters that bypass the case-sensitive ScriptAlias directive, but allow access to the file on case-insensitive file systems.",https://www.cvedetails.com/cve/CVE-2006-4110/,20060814,No. It is DISPUTED,,No,,,,f324d1f0caf950ec6c24a8f3e2cac93d7074b632,docs/manual/mod/mod_alias.xml,"Make it clear that url-path is always case-sensitive. Provide an example of using a regex to make it case-insensitive. Make it clear that ScriptAlias is only used when you want BOTH mapping and script-designation.
Partially in response to the disputed vulnerability:
http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4110",https://github.com/apache/httpd/commit/f324d1f0caf950ec6c24a8f3e2cac93d7074b632,Joshua Slive,,http://www.slive.ca,,2006-8-20,1,46,56,92,20,Local,0.70077519379845,452,645,Joshua Slive
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,f37a8c70fb90acc6219a4cd78b97bb535e411d04,CHANGES,"Formatted output changes only…† Introduced new mod_autoindex IndexOptions flags, SuppressIcon to drop the icon column and SuppressRules to drop the <hr> elements. These are necessary for HTML 3.2 final formatting rules.
Introduced HTMLTable to create rudimentary HTML table listings (implies FancyIndexing). Necessary for alternate charsets, since the columns are borked by multibyte characters.
Re-Introduced the mod_autoindex IndexOptions flag TrackModified from Apache 1.3.15.  This is needed for two reasons, first, given multiple machines within a server farm, ETags and Last-Modified stamps won't correspond from machine to machine, and second, many
     Unixes don't capture changes to the date or timestamp of existing files, since these don't modify the dirent itself. [Originally for 1.3 by me]
Re-Introduced the mod_autoindex InextOptions flag FoldersFirst and DirectoryWidth options from Apache 1.3.10. [Originally for 1.3 by Ken Coar]",https://github.com/apache/httpd/commit/f37a8c70fb90acc6219a4cd78b97bb535e411d04,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-7,4,22,23,502,239,Global,0.016452288363745,165,10029,Roy T. Fielding
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,f37a8c70fb90acc6219a4cd78b97bb535e411d04,docs/manual/mod/mod_autoindex.html,"Formatted output changes only…† Introduced new mod_autoindex IndexOptions flags, SuppressIcon to drop the icon column and SuppressRules to drop the <hr> elements. These are necessary for HTML 3.2 final formatting rules.
Introduced HTMLTable to create rudimentary HTML table listings (implies FancyIndexing). Necessary for alternate charsets, since the columns are borked by multibyte characters.
Re-Introduced the mod_autoindex IndexOptions flag TrackModified from Apache 1.3.15.  This is needed for two reasons, first, given multiple machines within a server farm, ETags and Last-Modified stamps won't correspond from machine to machine, and second, many
     Unixes don't capture changes to the date or timestamp of existing files, since these don't modify the dirent itself. [Originally for 1.3 by me]
Re-Introduced the mod_autoindex InextOptions flag FoldersFirst and DirectoryWidth options from Apache 1.3.10. [Originally for 1.3 by Ken Coar]",https://github.com/apache/httpd/commit/f37a8c70fb90acc6219a4cd78b97bb535e411d04,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-7,4,145,275,502,239,Global,0.169795221843003,398,2344,Ken Coar
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,f37a8c70fb90acc6219a4cd78b97bb535e411d04,modules/generators/mod_autoindex.c,"Formatted output changes only…† Introduced new mod_autoindex IndexOptions flags, SuppressIcon to drop the icon column and SuppressRules to drop the <hr> elements. These are necessary for HTML 3.2 final formatting rules.
Introduced HTMLTable to create rudimentary HTML table listings (implies FancyIndexing). Necessary for alternate charsets, since the columns are borked by multibyte characters.
Re-Introduced the mod_autoindex IndexOptions flag TrackModified from Apache 1.3.15.  This is needed for two reasons, first, given multiple machines within a server farm, ETags and Last-Modified stamps won't correspond from machine to machine, and second, many
     Unixes don't capture changes to the date or timestamp of existing files, since these don't modify the dirent itself. [Originally for 1.3 by me]
Re-Introduced the mod_autoindex InextOptions flag FoldersFirst and DirectoryWidth options from Apache 1.3.10. [Originally for 1.3 by Ken Coar]",https://github.com/apache/httpd/commit/f37a8c70fb90acc6219a4cd78b97bb535e411d04,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-7,4,335,443,502,239,Global,0.252834814587803,825,3263,Roy T. Fielding
CVE-2014-3583,119,NA,DoS Overflow,2014-12-15,2017-10-2,5,None,Remote,Low,Not required,None,None,Partial,The handle_headers function in mod_proxy_fcgi.c in the mod_proxy_fcgi module in the Apache HTTP Server 2.4.10 allows remote FastCGI servers to cause a denial of service (buffer over-read and daemon crash) via long response headers.,https://www.cvedetails.com/cve/CVE-2014-3583/,20140514,Yes. Fixed in Apache HTTP Server 2.4.12: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-3583 (cve.mitre.org)
mod_proxy_fcgi: Fix a potential crash due to buffer over-read, with response headers' size above 8K.  [Yann Ylavic, Jeff Trawick]",No,2014-9-17,2014-11-12,2015-1-30,f392bdefdda033b2853dce4848d101b392ae6c91,CHANGES,"mod_proxy_fcgi, mod_authnz_fcgi: SECURITY: CVE-2014-3583 (cve.mitre.org)
Fix a potential crash with response headers' size above 8K.",https://github.com/apache/httpd/commit/f392bdefdda033b2853dce4848d101b392ae6c91,Yann Ylavic,ylavic,https://github.com/ylavic,,2014-11-16,7,4,4,14,10,Global,0.003424730837561,160,46719,Jim Jagielski
CVE-2014-3583,119,NA,DoS Overflow,2014-12-15,2017-10-2,5,None,Remote,Low,Not required,None,None,Partial,The handle_headers function in mod_proxy_fcgi.c in the mod_proxy_fcgi module in the Apache HTTP Server 2.4.10 allows remote FastCGI servers to cause a denial of service (buffer over-read and daemon crash) via long response headers.,https://www.cvedetails.com/cve/CVE-2014-3583/,20140514,Yes. Fixed in Apache HTTP Server 2.4.12: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-3583 (cve.mitre.org)
mod_proxy_fcgi: Fix a potential crash due to buffer over-read, with response headers' size above 8K.  [Yann Ylavic, Jeff Trawick]",No,2014-9-17,2014-11-12,2015-1-30,f392bdefdda033b2853dce4848d101b392ae6c91,modules/aaa/mod_authnz_fcgi.c,"mod_proxy_fcgi, mod_authnz_fcgi: SECURITY: CVE-2014-3583 (cve.mitre.org)
Fix a potential crash with response headers' size above 8K.",https://github.com/apache/httpd/commit/f392bdefdda033b2853dce4848d101b392ae6c91,Yann Ylavic,ylavic,https://github.com/ylavic,,2014-11-16,7,5,10,14,10,Global,0.043010752688172,64,1488,Jeff Trawick
CVE-2014-3583,119,NA,DoS Overflow,2014-12-15,2017-10-2,5,None,Remote,Low,Not required,None,None,Partial,The handle_headers function in mod_proxy_fcgi.c in the mod_proxy_fcgi module in the Apache HTTP Server 2.4.10 allows remote FastCGI servers to cause a denial of service (buffer over-read and daemon crash) via long response headers.,https://www.cvedetails.com/cve/CVE-2014-3583/,20140514,Yes. Fixed in Apache HTTP Server 2.4.12: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2014-3583 (cve.mitre.org)
mod_proxy_fcgi: Fix a potential crash due to buffer over-read, with response headers' size above 8K.  [Yann Ylavic, Jeff Trawick]",No,2014-9-17,2014-11-12,2015-1-30,f392bdefdda033b2853dce4848d101b392ae6c91,modules/proxy/mod_proxy_fcgi.c,"mod_proxy_fcgi, mod_authnz_fcgi: SECURITY: CVE-2014-3583 (cve.mitre.org)
Fix a potential crash with response headers' size above 8K.",https://github.com/apache/httpd/commit/f392bdefdda033b2853dce4848d101b392ae6c91,Yann Ylavic,ylavic,https://github.com/ylavic,,2014-11-16,7,5,10,14,10,Global,0.032141240380263,71,2209,Garrett Rooney
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,f422e35e7187dfd5cac1974f43c50f96b7467777,modules/http/byterange_filter.c,More merge fixes...,https://github.com/apache/httpd/commit/f422e35e7187dfd5cac1974f43c50f96b7467777,Jim Jagielski,jimjiag,https://github.com/jimjag,Red Hat,2011-8-26,13,20,35,20,15,Local,0.40814963259853,611,1497,Jim Jagielski
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,f50bc5329f8d42ecce1da20fd57a2b1a046a3165,os/netware/os.h,Hold the Apache screen open on NetWare if exit() is called for any reason during initialization and configuration of the main Apache process.,https://github.com/apache/httpd/commit/f50bc5329f8d42ecce1da20fd57a2b1a046a3165,Bradley Nicholes,,,Novell,2002-7-24,13,3,4,11,1,Local,0.976190476190476,82,84,Bradley Nicholes
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,f50bc5329f8d42ecce1da20fd57a2b1a046a3165,server/mpm/netware/mpm_netware.c,Hold the Apache screen open on NetWare if exit() is called for any reason during initialization and configuration of the main Apache process.,https://github.com/apache/httpd/commit/f50bc5329f8d42ecce1da20fd57a2b1a046a3165,Bradley Nicholes,,,Novell,2002-7-24,13,8,8,11,1,Local,0.947093202091664,3079,3251,Bradley Nicholes
CVE-2010-2068,200,NA,+Info,2010-6-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"mod_proxy_http.c in mod_proxy_http in the Apache HTTP Server 2.2.9 through 2.2.15, 2.3.4-alpha, and 2.3.5-alpha on Windows, NetWare, and OS/2, in certain configurations involving proxy worker pools, does not properly detect timeouts, which allows remote attackers to obtain a potentially sensitive response intended for a different client in opportunistic circumstances via a normal HTTP request.",https://www.cvedetails.com/cve/CVE-2010-2068/,20100525,Yes. Fixed in Apache HTTP Server 2.2.16: http://httpd.apache.org/security/vulnerabilities_22.html," *) SECURITY: CVE-2010-2068 (cve.mitre.org) 
mod_proxy_ajp, mod_proxy_http, mod_reqtimeout: Fix timeout detection for platforms Windows, Netware and OS2.  PR: 49417. [Rainer Jung]",Yes,,2010-6-9,2010-7-25,f57bceb2c90671301abdd30e6fd1b07167355be0,modules/proxy/mod_proxy_ajp.c,"* Use APR_STATUS_IS_TIMEUP instead of direct compare to APR_TIMEUP to be more safe on different platforms.
Pointed out by: rjung",https://github.com/apache/httpd/commit/f57bceb2c90671301abdd30e6fd1b07167355be0,Ruediger Pluem,,,,2010-6-10,1,6,9,6,3,Local,0.207908557306148,673,3237,William A. Rowe Jr
CVE-2011-3348,399,NA,DoS,2011-9-20,2017-12-28,4.3,None,Remote,Medium,Not required,None,None,Partial,"The mod_proxy_ajp module in the Apache HTTP Server before 2.2.21, when used with mod_proxy_balancer in certain configurations, allows remote attackers to cause a denial of service (temporary ""error state"" in the backend server) via a malformed HTTP request.",https://www.cvedetails.com/cve/CVE-2011-3348/,20110830,Yes. Fixed in Apache HTTP Server 2.2.21. http://httpd.apache.org/security/vulnerabilities_22.html ,"*) SECURITY: CVE-2011-3348 (cve.mitre.org)
mod_proxy_ajp: Respond with HTTP_NOT_IMPLEMENTED when the method is not recognized.  [Jean-Frederic Clere]",No,2011-9-7,2011-9-14,2011-9-14,f62c174efb1143fe067fb1f74a0b995436d6698e,modules/proxy/mod_proxy_ajp.c,Use HTTP_NOT_IMPLEMENTED instead of HTTP_BAD_REQUEST.,https://github.com/apache/httpd/commit/f62c174efb1143fe067fb1f74a0b995436d6698e,Jean-Frederic Clere,,,,2011-9-8,1,4,6,4,2,Local,0.119965477560414,417,3476,William A. Rowe Jr
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,f7219cacf5933c7d5b927bc334f3b1f0b6943573,modules/generators/mod_autoindex.c,"Thanks rbb, and the modproxy-dev auto build report for pointing these out.",https://github.com/apache/httpd/commit/f7219cacf5933c7d5b927bc334f3b1f0b6943573,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-7,4,2,6,2,4,Local,0.303826384922901,1064,3502,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,f783262179220fd75ffa7c73b8086db473e217e7,CHANGES,"prefork MPM: Ignore mutex errors during graceful restart. For certain types of mutexes (particularly SysV semaphores), we should expect to occasionally fail to obtain or release the mutex during restart processing. 
These mutex failures seem to be a pretty rare occurrence, but it was fatal.",https://github.com/apache/httpd/commit/f783262179220fd75ffa7c73b8086db473e217e7,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-6-14,309,5,5,31,5,Global,0.04658485386727,577,12386,Roy T. Fielding
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,f783262179220fd75ffa7c73b8086db473e217e7,server/mpm/prefork/prefork.c,"prefork MPM: Ignore mutex errors during graceful restart. For certain types of mutexes (particularly SysV semaphores), we should expect to occasionally fail to obtain or release the mutex during restart processing. 
These mutex failures seem to be a pretty rare occurrence, but it was fatal.",https://github.com/apache/httpd/commit/f783262179220fd75ffa7c73b8086db473e217e7,Jeff Trawick,trawick,https://github.com/trawick,Apache,2002-6-14,309,26,31,31,5,Global,0.135445503947503,1321,9753,Jim Jagielski
CVE-2017-7668,20,NA,,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"The HTTP strict parsing changes added in Apache httpd 2.2.32 and 2.4.24 introduced a bug in token list parsing, which allows ap_find_token() to search past the end of its input string. By maliciously crafting a sequence of request headers, an attacker may be able to cause a segmentation fault, or to force ap_find_token() to return an incorrect value.",https://www.cvedetails.com/cve/CVE-2017-7668/,20170411,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-7668 (cve.mitre.org)
The HTTP strict parsing changes added in 2.2.32 and 2.4.24 introduced a bug in token list parsing, which allows ap_find_token() to search past the end of its input string. By maliciously crafting a sequence of request headers, an attacker may be able to cause a segmentation fault, or to force ap_find_token() to return an incorrect value.", No,2017-5-6,2017-6-19,2017-7-11,f822bb3daee60ff11b4675b85dd88294c474ea89,server/util.c,"util.c: ensure all TEST_CHAR loops stop at the null terminator
In the aftermath of CVE-2017-7668, decouple the business logic (""is NULL a T_HTTP_CTRL"") from the postcondition (""must not go past the end of the string""). The NULL-byte classification in the TEST_CHAR table may change in the future.",https://github.com/apache/httpd/commit/f822bb3daee60ff11b4675b85dd88294c474ea89,Jacob Champion,jchampio,https://github.com/jchampio,Pivotal Software,2017-6-21,27,4,8,4,4,Local,0.00863213811421,78,9036,Roy T. Fielding
CVE-2003-0132,,NA,DoS,2003-4-11,2017-10-10,5,None,Remote,Low,Not required,None,None,Partial,"A memory leak in Apache 2.0 through 2.0.44 allows remote attackers to cause a denial of service (memory consumption) via large chunks of linefeed characters, which causes Apache to allocate 80 bytes for each linefeed.",https://www.cvedetails.com/cve/CVE-2003-0132/,20030313,Yes. Fixed in Apache HTTP Server 2.0.45: http://httpd.apache.org/security/vulnerabilities_20.html,"Simplify and shorten the code path for scanning request headers.Simplify and shorten the code path for scanning request headers.
This is the scanning logic that was subject to an unlimited search for a non-blank line between requests.  These lines each consumed 80 bytes - until memory was exhausted in the DoS attack identified by David Endler
[http://archive.apache.org/dist/httpd/patches/apply_to_2.0.44/denial_of_service_fix.patch]",No,,2004-4-2,2004-4-2,f87a674977d7f6ec101de1dbb44c5fee604cbac8,server/protocol.c,* server/protocol.c (ap_rgetline_core): Re-indent function after being skewed by CAN-2003-0132 fix: no functional change.,https://github.com/apache/httpd/commit/f87a674977d7f6ec101de1dbb44c5fee604cbac8,Joe Orton,notroj,,Red Hat,2004-1-26,351,143,291,143,148,Global,0.056194859992328,293,5214,Ryan Bloom
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f87f6812ede0844fc8e2c54af18e7ce99b705e69,support/win32/wintty.c,"A bit more clarity, and that's it for now.",https://github.com/apache/httpd/commit/f87f6812ede0844fc8e2c54af18e7ce99b705e69,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-5-14,16,5,7,5,2,Local,1,354,354,William A. Rowe Jr
CVE-2011-3368,20,1,,2011-10-5,2018-1-8,5,None,Remote,Low,Not required,Partial,None,None,"The mod_proxy module in the Apache HTTP Server 1.3.x through 1.3.42, 2.0.x through 2.0.64, and 2.2.x through 2.2.21 does not properly interact with use of (1) RewriteRule and (2) ProxyPassMatch pattern matches for configuration of a reverse proxy, which allows remote attackers to send requests to intranet servers via a malformed URI containing an initial @ (at sign) character.",https://www.cvedetails.com/cve/CVE-2011-3368/,20110830,"Yes. Fixed in Apache HTTP Server 1.3, 2.2.22, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html
http://httpd.apache.org/security/vulnerabilities_13.html","*) SECURITY: CVE-2011-3368 (cve.mitre.org)
Reject requests where the request-URI does not match the HTTP specification, preventing unexpected expansion of target URLs in some reverse proxy configurations.  [Joe Orton]",No,2011-9-16,2011-10-5,2012-1-31,f8a11311d73753e0440834c94173b26c9d7c922c,docs/manual/mod/mod_proxy.xml,- add note here in light of CVE-2011-3368,https://github.com/apache/httpd/commit/f8a11311d73753e0440834c94173b26c9d7c922c,Joe Orton,notroj,,Red Hat,2011-10-5,1,9,9,9,0,Local,0.001800720288115,9,4998,Andre Malo
CVE-2005-2088,,NA,XSS Bypass,2005-7-5,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"The Apache HTTP server before 1.3.34, and 2.0.x before 2.0.55, when acting as an HTTP proxy, allows remote attackers to poison the web cache, bypass web application firewall protection, and conduct XSS attacks via an HTTP request with both a ""Transfer-Encoding: chunked"" header and a Content-Length header, which causes Apache to incorrectly handle and forward the body of the request in a way that causes the receiving server to process it as a separate HTTP request, aka ""HTTP Request Smuggling.""",https://www.cvedetails.com/cve/CVE-2005-2088/,20050630,Yes. Fixed in Apache HTTP Server 2.0.55: http://httpd.apache.org/security/vulnerabilities_20.html ," *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     proxy: Correctly handle the Transfer-Encoding and Content-Length headers.  Discard the request Content-Length whenever T-E: chunked is used, always passing one of either C-L or T-E: chunked whenever the request includes a request body.  Resolves an entire class of proxy HTTP Request Splitting/Spoofing attacks.  [William Rowe]

 *) SECURITY: CVE-2005-2088 (cve.mitre.org)
     core: If a request contains both Transfer-Encoding and Content-Length headers, remove the Content-Length, mitigating some HTTP Request Splitting/Spoofing attacks.  [Paul Querna, Joe Orton]
[http://archive.apache.org/dist/httpd/CHANGES_2.0]",No,,2005-6-11,2005-10-14,f8b5b3fc7c9de26ad63cd0731ea2bdb33088c1aa,CHANGES,The request smuggling issue did get assigned CAN-2005-2088.,https://github.com/apache/httpd/commit/f8b5b3fc7c9de26ad63cd0731ea2bdb33088c1aa,Paul Querna,pquerna,https://github.com/pquerna,Rackspace,2005-7-8,23,2,4,2,2,Local,0.007751136833402,150,19352,Roy T. Fielding
CVE-2002-0061,Not defined,NA,Exec Code,2002-3-21,2016-10-17,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache for Win32 before 1.3.24, and 2.0.x before 2.0.34-beta, allows remote attackers to execute arbitrary commands via shell metacharacters (a | pipe character) provided as arguments to batch (.bat) or .cmd scripts, which are sent unfiltered to the shell interpreter, typically cmd.exe.",https://www.cvedetails.com/cve/CVE-2002-0061/,20030402,Yes. Fixed in Apache HTTP Server 1.3.24: http://httpd.apache.org/security/vulnerabilities_13.html ,"Apache for Win32 before 1.3.24 and 2.0.34-beta allows remote attackers to execute arbitrary commands via parameters passed to batch file CGI scripts.
Upgrade your Apache web server to: 1.3.24 (which should be available later today), or 2.0.34-beta (which will be published soon). Downloads are located at: http://www.apache.org/dist/httpd/",No,,,2002-3-22,f8dc4861446209184dd91b19a5696c23d59205f7,server/gen_test_char.c,"Correct our list of escape characters to include percent and the carriage return on Win32/OS2, and modify the \r \n escaping to account for the fact that Win32/OS2 don't pass these characters through a true argv[] mechansim, replace them with a whitespace since they effectively are for most applications.",https://github.com/apache/httpd/commit/f8dc4861446209184dd91b19a5696c23d59205f7,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-3-21,2,18,18,28,7,Local,0.103896103896104,24,231,Roy T. Fielding
CVE-2002-0061,Not defined,NA,Exec Code,2002-3-21,2016-10-17,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"Apache for Win32 before 1.3.24, and 2.0.x before 2.0.34-beta, allows remote attackers to execute arbitrary commands via shell metacharacters (a | pipe character) provided as arguments to batch (.bat) or .cmd scripts, which are sent unfiltered to the shell interpreter, typically cmd.exe.",https://www.cvedetails.com/cve/CVE-2002-0061/,20030402,Yes. Fixed in Apache HTTP Server 1.3.24: http://httpd.apache.org/security/vulnerabilities_13.html ,"Apache for Win32 before 1.3.24 and 2.0.34-beta allows remote attackers to execute arbitrary commands via parameters passed to batch file CGI scripts.
Upgrade your Apache web server to: 1.3.24 (which should be available later today), or 2.0.34-beta (which will be published soon). Downloads are located at: http://www.apache.org/dist/httpd/",No,,,2002-3-22,f8dc4861446209184dd91b19a5696c23d59205f7,server/util.c,"Correct our list of escape characters to include percent and the carriage return on Win32/OS2, and modify the \r \n escaping to account for the fact that Win32/OS2 don't pass these characters through a true argv[] mechansim, replace them with a whitespace since they effectively are for most applications.",https://github.com/apache/httpd/commit/f8dc4861446209184dd91b19a5696c23d59205f7,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-3-21,2,10,17,28,7,Local,0.087599544937429,385,4395,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f94cfbd199aeab8d1086460758119e94b47de76b,modules/proxy/mod_proxy.dsp,Allows Mod_proxy to be dynamically loaded on win32 systems,https://github.com/apache/httpd/commit/f94cfbd199aeab8d1086460758119e94b47de76b,Ian Holsman,,,,2001-5-11,16,6,24,383,74,Global,0.068376068376068,24,351,William A. Rowe Jr
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f94cfbd199aeab8d1086460758119e94b47de76b,modules/proxy/mod_proxy.h,Allows Mod_proxy to be dynamically loaded on win32 systems,https://github.com/apache/httpd/commit/f94cfbd199aeab8d1086460758119e94b47de76b,Ian Holsman,,,,2001-5-11,16,21,42,383,74,Global,0.035683942225998,42,1177,Roy T. Fielding
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f94cfbd199aeab8d1086460758119e94b47de76b,modules/proxy/proxy_connect.c,Allows Mod_proxy to be dynamically loaded on win32 systems,https://github.com/apache/httpd/commit/f94cfbd199aeab8d1086460758119e94b47de76b,Ian Holsman,,,,2001-5-11,16,4,8,383,74,Local,0.005792903692976,8,1381,Graham Leggett
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f94cfbd199aeab8d1086460758119e94b47de76b,modules/proxy/proxy_connect.dsp,Allows Mod_proxy to be dynamically loaded on win32 systems,https://github.com/apache/httpd/commit/f94cfbd199aeab8d1086460758119e94b47de76b,Ian Holsman,,,,2001-5-11,16,107,107,383,74,Global,1,107,107,Ian Holsman
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f94cfbd199aeab8d1086460758119e94b47de76b,modules/proxy/proxy_ftp.c,Allows Mod_proxy to be dynamically loaded on win32 systems,https://github.com/apache/httpd/commit/f94cfbd199aeab8d1086460758119e94b47de76b,Ian Holsman,,,,2001-5-11,16,6,12,383,74,Global,0.001672240802676,12,7176,Graham Leggett
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f94cfbd199aeab8d1086460758119e94b47de76b,modules/proxy/proxy_ftp.dsp,Allows Mod_proxy to be dynamically loaded on win32 systems,https://github.com/apache/httpd/commit/f94cfbd199aeab8d1086460758119e94b47de76b,Ian Holsman,,,,2001-5-11,16,107,107,383,74,Global,1,107,107,Ian Holsman
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f94cfbd199aeab8d1086460758119e94b47de76b,modules/proxy/proxy_http.c,Allows Mod_proxy to be dynamically loaded on win32 systems,https://github.com/apache/httpd/commit/f94cfbd199aeab8d1086460758119e94b47de76b,Ian Holsman,,,,2001-5-11,16,4,8,383,74,Global,0.002339865457736,8,3419,Graham Leggett
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f94cfbd199aeab8d1086460758119e94b47de76b,modules/proxy/proxy_http.dsp,Allows Mod_proxy to be dynamically loaded on win32 systems,https://github.com/apache/httpd/commit/f94cfbd199aeab8d1086460758119e94b47de76b,Ian Holsman,,,,2001-5-11,16,107,107,383,74,Global,1,107,107,Ian Holsman
CVE-2001-1342,Not defined,NA,DoS,2001-5-12,2016-10-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache before 1.3.20 on Windows and OS/2 systems allows remote attackers to cause a denial of service (GPF) via an HTTP request for a URI that contains a large number of / (slash) or other characters, which causes certain functions to dereference a null pointer. ",https://www.cvedetails.com/cve/CVE-2001-1342/,20020625,Yes. Fixed in Apache HTTP Server 1.3.20: http://httpd.apache.org/security/vulnerabilities_13.html ,"A vulnerability was found in the Win32 and OS2 ports of Apache 1.3. A client submitting a carefully constructed URI could cause a General Protection Fault in a child process, bringing up a message box which would have to be cleared by the operator to resume operation. This vulnerability introduced no identified means to compromise the server other than introducing a possible denial of service.",No,,,2001-5-22,f94cfbd199aeab8d1086460758119e94b47de76b,modules/proxy/proxy_util.c,Allows Mod_proxy to be dynamically loaded on win32 systems,https://github.com/apache/httpd/commit/f94cfbd199aeab8d1086460758119e94b47de76b,Ian Holsman,,,,2001-5-11,16,21,42,383,74,Global,0.009393871617088,42,4471,Chuck Murcko
CVE-2001-0925,Not defined,NA,,2001-3-12,2017-12-18,5,None,Remote,Low,Not required,Partial,None,None,"The default installation of Apache before 1.3.19 allows remote attackers to list directories instead of the multi view index.html file via an HTTP request for a path that contains many / (slash) characters, which causes the path to be mishandled by (1) mod_negotiation, (2) mod_dir, or (3) mod_autoindex",https://www.cvedetails.com/cve/CVE-2001-0925/,20020131,Yes. Fixed in Apache HTTP Server 1.3.9: http://httpd.apache.org/security/vulnerabilities_13.html ,The default installation can lead mod_negotiation and mod_dir or mod_autoindex to display a directory listing instead of the multiview index.html file if a very long path was created artificially by using many slashes.,No,,,2001-2-28,f98a027a87ba7a07be744c51ae75592df7b9a79a,modules/mappers/mod_negotiation.c,"A debatable change, to return (an absolute) 404 if some of the extentions of every matching file isn't decodable by mod_mime, instead of 500.
  Adopted 404 as the result, per Roy Fielding.",https://github.com/apache/httpd/commit/f98a027a87ba7a07be744c51ae75592df7b9a79a,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2001-8-7,4,1,2,1,1,Local,0.076042726347915,299,3932,Roy T. Fielding
CVE-2016-5387,284,NA,,2016-7-18,2018-1-18,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"The Apache HTTP Server through 2.4.23 follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an ""httpoxy"" issue. NOTE: the vendor states ""This mitigation has been assigned the identifier CVE-2016-5387"", in other words, this is not a CVE ID for a vulnerability.",https://www.cvedetails.com/cve/CVE-2016-5387/,20160610,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-5387 (cve.mitre.org)
     core: Mitigate [f]cgi ""httpoxy"" issues.
     [Dominic Scheirlinck <dominic vendhq.com>, Yann Ylavic]",No,2016-7-2,2016-7-18,2016-12-20,fb9d040b100b389352eb37e410bb501a57d5b387,docs/conf/httpd.conf.in,"httpoxy workarounds, first draft patch as published for all 2.2.x+ sources",https://github.com/apache/httpd/commit/fb9d040b100b389352eb37e410bb501a57d5b387,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-7-18,1,9,9,17,0,Global,0.03448275862069,24,696,Joshua Slive
CVE-2016-5387,284,NA,,2016-7-18,2018-1-18,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"The Apache HTTP Server through 2.4.23 follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an ""httpoxy"" issue. NOTE: the vendor states ""This mitigation has been assigned the identifier CVE-2016-5387"", in other words, this is not a CVE ID for a vulnerability.",https://www.cvedetails.com/cve/CVE-2016-5387/,20160610,Yes. Fixed in Apache HTTP Server 2.4.25: https://httpd.apache.org/security/vulnerabilities_24.html,"*) SECURITY: CVE-2016-5387 (cve.mitre.org)
     core: Mitigate [f]cgi ""httpoxy"" issues.
     [Dominic Scheirlinck <dominic vendhq.com>, Yann Ylavic]",No,2016-7-2,2016-7-18,2016-12-20,fb9d040b100b389352eb37e410bb501a57d5b387,server/util_script.c,"httpoxy workarounds, first draft patch as published for all 2.2.x+ sources",https://github.com/apache/httpd/commit/fb9d040b100b389352eb37e410bb501a57d5b387,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2016-7-18,1,8,8,17,0,Global,0.069345579793341,302,4355,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,fc3b8852144292fdda336973cd9addba4b8968f0,modules/http/byterange_filter.c,Put parsed ranges into an array and perform merges on that array.,https://github.com/apache/httpd/commit/fc3b8852144292fdda336973cd9addba4b8968f0,Stefan Fritsch,,,GeNUA mbH,2011-8-26,13,44,66,44,22,Local,0.155371900826446,188,1210,Justin Erenkrantz
CVE-2014-0098,20,NA,DoS,2014-3-18,2017-12-8,5,None,Remote,Low,Not required,None,None,Partial,The log_cookie function in mod_log_config.c in the mod_log_config module in the Apache HTTP Server before 2.4.8 allows remote attackers to cause a denial of service (segmentation fault and daemon crash) via a crafted cookie that is not properly handled during truncation.,https://www.cvedetails.com/cve/CVE-2014-0098/,20131203,"Yes. Fixed in Apache HTTP Server 2.2.27, 2.4.9: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2014-0098 (cve.mitre.org)
Clean up cookie logging with fewer redundant string parsing passes. Log only cookies with a value assignment. Prevents segfaults when logging truncated cookies.
[William Rowe, Ruediger Pluem, Jim Jagielski]",No,2014-2-25,2014-3-17,2014-3-26,fc53745d9be8ee52ac817d2fed47a79e48a0b773,CHANGES,Module identification,https://github.com/apache/httpd/commit/fc53745d9be8ee52ac817d2fed47a79e48a0b773,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2014-3-7,6,2,4,2,2,Local,0.058010330309475,2673,46078,Jim Jagielski
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,CHANGES,add MaxRanges directive institute a default limit of 200 (post-merge where applicable) Ranges before returning the complete resource. (minor mmn bump for core_dir_config addition),https://github.com/apache/httpd/commit/fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2011-8-28,13,4,4,40,2,Global,0.008058289905424,334,41448,Jim Jagielski
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,include/ap_mmn.h,add MaxRanges directive institute a default limit of 200 (post-merge where applicable) Ranges before returning the complete resource. (minor mmn bump for core_dir_config addition),https://github.com/apache/httpd/commit/fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2011-8-28,13,2,3,40,2,Global,0.031024930747922,56,1805,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,include/http_core.h,add MaxRanges directive institute a default limit of 200 (post-merge where applicable) Ranges before returning the complete resource. (minor mmn bump for core_dir_config addition),https://github.com/apache/httpd/commit/fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2011-8-28,13,3,3,40,2,Global,0.003243243243243,6,1850,Roy T. Fielding
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,modules/http/byterange_filter.c,add MaxRanges directive institute a default limit of 200 (post-merge where applicable) Ranges before returning the complete resource. (minor mmn bump for core_dir_config addition),https://github.com/apache/httpd/commit/fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2011-8-28,13,14,15,40,2,Global,0.025670945157526,44,1714,Jim Jagielski
CVE-2011-3192,399,1,DoS,2011-8-29,2017-9-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The byterange filter in the Apache HTTP Server 1.3.x, 2.0.x through 2.0.64, and 2.2.x through 2.2.19 allows remote attackers to cause a denial of service (memory and CPU consumption) via a Range header that expresses multiple overlapping ranges, as exploited in the wild in August 2011, a different vulnerability than CVE-2007-0086.",https://www.cvedetails.com/cve/CVE-2011-3192/,20110310,"Yes. Fixed in Apache HTTP Server 2.2.20, 2.0.65. http://httpd.apache.org/security/vulnerabilities_22.html 
http://httpd.apache.org/security/vulnerabilities_20.html"," *) SECURITY: CVE-2011-3192 (cve.mitre.org)
     core: Fix handling of byte-range requests to use less memory, to avoid denial of service. If the sum of all ranges in a request is larger than the original file, ignore the ranges and send the complete file.PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20.
PR 51748. [<lowprio20 gmail.com>]

*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20: A range of '0-' will now return 206 instead of 200. PR 51878. [Jim Jagielski]",No,,2011-8-20,2013-7-12,fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,server/core.c,add MaxRanges directive institute a default limit of 200 (post-merge where applicable) Ranges before returning the complete resource. (minor mmn bump for core_dir_config addition),https://github.com/apache/httpd/commit/fe1ee0a5d67941d7ccef63065b0dca8851eebfc9,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2011-8-28,13,17,17,40,2,Global,0.005619975812762,79,14057,Ryan Bloom
CVE-2017-7668,20,NA,,2017-6-19,2018-6-2,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"The HTTP strict parsing changes added in Apache httpd 2.2.32 and 2.4.24 introduced a bug in token list parsing, which allows ap_find_token() to search past the end of its input string. By maliciously crafting a sequence of request headers, an attacker may be able to cause a segmentation fault, or to force ap_find_token() to return an incorrect value.",https://www.cvedetails.com/cve/CVE-2017-7668/,20170411,"Yes. Fixed in Apache HTTP Server 2.2.34, 2.4.26: http://httpd.apache.org/security/vulnerabilities_22.html 
https://httpd.apache.org/security/vulnerabilities_24.html   ","*) SECURITY: CVE-2017-7668 (cve.mitre.org)
The HTTP strict parsing changes added in 2.2.32 and 2.4.24 introduced a bug in token list parsing, which allows ap_find_token() to search past the end of its input string. By maliciously crafting a sequence of request headers, an attacker may be able to cause a segmentation fault, or to force ap_find_token() to return an incorrect value.", No,2017-5-6,2017-6-19,2017-7-11,fe6a3061b0dfba6c769871d240de58756359430a,server/util.c,"short-circuit on NULL
Submitted By: jchampion",https://github.com/apache/httpd/commit/fe6a3061b0dfba6c769871d240de58756359430a,Eric Covener,covener,https://github.com/covener,"Apache, IBM",2017-5-26,27,2,6,2,4,Local,0.007334148238693,66,8999,Roy T. Fielding
CVE-2002-0654,Not defined,NA,,2002-9-5,2016-10-17,5,None,Remote,Low,Not required,Partial,None,None,"Apache 2.0 through 2.0.39 on Windows, OS2, and Netware allows remote attackers to determine the full pathname of the server via (1) a request for a .var file, which leaks the pathname in the resulting error message, or (2) via an error message that occurs when a script (child process) cannot be invoked.",https://www.cvedetails.com/cve/CVE-2002-0654/,20020702,Yes. Fixed in Apache HTTP Server 2.0.40: http://httpd.apache.org/security/vulnerabilities_20.html ,"low: Path revealing exposures (CVE-2002-0654)
A path-revealing exposure was present in multiview type map negotiation (such as the default error documents) where a module would report the full path of the typemapped .var file when multiple documents or no documents could be served. Additionally a path-revealing exposure in cgi/cgid when Apache fails to invoke a script. The modules would report ""couldn't create child process /path-to-script/script.pl"" revealing the full path of the script. [Reported to security team: 2002-7-5]
[Issue public: 2002-8-9]
[Update released: 2002-8-9]",No,2002-7-5,2002-8-9,2002-8-9,ffd5f985f3cfe05b4ae517e1827df8f23d2d82e9,server/mpm/winnt/mpm_winnt.c,"Continue the effort to back away from shared globals, in the get and put handles for child functions.  This gives us flexibility in the exit event to ultimately connect one exit event per child process.",https://github.com/apache/httpd/commit/ffd5f985f3cfe05b4ae517e1827df8f23d2d82e9,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-31,13,61,84,61,23,Local,0.297511743049384,4687,15754,Bill Stoddard
CVE-2002-0839,,NA,DoS,2002-10-11,2016-10-17,7.2,Admin,Local,Low,Not required,Complete,Complete,Complete,"The shared memory scoreboard in the HTTP daemon for Apache 1.3.x before 1.3.27 allows any user running as the Apache UID to send a SIGUSR1 signal to any process as root, resulting in a denial of service (process kill) or possibly other behaviors that would not normally be allowed, by modifying the parent[].pid and parent[].last_rtime segments in the scoreboard.",https://www.cvedetails.com/cve/CVE-2002-0839/,20020808,Yes. Fixed in Apache HTTP Server 1.3.27: http://httpd.apache.org/security/vulnerabilities_13.html ,"important: Shared memory permissions lead to local privilege escalation (CVE-2002-0839)
The permissions of the shared memory used for the scoreboard allows an attacker who can execute under the Apache UID to send a signal to any process as root or cause a local denial of service attack.",No,2001-11-11,2002-10-3,2002-10-3,ffd5f985f3cfe05b4ae517e1827df8f23d2d82e9,server/mpm/winnt/mpm_winnt.c,"Continue the effort to back away from shared globals, in the get and put handles for child functions.  This gives us flexibility in the exit event to ultimately connect one exit event per child process.",https://github.com/apache/httpd/commit/ffd5f985f3cfe05b4ae517e1827df8f23d2d82e9,William A. Rowe Jr,wrowe,https://github.com/wrowe,Apache,2002-7-31,309,61,84,61,23,Local,0.297511743049384,4687,15754,Bill Stoddard
